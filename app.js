! function() {
    "use strict";
    angular.module("signzySandbox", ["ngCookies", "ui.router", "toastr", "signzySandbox.config", "ngFileUpload", "ngPrettyJson", "720kb.datepicker"])
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        a.loading = !1, a.consent = !1;
        a.data = {
            files: [],
            response: {},
            name: "",
            yob: "",
            uid: "",
            pincode: "",
            birthDate: "",
            number: "",
            dob: "",
            doi: ""
        }, a.fileUpload = function(e, t) {
            o.File.upload(a.data.files[t]).then(function(e) {
                console.log("Forgery File Uploaded", e), a.data.files[t] = e.directURL
            }, function() {
                i.debug("File submitted, starting worker call", a.data.files)
            })
        }, a.aadhaar = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "aadhaar",
                essentials: {
                    images: a.data.files,
                    idType: "aadhaar",
                    verifyData: {
                        uid: a.data.uid,
                        name: a.data.name,
                        dob: a.data.yob,
                        pincode: a.data.pincode
                    }
                }
            };
            c.createPlexus("forgeries", e).then(function(e) {
                console.log("plexusObj", e), a.data.forgeryData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.forgeryData, a.data.error = e, console.log("identity error", e)
            })
        }, a.passport = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "passport",
                essentials: {
                    images: a.data.files,
                    idType: "passport",
                    verifyData: {
                        passportNumber: a.data.passportNumber,
                        name: a.data.name,
                        dob: a.data.birthDate,
                        pincode: a.data.pincode
                    }
                }
            };
            c.createPlexus("forgeries", e).then(function(e) {
                console.log("plexusObj", e), a.data.forgeryData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.forgeryData, a.data.error = e, console.log("identity error", e)
            })
        }, a.individualpan = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "individualPan",
                essentials: {
                    images: a.data.files,
                    idType: "individualPan",
                    verifyData: {
                        number: a.data.number,
                        name: a.data.name,
                        dob: a.data.dob
                    }
                }
            };
            c.createPlexus("forgeries", e).then(function(e) {
                console.log("plexusObj", e), a.data.forgeryData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.forgeryData, a.data.error = e, console.log("identity error", e)
            })
        }, a.businesspan = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "businessPan",
                essentials: {
                    images: a.data.files,
                    idType: "businessPan",
                    verifyData: {
                        number: a.data.number,
                        name: a.data.name,
                        doi: a.data.doi
                    }
                }
            };
            c.createPlexus("forgeries", e).then(function(e) {
                console.log("plexusObj", e), a.data.forgeryData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.forgeryData, a.data.error = e, console.log("identity error", e)
            })
        }, a.drivinglicense = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "drivingLicense",
                essentials: {
                    images: a.data.files,
                    idType: "drivingLicense",
                    verifyData: {
                        number: a.data.number,
                        name: a.data.name,
                        dob: a.data.dob,
                        pincode: a.data.pincode
                    }
                }
            };
            c.createPlexus("forgeries", e).then(function(e) {
                console.log("plexusObj", e), a.data.forgeryData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.forgeryData, a.data.error = e, console.log("identity error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("ForgeryController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d) {
        a.loading = !1, a.wrongInput = !1;
        a.today = (new Date).toDateString(), a.data = {
            name: "",
            type: "individual",
            category: {
                watchList: [],
                politicalExposure: [],
                negativeMedia: []
            }
        }, a.categoryData = {
            watchList: {
                sanctions: !0,
                finance: !0,
                terrorism: !0,
                ofac: !0,
                samgov: !0,
                medical: !0
            },
            politicalExposure: {
                gov: !0,
                soe: !0,
                pepd: !0
            },
            negativeMedia: {
                nmedia: !0
            }
        }, a.worldwatchSearch = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            for (var e = Object.keys(a.categoryData.watchList), t = 0; t < e.length; t++) 1 == a.categoryData.watchList[e[t]] && a.data.category.watchList.push(e[t]);
            for (var e = Object.keys(a.categoryData.politicalExposure), t = 0; t < e.length; t++) 1 == a.categoryData.politicalExposure[e[t]] && a.data.category.politicalExposure.push(e[t]);
            for (var e = Object.keys(a.categoryData.negativeMedia), t = 0; t < e.length; t++) 1 == a.categoryData.negativeMedia[e[t]] && a.data.category.negativeMedia.push(e[t]);
            console.log("data is ", a.data);
            var i = {
                task: "worldwatchGetRiskReport",
                essentials: a.data
            };
            d.createPlexus("amlcfts", i).then(function(e) {
                console.log("plexusObj", e), a.data.worldwatchData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.worldwatchData, a.data.error = e, console.log("plexus error", e)
            })
        }, a.directorNegativeDataSearch = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "directorNegativeList",
                essentials: {
                    din: a.data.din
                }
            };
            d.createPlexus("amlcfts", e).then(function(e) {
                console.log("plexusObj", e), a.data.directorNegativeData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.directorNegativeData, a.data.error = e, console.log("plexus error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("WorldWatchController", e), e.$inject = ["$state", "$scope", "$http", "$log", "Upload", "URLService", "$cookies", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        a.loading = !1, a.wrongInput = !1;
        a.data = {
            files: null != localStorage.getItem("panFile") ? [localStorage.getItem("panFile")] : []
        }, a.fileUpload = function(e, t) {
            o.File.upload(a.data.files[t]).then(function(e) {
                console.log("CosmoExtraction File Uploaded", e), a.data.files[t] = e.directURL
            }, function() {
                i.debug("File submitted, starting worker call", a.data.files)
            })
        }, a.extract = function(e) {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var t = {
                task: e,
                essentials: {
                    urls: a.data.files
                }
            };
            c.createPlexus("cosmoextractions", t).then(function(e) {
                console.log("plexusObj", e), a.data.extractedResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.extractedResponse, a.data.error = e, console.log("identity error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("CosmoExtractionController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e() {
        return {
            copyObject: function(e) {
                return e
            },
            appendObject: function(e, a, t) {
                if ("undefined" == typeof e && "undefined" == typeof a) return {};
                if ("undefined" == typeof e) return a;
                if ("undefined" == typeof a) return e;
                for (var i in e) t && "undefined" != typeof a[i] || (a[i] = e[i]);
                return a
            },
            dataURItoBlob: function(e) {
                var a;
                a = e.split(",")[0].indexOf("base64") >= 0 ? atob(e.split(",")[1]) : unescape(e.split(",")[1]);
                for (var t = e.split(",")[0].split(":")[1].split(";")[0], i = new Uint8Array(a.length), n = 0; n < a.length; n++) i[n] = a.charCodeAt(n);
                return new Blob([i], {
                    type: t
                })
            },
            arrayHandler: function(e, a, t) {
                return t ? -1 == e.indexOf(a) ? (e.push(a), e) : e : -1 == e.indexOf(a) ? e : (e.splice(e.indexOf(a), 1), e)
            },
            objectHandler: function(e, a, t, i) {
                return i ? angular.isUndefined(e[a]) || null == e[a] ? (e[a] = t, e) : e : (delete e[a], e)
            },
            blobToDataURI: function(e, a) {
                var t = new FileReader;
                t.onload = function(e) {
                    a(e.target.result)
                }, t.readAsDataURL(e)
            },
            dateFormatter: function(e) {
                var a = e.split("/");
                return a[1] + "/" + a[0] + "/" + a[2]
            },
            today: function(e) {
                var a = e.getDate(),
                    t = e.getMonth() + 1,
                    i = e.getFullYear();
                return 10 > a && (a = "0" + a), 10 > t && (t = "0" + t), e = t + "/" + a + "/" + i
            },
            dateDiff: function(e) {
                var a = new Date(e),
                    t = new Date,
                    i = Math.abs(t.getTime() - a.getTime()),
                    n = Math.ceil(i / 864e5);
                return n
            },
            dateSort: function(e) {
                for (var a = ["JANUARY", "FEBRUARY", "MARCH", "APRIL", "MAY", "JUNE", "JULY", "AUGUST", "SEPTEMBER", "OCTOBER", "NOVEMBER", "DECEMBER"], t = [], i = 0; i < a.length; i++)
                    for (var n = 0; n < e.length; n++) e[n].displayMonth.indexOf(a[i]) > -1 && t.push(e[n]);
                return t
            },
            getMonthlyData: function(e) {
                for (var a = [], t = 7; t >= 0; t--) {
                    var i = new Date;
                    i.setDate(i.getDate() - t);
                    var n = i.getDate();
                    10 > n && (n = "0" + n);
                    var s = i.getMonth() + 1;
                    10 > s && (s = "0" + s), a.push(n + "/" + s + "/" + i.getFullYear())
                }
                if (e && Array.isArray(e) && e.length > 0) {
                    for (var t = 0; t < a.length; t++) {
                        for (var r = !1, o = 0; o < e.length; o++) {
                            var i = e[o].date.split("T")[0].split("-")[2] + "/" + e[o].date.split("T")[0].split("-")[1] + "/" + e[o].date.split("T")[0].split("-")[0];
                            if (console.log("date", i), console.log("datas[i]", a[t]), console.log("name", name), console.log("weekData[j].productNam", e[o].productName), e[o].productName == name && i == a[t]) {
                                e[o].monthName = e[o].date.split("T")[0].split("-")[2] + "-" + e[o].date.split("T")[0].split("-")[1] + "-" + e[o].date.split("T")[0].split("-")[0], e[o].total = e[o].count;
                                for (var l = !1, d = 0; d < $scope.tableView.length; d++) e[o].monthName == $scope.tableView[d].monthName && (l = !0, $scope.tableView[d].total += e[o].total, $scope.tableView[d].count += e[o].count);
                                console.log("$scope.tableView)", $scope.tableView), l || $scope.tableView.push(e[o])
                            }
                        }
                        if (!r) {
                            ({
                                productName: name,
                                monthName: a[t].replace(/\//gi, "-"),
                                total: 0
                            });
                            totalData.push(0)
                        }
                    }
                    var c = {
                        chart: chart,
                        data: a,
                        day: "year"
                    };
                    return c
                }
                return null
            },
            assignObject: function(e) {
                var a = {};
                for (var t in e) e[t] && (a[t] = e[t]);
                return a
            }
        }
    }
    angular.module("signzySandbox").service("UtilsService", e), e.$inject = []
}(),
function() {
    "use strict";

    function e(e, a, t) {
        var i = {
            patron: a.baseUrl + "/api/v2/patrons/",
            snoop: a.baseUrl + "/api/v2/snoops",
            hunt: a.baseUrl + "/api/v2/hunts",
            cdn: a.baseUrl + "/cdn",
            pan: {
                info: a.versionUrl + "/identities/pan/info"
            },
            aadhaar: {
                info: a.versionUrl + "/identities/aadhaar/info"
            },
            drivingLicence: {
                info: a.versionUrl + "/identities/driving-licence/info"
            },
            passport: {
                info: a.versionUrl + "/identities/passport/info"
            },
            cheque: {
                info: a.versionUrl + "/documents/cheque/info"
            },
            itr: {
                data: a.baseUrl + "/api/v2/patrons/",
                info: a.versionUrl + "/documents/itr/info"
            },
            bankStatement: {
                data: a.baseUrl + "/api/v2/patrons/",
                info: a.versionUrl + "/documents/bank-statement/info"
            },
            roc: {
                info: a.versionUrl + "/plexus/roc/info",
                data: a.versionUrl + "/plexus/roc"
            },
            tin: {
                info: a.versionUrl + "/plexus/tin/info",
                data: a.baseUrl + "/api/v2/patrons/"
            },
            cst: {
                data: a.baseUrl + "/api/v2/patrons/"
            },
            centralservicetax: {
                data: a.baseUrl + "/api/v2/patrons/"
            },
            vat: {
                data: a.baseUrl + "/api/v2/patrons/"
            },
            iec: {
                info: a.versionUrl + "/plexus/iec/info",
                data: a.baseUrl + "/api/v2/patrons/"
            },
            icai: {
                info: a.versionUrl + "/plexus/icai/info",
                data: a.baseUrl + "/api/v2/patrons/"
            },
            icsi: {
                info: a.versionUrl + "/plexus/icsi/info",
                data: a.baseUrl + "/api/v2/patrons/"
            },
            icwai: {
                info: a.versionUrl + "/plexus/icwai/info",
                data: a.baseUrl + "/api/v2/patrons/"
            },
            ptrc: {
                info: a.versionUrl + "/plexus/ptrc/info",
                data: a.baseUrl + "/api/v2/patrons/"
            },
            snec: {
                info: a.versionUrl + "/plexus/snec/info",
                data: a.baseUrl + "/api/v2/patrons/"
            },
            udyogaadhaar: {
                info: a.versionUrl + "/plexus/udyog-aadhaar/info",
                data: a.baseUrl + "/api/v2/patrons/"
            },
            mci: {
                info: a.versionUrl + "/plexus/mci/info",
                data: a.baseUrl + "/api/v2/patrons/"
            },
            panAcknowledgement: {
                info: a.versionUrl + "/plexus/pan-acknowledgement/info",
                data: a.baseUrl + "/api/v2/patrons/"
            },
            vehicleregistration: {
                info: a.versionUrl + "/plexus/vehicleregistration/info",
                data: a.baseUrl + "/api/v2/patrons/"
            },
            forgery: {
                info: a.versionUrl + "/plexus/forgery/info",
                data: a.baseUrl + "/api/v2/patrons/"
            },
            emailVerification: {
                info: a.versionUrl + "/plexus/emailverification/info",
                data: a.baseUrl + "/api/v2/patrons/"
            },
            facematch: {
                info: a.versionUrl + "/plexus/facematch/info",
                data: a.baseUrl + "/api/v2/patrons/"
            },
            imps: {
                info: a.versionUrl + "/plexus/imps/info",
                data: a.baseUrl + "/api/v2/patrons/"
            },
            lpg: {
                info: a.versionUrl + "/plexus/lpg/info",
                data: a.baseUrl + "/api/v2/patrons/"
            },
            aadhaarauth: {
                info: a.versionUrl + "/plexus/aadhaarauth/info",
                data: a.baseUrl + "/api/v2/patrons/"
            },
            gstn: {
                info: a.versionUrl + "/plexus/gstn/info",
                data: a.baseUrl + "/api/v2/patrons/"
            },
            phone: {
                info: a.versionUrl + "/plexus/phone/info",
                data: a.baseUrl + "/api/v2/patrons/"
            },
            electricitybill: {
                info: a.versionUrl + "/plexus/electricitybill/info",
                data: a.baseUrl + "/api/v2/patrons/"
            },
            voterIdSearch: {
                info: a.versionUrl + "/plexus/voterid/info",
                data: a.baseUrl + "/api/v2/patrons/"
            },
            epfo: {
                info: a.versionUrl + "/plexus/epfo/info",
                data: a.baseUrl + "/api/v2/patrons/"
            },
            voterid: {
                info: a.versionUrl + "/plexus/voterid/info"
            },
            tan: {
                info: a.versionUrl + "/plexus/tan/info",
                data: a.baseUrl + "/api/v2/patrons/"
            },
            fssai: {
                info: a.versionUrl + "/plexus/fssai/info",
                data: a.baseUrl + "/api/v2/patrons/"
            },
            tradeLicense: {
                info: a.versionUrl + "/plexus/tradeLicense/info",
                data: a.baseUrl + "/api/v2/patrons/"
            },
            ngo: {
                info: a.versionUrl + "/plexus/ngo/info",
                data: a.versionUrl + "/plexus/ngo"
            },
            persist: {
                upload: a.persistUrl + "/api/files/upload"
            },
            rocSmartFill: {
                data: a.rocSmartFillUrl + "/smartfills/?model=organization&method=searchByName&name="
            },
            contracting: {
                create: a.contractingUrl + "/api"
            },
            videoVerification: {
                login: a.videoVerificationUrl + "/api/customers",
                iframe: a.videoVerificationUrl
            },
            esign: {
                login: a.esignIframeUrl + "/api/customers/login",
                createUrl: a.esignIframeUrl + "/api/customers/"
            },
            ekyc: {
                login: a.ekycIframeUrl + "/back/customers/login",
                createUrl: a.ekycIframeUrl + "/back/customers/",
                getData: a.ekycIframeUrl + "/back/callbacks"
            },
            backgroundCheck: {
                create: a.baseUrl + "/backchecks"
            },
            statics: {
                cityList: "https://signzy.xyz/cdn/files/cities.json",
                stateList: "https://signzy.xyz/cdn/files/states.json"
            },
            meter: {
                userReport: a.meterUrl + "/usagereports",
                adminReport: a.meterUrl + "/adminreports",
                excelCreator: a.meterUrl + "/excelcreators"
            },
            videoConf: {
                sessionStart: a.videoConfUrl + "/api/sessions",
                sessionData: a.videoConfUrl + "/api/sessions/all"
            },
            blender: {
                emailFetchCreate: a.blenderConfig + "/api/hdfc/fetch",
                emailFetchGetStatus: a.blenderConfig + "/api/hdfc/getData"
            },
            dashboard: a.dashboard
        };
        return {
            getURLs: function() {
                return i
            }
        }
    }
    angular.module("signzySandbox").service("URLService", e), e.$inject = ["$state", "EnvironmentConfig", "$cookies"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r) {
        return {
            File: {
                upload: function(t, s, o, l) {
                    if (e.debug("uploading file:", t), console.log("File = ", t), (!t.type || "" === t.type) && l && "" !== l || l && "" !== l && t.type !== l) try {
                        var d = new File([t], t.name, {
                            lastModified: t.lastModified,
                            type: l
                        });
                        t = d
                    } catch (c) {
                        console.log("Unable to set MIME Type => ", c)
                    }
                    console.log("File After Changing File Type = ", t), e.debug("with ttl:", s);
                    var u = a.defer();
                    if (!s) var s = "12 hrs";
                    return t && t.size <= (o || 1024e5) ? i.upload({
                        url: n.getURLs().persist.upload,
                        data: {
                            file: t,
                            ttl: s
                        }
                    }).then(function(a) {
                        console.log("File Uploaded => ", a), e.debug("file uploaded:", a), u.resolve(a.data.file)
                    }, function(e) {
                        u.reject(e.data)
                    }) : r.error("File size greater than 2MB is not supported!"), u.promise
                }
            }
        }
    }
    angular.module("signzySandbox").service("uploadSrv", e), e.$inject = ["$log", "$q", "$http", "Upload", "URLService", "$timeout", "toastr"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n) {
        return {
            createIdentity: function(s, r) {
                var o = a.defer(),
                    l = {
                        method: "POST",
                        url: i.getURLs().patron + n.get("userId") + "/identities",
                        headers: {
                            "Content-Type": "application/json",
                            Authorization: n.get("accessToken")
                        },
                        data: {
                            type: s,
                            email: "ankur.rand@signzy.com",
                            callbackUrl: "https://www.w3schools.com",
                            images: r
                        }
                    };
                return t(l).then(function(e) {
                    console.log("Received identity Request:", e), o.resolve(e.data)
                }, function(a) {
                    e.debug("identity Request Failed:", a), o.reject(a.data)
                }), o.promise
            },
            createBlenderRequest: function(s, r) {
                var o = a.defer(),
                    l = {
                        method: "POST",
                        url: i.getURLs().blender[s],
                        headers: {
                            "Content-Type": "application/json",
                            Authorization: n.get("accessToken")
                        },
                        data: r
                    };
                return console.log("req ", l), t(l).then(function(e) {
                    console.log("Received identity Request:", e), o.resolve(e.data)
                }, function(a) {
                    e.debug("identity Request Failed:", a), o.reject(a.data)
                }), o.promise
            },
            createSnoop: function(n, s, r, o) {
                var l = a.defer(),
                    d = {
                        method: "POST",
                        url: i.getURLs().snoop,
                        data: {
                            service: "Identity",
                            itemId: n,
                            accessToken: s,
                            task: r,
                            essentials: o
                        }
                    };
                return t(d).then(function(e) {
                    console.log("Received Snoop Request:", e), l.resolve(e.data)
                }, function(a) {
                    e.debug("Snoop Request Failed:", a), l.reject(a.data)
                }), l.promise
            },
            createPlexus: function(s, r) {
                var o = a.defer(),
                    l = {
                        method: "POST",
                        url: i.getURLs().patron + n.get("userId") + "/" + s,
                        headers: {
                            "Content-Type": "application/json",
                            Authorization: n.get("accessToken")
                        },
                        data: r
                    };
                return t(l).then(function(e) {
                    console.log("Received Plexus Request:", e), o.resolve(e.data)
                }, function(a) {
                    e.debug("Plexus Request Failed:", a), o.reject(a.data)
                }), o.promise
            },
            createOrganization: function() {
                var s = a.defer(),
                    r = {
                        method: "POST",
                        url: i.getURLs().patron + n.get("userId") + "/organizations",
                        headers: {
                            "Content-Type": "application/json",
                            Authorization: n.get("accessToken")
                        },
                        data: {
                            identifier: "U74900MH2011PTC216800",
                            service: "roc",
                            callbackUrl: "https://www.w3schools.com"
                        }
                    };
                return t(r).then(function(e) {
                    console.log("Received Or Request:", e), s.resolve(e.data)
                }, function(a) {
                    e.debug("Plexus Request Failed:", a), s.reject(a.data)
                }), s.promise
            },
            createHunt: function(n, s, r, o) {
                var l = a.defer(),
                    d = {
                        method: "POST",
                        url: i.getURLs().hunt,
                        headers: {
                            "Content-Type": "application/json"
                        },
                        data: {
                            target: "Organization",
                            itemId: n,
                            accessToken: s,
                            task: r,
                            essentials: o
                        }
                    };
                return t(d).then(function(e) {
                    console.log("Received Or Request:", e), l.resolve(e.data)
                }, function(a) {
                    e.debug("Hunt Request Failed:", a), l.reject(a.data)
                }), l.promise
            }
        }
    }
    angular.module("signzySandbox").service("httpSrv", e), e.$inject = ["$log", "$q", "$http", "URLService", "$cookies"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s) {
        var r = {},
            o = a.defer();
        return {
            grant: {
                run: function(a) {
                    console.log("datadatadatadatadatadata", a);
                    var n = {
                        method: "GET",
                        url: i.getURLs().patron + a.userId,
                        headers: {
                            "Content-Type": "application/json",
                            Authorization: a.id
                        },
                        data: {
                            test: "test"
                        }
                    };
                    return t(n).then(function(e) {
                        console.log("Received Grant List:", e);
                        e.data;
                        o.resolve(e.data)
                    }, function(a) {
                        e.debug("Failed to get Grant list:", a), o.reject(a.data)
                    }), o.promise
                },
                getUserData: function() {
                    return r
                },
                checkGrants: function(e, a) {
                    return a.grants.indexOf(e.grants) > -1 && ("" == e.levlGrants || a.levlGrants[e.grants].indexOf(e.levlGrants) > -1) ? !0 : !1
                },
                handleGrants: function(a) {
                    var i = {
                        method: "GET",
                        url: window.location.origin + "/assets/json/grants.json"
                    };
                    return t(i).then(function(e) {
                        o.resolve(e.data[a]), s.$broadcast("checkGrantsData", e.data[a])
                    }, function(a) {
                        e.debug("Failed to get Grant list:", a), o.reject(a.data)
                    }), o.promise
                },
                handleData: function(a) {
                    var i = {
                        method: "GET",
                        url: window.location.origin + "/assets/json/" + a + ".json"
                    };
                    return t(i).then(function(e) {
                        localStorage.setItem(a, JSON.stringify(e.data)), o.resolve(e.data)
                    }, function(a) {
                        e.debug("Failed toget data:", a), o.reject(a.data)
                    }), o.promise
                }
            }
        }
    }
    angular.module("signzySandbox").service("grantSrv", e), e.$inject = ["$log", "$q", "$http", "URLService", "$cookies", "$rootScope"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r) {
        return {
            getAllData: function(a) {
                var s = new Date,
                    o = {
                        task: "userBased",
                        username: a,
                        startTime: "2016-12-12 00:00:01",
                        endTime: n.today(s).split("/")[2] + "-" + n.today(s).split("/")[0] + "-" + n.today(s).split("/")[1] + " 23:59:59"
                    };
                e.debug("startDate", s), t.post(i.getURLs().meter.userReport, o).then(function(e) {
                    var a = (e.data.result.results, {
                        data: e.data.result.results,
                        timestamp: (new Date).getTime()
                    });
                    r.$broadcast("event:AllData", {
                        cacheObj: a
                    }), localStorage.setItem("totalProcessCache", JSON.stringify(a))
                }, function(a) {
                    e.debug("error", a)
                })
            },
            getWeeklyData: function(a) {
                var s = new Date,
                    o = new Date;
                o.setMonth(o.getMonth() - 1), e.debug("endDate", s), e.debug("startDate", o);
                var l = {
                    task: "dayBased",
                    patronId: a,
                    startTimestamp: n.today(o).split("/")[2] + "-" + n.today(o).split("/")[0] + "-" + n.today(o).split("/")[1] + " 00:00:01",
                    endTimestamp: n.today(s).split("/")[2] + "-" + n.today(s).split("/")[0] + "-" + n.today(s).split("/")[1] + " 23:59:59"
                };
                t.post(i.getURLs().meter.adminReport, l).then(function(a) {
                    var t = (a.data.result.results, {
                        data: a.data.result.results,
                        timestamp: (new Date).getTime()
                    });
                    e.debug("weeklyCache", t), r.$broadcast("event:weeklyData", {
                        cacheObj: t
                    }), localStorage.setItem("weeklyCache", JSON.stringify(t))
                }, function(a) {
                    e.debug("error", a)
                })
            },
            getMonthData: function(a) {
                var n = {
                    task: "monthlyBased",
                    patronId: a,
                    year: (new Date).getFullYear()
                };
                t.post(i.getURLs().meter.adminReport, n).then(function(e) {
                    var a = (e.data.result.results, {
                        data: e.data.result.results,
                        timestamp: (new Date).getTime()
                    });
                    r.$broadcast("event:monthlyData", {
                        cacheObj: a
                    }), localStorage.setItem("monthlyCache", JSON.stringify(a))
                }, function(a) {
                    e.debug("error", a)
                })
            },
            getReport: function(n, s) {
                var r = a.defer(),
                    o = {
                        sheetName: "Usage Logs",
                        header: "Usage Logs from ",
                        inputData: n
                    };
                return t.post(i.getURLs().meter.excelCreator, o).then(function(a) {
                    e.debug("Get Report Request:", a), r.resolve(a.data)
                }, function(a) {
                    e.debug("report Request Failed:", a), r.reject(a)
                }), r.promise
            }
        }
    }
    angular.module("signzySandbox").service("dashboardSrv", e), e.$inject = ["$log", "$q", "$http", "URLService", "UtilsService", "$cookies", "$rootScope"]
}(),
function() {
    "use strict";

    function e(e, a) {
        return {
            restrict: "E",
            transclude: !0,
            scope: {
                fileurl: "@fileurl",
                linktext: "@linktext",
                downloadtext: "@downloadtext"
            },
            template: '<a href="{{ fileurl }}" rel="external" download="{{downloadtext}}" target="_blank">{{ linktext }}</a>',
            link: function(e, a, t) {}
        }
    }
    angular.module("signzySandbox").directive("fileDownload", e), e.$inject = ["$http", "$state"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        a.loading = !1, a.wrongInput = !1, a.autoAuthenticated = !1, a.needAnswers = !1;
        a.data = {
            initiate: {
                firstName: "",
                middleName: "",
                lastName: "",
                gender: "",
                dateOfBirth: "",
                maritalStatus: "",
                phoneNo1: "",
                phoneNo2: "",
                email1: "",
                email2: "",
                pan: "",
                drivingLicense: "",
                voterId: "",
                passport: "",
                aadhaar: "",
                fatherName: "",
                motherName: "",
                spouseName: "",
                address1: "",
                village1: "",
                city1: "",
                state1: "",
                pin1: "",
                country1: "",
                address2: "",
                village2: "",
                city2: "",
                state2: "",
                pin2: "",
                country2: ""
            },
            authenticate: {
                reportId: localStorage.getItem("creditScoreReportId") ? localStorage.getItem("creditScoreReportId") : "",
                orderId: localStorage.getItem("creditScoreOrderId") ? localStorage.getItem("creditScoreOrderId") : "",
                userAns: ""
            },
            getReport: {
                reportId: localStorage.getItem("creditScoreReportId") ? localStorage.getItem("creditScoreReportId") : "",
                orderId: localStorage.getItem("creditScoreOrderId") ? localStorage.getItem("creditScoreOrderId") : ""
            },
            getData: {
                reportId: localStorage.getItem("creditScoreReportId") ? localStorage.getItem("creditScoreReportId") : "",
                orderId: localStorage.getItem("creditScoreOrderId") ? localStorage.getItem("creditScoreOrderId") : ""
            }
        }, a.getData = function(e) {
            console.log("type", e), d.grant.handleData("state").then(function(e) {
                a.data.stateList = JSON.parse(localStorage.getItem("state")), a.data.stateId = a.data.stateList[0].stateId
            }), d.grant.handleData("city").then(function(e) {
                a.data.cityList = JSON.parse(localStorage.getItem("city")), a.data.cityId = a.data.cityList[0].cityId
            })
        }, a.getData(), a.initiate = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "initiate",
                essentials: a.data.initiate
            };
            c.createPlexus("creditscores", e).then(function(e) {
                console.log("plexusObj", e), a.data.creditScoreData = e.result, e.result && e.result.reportId && localStorage.setItem("creditScoreReportId", e.result.reportId), e.result && e.result.orderId && localStorage.setItem("creditScoreOrderId", e.result.orderId), a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.creditScoreData, a.data.error = e, console.log("plexus error", e)
            })
        }, a.authenticate = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "authenticate",
                essentials: a.data.authenticate
            };
            c.createPlexus("creditscores", e).then(function(e) {
                if (console.log("plexusObj", e), a.data.creditScoreData = e.result, e.result && e.result.reportId && localStorage.setItem("creditScoreReportId", e.result.reportId), e.result && e.result.orderId && localStorage.setItem("creditScoreOrderId", e.result.orderId), e.result && e.result.status) {
                    var t = e.result.status;
                    "S01" == t || "S10" == t ? (a.autoAuthenticated = !0, a.needAnswers = !1) : "S02" == t ? (a.autoAuthenticated = !1, a.needAnswers = !1) : "S11" == t && (a.autoAuthenticated = !1, a.needAnswers = !0)
                }
                a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.creditScoreData, a.data.error = e, console.log("plexus error", e)
            })
        }, a.getReport = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "getReport",
                essentials: a.data.getReport
            };
            c.createPlexus("creditscores", e).then(function(e) {
                console.log("plexusObj", e), a.data.creditScoreData = e.result, e.result && e.result.reportId && localStorage.setItem("creditScoreReportId", e.result.reportId), e.result && e.result.orderId && localStorage.setItem("creditScoreOrderId", e.result.orderId), a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.creditScoreData, a.data.error = e, console.log("plexus error", e)
            })
        }, a.getData = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "getData",
                essentials: a.data.getData
            };
            c.createPlexus("creditscores", e).then(function(e) {
                console.log("plexusObj", e), a.data.creditScoreData = e.result, e.result && e.result.reportId && localStorage.setItem("creditScoreReportId", e.result.reportId), e.result && e.result.orderId && localStorage.setItem("creditScoreOrderId", e.result.orderId), a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.creditScoreData, a.data.error = e, console.log("plexus error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("CreditScoreController", e), e.$inject = ["$state", "$scope", "$http", "$log", "Upload", "URLService", "UtilsService", "$cookies", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l) {
        a.loading = !1, a.wrongInput = !1;
        a.data = {
            vatNumber: ""
        }, a.isValid = function() {
            return is_valid("vat", a.data.vatNumber) ? !0 : !1
        }, a.search = function() {
            if (a.loading = !0, a.wrongInput = !1, delete a.data.error, a.isValid()) {
                var e = {
                    essentials: {
                        vatNumber: a.data.vatNumber
                    }
                };
                l.createPlexus("vats", e).then(function(e) {
                    console.log("plexusObj", e), a.data.vatData = e.result[0], a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.tinData, a.data.error = e, console.log("identity error", e)
                })
            } else a.wrongInput = !0, a.loading = !1
        }
    }
    angular.module("signzySandbox").controller("VatController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "$cookies", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l) {
        a.loading = !1, a.wrongInput = !1, a.wrongInputUdyamNumber = !1;
        a.data = {
            udyamNumber: ""
        }, a.isvalidUdyamNumber = function() {
            return new RegExp(/^(UDYAM)-([A-Z]{2})-(\d{2})-(\d{7})$/i).test(a.data.udyamNumber)
        }, a.searchUdyamRegistration = function() {
            if (a.loading = !0, a.wrongInputUdyamNumber = !1, delete a.data.error, a.isvalidUdyamNumber()) {
                var e = {
                    essentials: {
                        udyamNumber: a.data.udyamNumber
                    }
                };
                l.createPlexus("udyamregistrations", e).then(function(e) {
                    console.log("plexusObj", e), a.data.searchData = e.result, a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.searchData, a.data.error = e, console.log("identity error", e)
                })
            } else a.wrongInputUdyamNumber = !0, a.loading = !1
        }
    }
    angular.module("signzySandbox").controller("UdyamRegistrationController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "$cookies", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        a.loading = !1, a.wrongInput = !1;
        a.data = {
            initiate: {
                name: "",
                mobileNumber: "",
                email: "",
                udinNumber: ""
            },
            getInfo: {
                token: null != localStorage.getItem("udinToken") ? localStorage.getItem("udinToken") : "",
                otp: ""
            }
        }, a.udinInitiate = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "initiate",
                essentials: a.data.initiate
            };
            c.createPlexus("udin", e).then(function(e) {
                console.log("plexusObj", e), a.data.responseData = e.result, e && e.result && e.result.token && localStorage.setItem("udinToken", e.result.token), a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.responseData, a.data.error = e, console.log("plexus error", e)
            })
        }, a.udinGetInfo = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "getInfo",
                essentials: a.data.getInfo
            };
            c.createPlexus("udin", e).then(function(e) {
                console.log("plexusObj", e), a.data.responseData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.responseData, a.data.error = e, console.log("plexus error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("UdinController", e), e.$inject = ["$state", "$scope", "$http", "$log", "Upload", "URLService", "UtilsService", "$cookies", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l) {
        a.loading = !1, a.wrongInput = !1, a.wrongInputuamNumber = !1, a.wrongInputaadhaarNumber = !1;
        a.data = {
            uamNumber: "",
            aadhaarNumber: ""
        }, a.isvalidUAM = function() {
            return is_valid("uam", a.data.uamNumber) ? !0 : !1
        }, a.isvalidUID = function() {
            return is_valid("aadhaar", a.data.aadhaarNumber) ? !0 : !1
        }, a.searchUAM = function() {
            if (a.loading = !0, a.wrongInputaadhaarNumber = !1, delete a.data.error, a.isvalidUAM()) {
                var e = {
                    type: "uam",
                    essentials: {
                        uamNumber: a.data.uamNumber
                    }
                };
                l.createPlexus("udyogaadhaars", e).then(function(e) {
                    console.log("plexusObj", e), a.data.searchData = e.result, a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.searchData, a.data.error = e, console.log("identity error", e)
                })
            } else a.wrongInputuamNumber = !0, a.loading = !1
        }, a.searchUAMandUID = function() {
            if (a.loading = !0, a.wrongInputuamNumber = !1, delete a.data.error, a.wrongInputaadhaarNumber = !1, a.isvalidUAM())
                if (a.isvalidUID()) {
                    var e = {
                        type: "acknowledgement",
                        essentials: {
                            uamNumber: a.data.uamNumber,
                            aadhaarNumber: a.data.aadhaarNumber
                        }
                    };
                    l.createPlexus("udyogaadhaars", e).then(function(e) {
                        console.log("plexusObj", e), a.data.searchData = e.result, a.loading = !1
                    }, function(e) {
                        a.loading = !1, delete a.data.searchData, a.data.error = e, console.log("plexus error", e)
                    })
                } else a.wrongInputaadhaarNumber = !0, a.loading = !1;
            else a.wrongInputuamNumber = !0, a.loading = !1
        }
    }
    angular.module("signzySandbox").controller("UdhyogAadhaarController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "$cookies", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l) {
        a.loading = !1, a.wrongInput = !1;
        a.data = {
            tinNumber: ""
        }, a.isValid = function() {
            return is_valid("tin", a.data.tinNumber) ? !0 : !1
        }, a.search = function() {
            if (a.loading = !0, delete a.data.error, a.wrongInput = !1, a.isValid()) {
                var e = {
                    essentials: {
                        tinNumber: a.data.tinNumber
                    }
                };
                l.createPlexus("tins", e).then(function(e) {
                    console.log("plexusObj", e), a.data.tinData = e.result[0], a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.tinData, a.data.error = e, console.log("identity error", e)
                })
            } else a.wrongInput = !0, a.loading = !1
        }
    }
    angular.module("signzySandbox").controller("TinController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "$cookies", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        a.loading = !1;
        a.data = {
            tan: "",
            companyName: ""
        }, a.verify = function() {
            a.loading = !0, delete a.data.error, a.wrongInput = !1;
            var e = {
                essentials: {
                    companyName: a.data.companyName,
                    tan: a.data.tan
                }
            };
            c.createPlexus("tans", e).then(function(e) {
                console.log("plexusObj", e), a.data.tanResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.tanResponse, a.data.error = e, console.log("plexus error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("TANController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        a.loading = !1, a.wrongInput = !1;
        a.states = [{
            id: 1,
            name: "West Bengal"
        }, {
            id: 2,
            name: "Telangana"
        }, {
            id: 3,
            name: "Uttar Pradesh"
        }, {
            id: 4,
            name: "Rajasthan"
        }, {
            id: 5,
            name: "Haryana"
        }, {
            id: 6,
            name: "Delhi"
        }, {
            id: 7,
            name: "Jammu And Kashmir"
        }, {
            id: 8,
            name: "Jharkhand"
        }, {
            id: 9,
            name: "Madhya Pradesh"
        }, {
            id: 10,
            name: "Maharashtra"
        }, {
            id: 11,
            name: "Karnataka"
        }], a.data = {
            registrationNumber: ""
        }, a.categories = [{
            id: 1,
            name: "SHOP I"
        }, {
            id: 2,
            name: "COMMERCIAL II"
        }, {
            id: 3,
            name: "RESTAURANT AND EATING HOUSE IV"
        }, {
            id: 4,
            name: "RESIDENTIAL HOTEL III"
        }, {
            id: 5,
            name: "THEATRE - PUBLIC AMUSEMENT V"
        }], a.search = function() {
            a.loading = !0, delete a.data.error, a.wrongInput = !1;
            var e = {
                essentials: {
                    registrationNumber: a.data.registrationNumber,
                    state: a.data.state
                }
            };
            "Maharashtra" == a.data.state && (e.essentials.category = a.data.category), c.createPlexus("snecs", e).then(function(e) {
                console.log("plexusObj", e), a.data.ptrcResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.ptrcResponse, a.data.error = e, console.log("identity error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("SnecController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a) {
        var t = {
                companyDocuments: {
                    cin: "U74999PN2015PTC157118",
                    callbackUrl: "https://www.signzy.com",
                    requestId: "1189",
                    files: [{
                        documentType: "COI",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/779803/download/7Dr7rJxZ4Us1tKQ8r3Yv7L3K62QisV8UhNooweOfbMCmmGXb41.pdf",
                        documentName: "CERTIFICATE OF INCORPORATION-031115%03-11-2015.pdf",
                        documentFilingDate: "03/11/2015"
                    }, {
                        documentType: "COI",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/779805/download/imZrJ04xkuzBcLMOGQ1niJKfmCL0gIrZJQMPHOkEl79kkU094L.pdf",
                        documentName: "CERTIFICATE OF INCORPORATION-031115%03-11-2015.pdf",
                        documentFilingDate: "03/11/2015"
                    }, {
                        documentType: "AOA",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/779801/download/hymoWCIpoSyBiWGVjSPprC4Uimjg3eB46pXVfi8b0pMGPXgZsE.pdf",
                        documentName: "ACKNOWLEDGEMENT OF STAMP DUTY AOA PAYMENT-031115%03-11-2015.pdf",
                        documentFilingDate: "03/11/2015"
                    }, {
                        documentType: "MOA",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/779800/download/VkqFlc2A7JANRYhIH7NaOSb260Kz0TPWpgKvcvnwdmaN76er1Z.pdf",
                        documentName: "ACKNOWLEDGEMENT OF STAMP DUTY MOA PAYMENT-031115%03-11-2015.pdf",
                        documentFilingDate: "03/11/2015"
                    }, {
                        documentType: "AOA",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/779804/download/JCikRgeihpESEFNSVgFeIEGTAEgiUJ8s8KipUNZ7ktanUtCoXX.pdf",
                        documentName: "ALTERED ARTICLES OF ASSOCIATION-01092017%01-09-2017.pdf",
                        documentFilingDate: "01/09/2017"
                    }, {
                        documentType: "MOA",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/779808/download/jxoGyAF2yEeKje20Lc4t6qAHO0ZatLGRU0lZNYXg2J37sxeHmS.pdf",
                        documentName: "ALTERED MEMORANDUM OF ASSCIATION-08122016%08-12-2016.pdf",
                        documentFilingDate: "08/12/2016"
                    }, {
                        documentType: "MOA",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/779802/download/J0BmmWLcV4J6YIJr0YK0aGS007NY5eUW2dr98XJGUJJXiotxTw.pdf",
                        documentName: "ALTERED MEMORANDUM OF ASSCIATION-10102018%10-10-2018.pdf",
                        documentFilingDate: "10/10/2018"
                    }, {
                        documentType: "MOA",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/779807/download/vaYLvsfXqQrmhOvA4jKnWIV2t9Jx7goDDSLWeHT67vbNX8Fx8X.pdf",
                        documentName: "ALTERED MEMORANDUM OF ASSOCIATION-08122016%08-12-2016.pdf",
                        documentFilingDate: "08/12/2016"
                    }, {
                        documentType: "AOA",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/779809/download/tEgz1fjByeeYq3LgoZd9Z55SdjE8afHNnD3lq6f1SsVNv6YOJC.pdf",
                        documentName: "AOA - ARTICLES OF ASSOCIATION-301015%30-10-2015.pdf",
                        documentFilingDate: "30/10/2015"
                    }, {
                        documentType: "MOA",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/779806/download/vlqYmmlJLRBTVoJ3rhu5xtb8SPvwIRP0rDjSUgmhROcs1NR4MP.pdf",
                        documentName: "MOA - MEMORANDUM OF ASSOCIATION-301015%30-10-2015.pdf",
                        documentFilingDate: "30/10/2015"
                    }],
                    status: "FULFILLED",
                    updatedTimestamp: 1539857821,
                    isComplete: 1
                }
            },
            i = {
                companyDocuments: {
                    cin: "U74999PN2015PTC157118",
                    callbackUrl: "https://qa.signzy.xyz/callback/aditiposts",
                    requestId: "62021de39c5d6c294250c042",
                    files: [{
                        documentType: "Certificates",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427908/download/8b351f92e9e24e0ba3b9856a40ebeae138c71e8f30cc47da84799f0bc8482fc2.pdf",
                        documentName: "Certificate of Incorporation-031115.PDF",
                        documentFilingDate: "03/11/2015",
                        documentStatus: "completed"
                    }, {
                        documentType: "Change in Directors",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427962/download/6a665d4cd202487ea3b9c6abb41524c60ae4c81aae5a417fb10c17b97ff3d3ca.pdf",
                        documentName: "Form DIR-12-13022021_signed",
                        documentFilingDate: "13/02/2021",
                        documentStatus: "completed"
                    }, {
                        documentType: "Change in Directors",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427958/download/24ba84e877f6420490af1cfd861ca1362362d92c092f49878d60d1cc530b7ce1.pdf",
                        documentName: "Form DIR-12-01012021_signed",
                        documentFilingDate: "01/01/2021",
                        documentStatus: "completed"
                    }, {
                        documentType: "Change in Directors",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427916/download/454a89f1f03146a68cbefe465b9cfc7b676fa6f5780d4265ae20013ba35abef1.pdf",
                        documentName: "Declaration of the appointee director, Managing director, in Form No. DIR-2;-29122020",
                        documentFilingDate: "29/12/2020",
                        documentStatus: "completed"
                    }, {
                        documentType: "Change in Directors",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427897/download/9599ac08ef8f47438eb9f148168dd424db4451763d7b430cbc0646d2bea6a48e.pdf",
                        documentName: "Declaration of the appointee director, Managing director, in Form No. DIR-2;-29122020",
                        documentFilingDate: "29/12/2020",
                        documentStatus: "completed"
                    }, {
                        documentType: "Change in Directors",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427911/download/dd03d5023c094e3fb354658fbd641b00e163fa24f2a840ee8e7edde2ecd9f354.pdf",
                        documentName: "Optional Attachment-(1)-29122020",
                        documentFilingDate: "29/12/2020",
                        documentStatus: "completed"
                    }, {
                        documentType: "Change in Directors",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427902/download/f390ebdf974e4388a8cc5876054f6803884560758beb4ddba431a587861f48b9.pdf",
                        documentName: "Optional Attachment-(2)-29122020",
                        documentFilingDate: "29/12/2020",
                        documentStatus: "completed"
                    }, {
                        documentType: "Change in Directors",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427931/download/2ca51f89a829423fa0ea50ac3998c7f069e81aa9aba34469b37e5d4984f4c6c5.pdf",
                        documentName: "Optional Attachment-(2)-29122020",
                        documentFilingDate: "29/12/2020",
                        documentStatus: "completed"
                    }, {
                        documentType: "Change in Directors",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427900/download/8f6201f7ed384c03bd5ff2d64e59b80546c3518d3dbd49428186f7c49e1e51a4.pdf",
                        documentName: "Optional Attachment-(3)-29122020",
                        documentFilingDate: "29/12/2020",
                        documentStatus: "completed"
                    }, {
                        documentType: "Change in Directors",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427923/download/7ae990ef46f844c89d9106ef0bb58c74043b15725a834d099efed606a77ead96.pdf",
                        documentName: "Form DIR-12-15102019_signed",
                        documentFilingDate: "15/10/2019",
                        documentStatus: "completed"
                    }, {
                        documentType: "Change in Directors",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427896/download/6d1fe1c06861449da1c0edbf934d57a311fb470962ef472cb58aae635923cc89.pdf",
                        documentName: "Optional Attachment-(1)-15102019",
                        documentFilingDate: "15/10/2019",
                        documentStatus: "completed"
                    }, {
                        documentType: "Change in Directors",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427907/download/5b8ace8809c047d782749dd40a4faa85c76e5f99e2d040e3a75c2388f590c2d5.pdf",
                        documentName: "Declaration of the appointee director, Managing director, in Form No. DIR-2;-04042019",
                        documentFilingDate: "04/04/2019",
                        documentStatus: "completed"
                    }, {
                        documentType: "Change in Directors",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427936/download/f62becabc5d24ddaa06b8e5df5d268b1b23c8658058f4231ad4726176ea9bf20.pdf",
                        documentName: "Form DIR-12-04042019_signed",
                        documentFilingDate: "04/04/2019",
                        documentStatus: "completed"
                    }, {
                        documentType: "Change in Directors",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427895/download/209cad37fa10404599f3620834011e90fd8f4a8c6d7f4535b6842a9e0eb6d20c.pdf",
                        documentName: "Interest in other entities;-04042019",
                        documentFilingDate: "04/04/2019",
                        documentStatus: "completed"
                    }, {
                        documentType: "Change in Directors",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427891/download/586fd0f0eb904853b1b3f66390552e5549a40fc575df4fae9c2d8bed337b60b0.pdf",
                        documentName: "Optional Attachment-(1)-04042019",
                        documentFilingDate: "04/04/2019",
                        documentStatus: "completed"
                    }, {
                        documentType: "Change in Directors",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427892/download/1819babfcd1e45a09628ed8ff22607c99ca950c7cb9b41549264ff8aec29c7c2.pdf",
                        documentName: "Optional Attachment-(2)-04042019",
                        documentFilingDate: "04/04/2019",
                        documentStatus: "completed"
                    }, {
                        documentType: "Change in Directors",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427904/download/44a515dcbdaf4c7daaea0cb04b96d68bc3383f56643543fc87a4cf6f5f053917.pdf",
                        documentName: "Optional Attachment-(3)-04042019",
                        documentFilingDate: "04/04/2019",
                        documentStatus: "completed"
                    }, {
                        documentType: "Change in Directors",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427905/download/4964ca81e75c4c6eb7ca03fac996daa3046e6e7fd8604820ab10a60a6090e35d.pdf",
                        documentName: "Declaration of the appointee director, Managing director, in Form No. DIR-2;-13072018",
                        documentFilingDate: "13/07/2018",
                        documentStatus: "completed"
                    }, {
                        documentType: "Change in Directors",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427934/download/d3109bd8f0b84ba5bb14f8726b1556ab423e532bb21c445eb2558009b50f7ec8.pdf",
                        documentName: "Form DIR-12-13072018_signed",
                        documentFilingDate: "13/07/2018",
                        documentStatus: "completed"
                    }, {
                        documentType: "Change in Directors",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427901/download/b73fb2cd637b4a30a9a3d791699b01eb4319e7227d574b73a6f7f0f0032d9903.pdf",
                        documentName: "Optional Attachment-(1)-13072018",
                        documentFilingDate: "13/07/2018",
                        documentStatus: "completed"
                    }, {
                        documentType: "Change in Directors",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427898/download/4b758d4aa3394f77b85bf068ab670ec8b36a38cd46334e7095d638fc6b6447a3.pdf",
                        documentName: "Optional Attachment-(2)-13072018",
                        documentFilingDate: "13/07/2018",
                        documentStatus: "completed"
                    }, {
                        documentType: "Change in Directors",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427894/download/021efa00c40d4b5e920a54cd02a1a4f530e9bf891f1a454bb920af15c2cd460d.pdf",
                        documentName: "Evidence of cessation;-17012017",
                        documentFilingDate: "17/01/2017",
                        documentStatus: "completed"
                    }, {
                        documentType: "Change in Directors",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427942/download/a91a49ba005e48c78198d30cdeb1512c1ceeb2177ffe4730ae9a6832ef57738d.pdf",
                        documentName: "Form DIR-12-17012017_signed",
                        documentFilingDate: "17/01/2017",
                        documentStatus: "completed"
                    }, {
                        documentType: "Change in Directors",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427899/download/594b56fdd376427f88b9ce1fdcb06085cdfe4aa2b9f44e099e3301312f4c35be.pdf",
                        documentName: "Notice of resignation;-17012017",
                        documentFilingDate: "17/01/2017",
                        documentStatus: "completed"
                    }, {
                        documentType: "Change in Directors",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427915/download/4083bc5279f9481ab7690eaa69ae2cd9743582738b364d1292b085a1eb125755.pdf",
                        documentName: "Declaration of the appointee director, Managing director, in Form No. DIR-2;-28112016",
                        documentFilingDate: "28/11/2016",
                        documentStatus: "completed"
                    }, {
                        documentType: "Change in Directors",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427952/download/4596ca86737443c7a613c2b246f463f1e071576013d644a2bbe1ce77b12c63d9.pdf",
                        documentName: "Form DIR-12-28112016_signed",
                        documentFilingDate: "28/11/2016",
                        documentStatus: "completed"
                    }, {
                        documentType: "Change in Directors",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427913/download/2d9027f7c21c4ce0bfd1fd3fbd2db014e6a490fa1b864ceabc9d2bd09ea99a04.pdf",
                        documentName: "Letter of appointment;-28112016",
                        documentFilingDate: "28/11/2016",
                        documentStatus: "completed"
                    }, {
                        documentType: "Change in Directors",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427893/download/16a71f8333714c37b153d3d6dc0ea1e6a158b0149ea749808504b533e0d44a1f.pdf",
                        documentName: "Optional Attachment-(1)-28112016",
                        documentFilingDate: "28/11/2016",
                        documentStatus: "completed"
                    }, {
                        documentType: "Change in Directors",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427903/download/49b9bc8ab59b4042864496da9caf0d7404188310a0bd46a5b41b3a731bca8095.pdf",
                        documentName: "Optional Attachment-(2)-28112016",
                        documentFilingDate: "28/11/2016",
                        documentStatus: "completed"
                    }, {
                        documentType: "Incorporation Documents",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427909/download/99cc780756ea4dc6bb7e32251ff01e4bb8338bcdf8e84802a60a5fad9947f602.pdf",
                        documentName: "Certificate of Incorporation-031115.PDF",
                        documentFilingDate: "03/11/2015",
                        documentStatus: "completed"
                    }, {
                        documentType: "Incorporation Documents",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427963/download/eb549934213c4163955f46c4ef65d6f4a68ab6165ec949a395ecd6fa481ca831.pdf",
                        documentName: "Form INC-29-301015.PDF",
                        documentFilingDate: "30/10/2015",
                        documentStatus: "completed"
                    }, {
                        documentType: "Annual Returns and Balance Sheet eForms",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427957/download/d0ea3c870a2e4904be42413caf8894c9922577e355cd4661b6bc0b4cda9a7c56.pdf",
                        documentName: "Form MGT-7A-27122021_signed",
                        documentFilingDate: "27/12/2021",
                        documentStatus: "completed"
                    }, {
                        documentType: "Annual Returns and Balance Sheet eForms",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427970/download/14c2a09f50604817a9e2518b29e96c9ede910a3bbd81489a9b36253d5941efb8.pdf",
                        documentName: "Form AOC-4-13122021_signed",
                        documentFilingDate: "13/12/2021",
                        documentStatus: "completed"
                    }, {
                        documentType: "Annual Returns and Balance Sheet eForms",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427945/download/aaeb31f18243466eb4fa43286937538a1b4e2dcf0fef4320ab658f2ccba8f4d3.pdf",
                        documentName: "Form MGT-7-04032021_signed",
                        documentFilingDate: "04/03/2021",
                        documentStatus: "completed"
                    }, {
                        documentType: "Annual Returns and Balance Sheet eForms",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427951/download/8f60299d877d4cf690cbfb4bf405b47744aa1c41fb124f2e8a47cc4d1275c198.pdf",
                        documentName: "Form AOC-4-07022021_signed",
                        documentFilingDate: "07/02/2021",
                        documentStatus: "completed"
                    }, {
                        documentType: "Annual Returns and Balance Sheet eForms",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427933/download/dcc53a9528764a3098cdfa4a023b5579e8916d2eed0b4da8b2ae878bea61ab9d.pdf",
                        documentName: "Form MGT-7-23112019_signed",
                        documentFilingDate: "23/11/2019",
                        documentStatus: "completed"
                    }, {
                        documentType: "Annual Returns and Balance Sheet eForms",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427964/download/fd0f05d54fb54aca94890c43c6a3015af63994ec12b34ea39433b8171914fb45.pdf",
                        documentName: "Form AOC-4-16112019_signed",
                        documentFilingDate: "16/11/2019",
                        documentStatus: "completed"
                    }, {
                        documentType: "Annual Returns and Balance Sheet eForms",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427959/download/f07fba54e7a04199aa5e1da8b9490a28a193f4dd84a847409e1a023a3d2c0a75.pdf",
                        documentName: "Form MGT-7-02012019_signed",
                        documentFilingDate: "02/01/2019",
                        documentStatus: "completed"
                    }, {
                        documentType: "Annual Returns and Balance Sheet eForms",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427967/download/f6a62c69bd674c8aa786bf899c1af0527fdeb51350384c23a5d51d6c117a6f74.pdf",
                        documentName: "Form AOC-4-23112018_signed",
                        documentFilingDate: "23/11/2018",
                        documentStatus: "completed"
                    }, {
                        documentType: "Annual Returns and Balance Sheet eForms",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427969/download/c658f6d754f645a3876cfa39c0a6be206a01abe721384182944cd3c211fcab83.pdf",
                        documentName: "Form AOC-4-10122017_signed",
                        documentFilingDate: "10/12/2017",
                        documentStatus: "completed"
                    }, {
                        documentType: "Annual Returns and Balance Sheet eForms",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427956/download/191ca2e3610d4dde806fa5016b7ae0e267a6fadbf026487bb2a05bd8c22c9997.pdf",
                        documentName: "Form MGT-7-09122017_signed",
                        documentFilingDate: "09/12/2017",
                        documentStatus: "completed"
                    }, {
                        documentType: "Annual Returns and Balance Sheet eForms",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427960/download/74ad4ed203c24414a2c8fa34fcb8652410a2831142b94d1991e58932037a2477.pdf",
                        documentName: "Form AOC-4-30012017_signed",
                        documentFilingDate: "30/01/2017",
                        documentStatus: "completed"
                    }, {
                        documentType: "Annual Returns and Balance Sheet eForms",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427943/download/ff964f80dcc249b9bb6bfdbddcb13c208e0f43ab7eae4db58abdf09584c44ce9.pdf",
                        documentName: "Form MGT-7-30012017_signed",
                        documentFilingDate: "30/01/2017",
                        documentStatus: "completed"
                    }, {
                        documentType: "Other eForm Documents",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427922/download/be06f99e1c7744d9beacf7596764668ea59b1d440a4d4e4e950928c2221ec3d1.pdf",
                        documentName: "Form MSME FORM I-20102021_signed",
                        documentFilingDate: "20/10/2021",
                        documentStatus: "completed"
                    }, {
                        documentType: "Other eForm Documents",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427910/download/2b37dd99504d488bb40b3a37cba59bbf659c27e50c8c4851b92c4a6ac60ef9f7.pdf",
                        documentName: "Form DPT-3-01072021_signed",
                        documentFilingDate: "01/07/2021",
                        documentStatus: "completed"
                    }, {
                        documentType: "Other eForm Documents",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427906/download/424317edc7bb43c0be221edb77437ee3adb41b71a2f9403abfbabd95ebb6a9b5.pdf",
                        documentName: "Form MSME FORM I-13052021_signed",
                        documentFilingDate: "13/05/2021",
                        documentStatus: "completed"
                    }, {
                        documentType: "Other eForm Documents",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427917/download/5e1d3e7f05f54128a09847d7ab52fcbbb00c728d8a764364834f8fbba8736bfa.pdf",
                        documentName: "Form ADT-1-26022021",
                        documentFilingDate: "26/02/2021",
                        documentStatus: "completed"
                    }, {
                        documentType: "Other eForm Documents",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427950/download/a695837a379b4637ba07548ab7cd44e008d4bd7640f7477a999ff6083dc9d746.pdf",
                        documentName: "Form MGT-14-13022021_signed",
                        documentFilingDate: "13/02/2021",
                        documentStatus: "completed"
                    }, {
                        documentType: "Other eForm Documents",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427948/download/7dc1746c97034951abae84b7365e81d1a398be32e4ab4dc2b138794a2ba5434b.pdf",
                        documentName: "Form MGT-14-25012021-signed",
                        documentFilingDate: "25/01/2021",
                        documentStatus: "completed"
                    }, {
                        documentType: "Other eForm Documents",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427938/download/5acb18b23843404a9cac08d60d26d282b7afc12583994ec4bfc1726ff4bccf2c.pdf",
                        documentName: "Form PAS-3-16122020_signed",
                        documentFilingDate: "16/12/2020",
                        documentStatus: "completed"
                    }, {
                        documentType: "Other eForm Documents",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427914/download/8c746ea659cd47338495fcac628d9db70339b3b626ec4c28810219ff099b6252.pdf",
                        documentName: "Form MSME FORM I-29112020_signed",
                        documentFilingDate: "29/11/2020",
                        documentStatus: "completed"
                    }, {
                        documentType: "Other eForm Documents",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427947/download/770b1778ea6744019c0a3995483689e0b69ebc072b58462784b523a1c3ef24db.pdf",
                        documentName: "Form SH-7-26112020-signed",
                        documentFilingDate: "26/11/2020",
                        documentStatus: "completed"
                    }, {
                        documentType: "Other eForm Documents",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427961/download/12fc418ef6ad4063876266808cb8cba317eca8b15c3146a4beb0acce5be9261b.pdf",
                        documentName: "Form PAS-3-23102020_signed",
                        documentFilingDate: "23/10/2020",
                        documentStatus: "completed"
                    }, {
                        documentType: "Other eForm Documents",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427953/download/ed12d20defac4cc59498b4da1211bd73b19104a6a0ca4dc0ab6d4d6aaa72cda5.pdf",
                        documentName: "Form PAS-3-21102020_signed",
                        documentFilingDate: "21/10/2020",
                        documentStatus: "completed"
                    }, {
                        documentType: "Other eForm Documents",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427946/download/9f1a9d55a0d94e12bcdde6c1eaa751c56db7b35573c7473cbe762ba6dbc5526f.pdf",
                        documentName: "Form PAS-3-21102020_signed",
                        documentFilingDate: "21/10/2020",
                        documentStatus: "completed"
                    }, {
                        documentType: "Other eForm Documents",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427937/download/712b64a24d4d4c00aa86aab898a4f3a961a8d87648b94da88e231fa6108cb865.pdf",
                        documentName: "Form SH-7-12102020-signed",
                        documentFilingDate: "12/10/2020",
                        documentStatus: "completed"
                    }, {
                        documentType: "Other eForm Documents",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427925/download/d49116285e3c4f65a3369c104c253b32337c3bf8379a42e696e74c349290f1db.pdf",
                        documentName: "Form MGT-14-06102020_signed",
                        documentFilingDate: "06/10/2020",
                        documentStatus: "completed"
                    }, {
                        documentType: "Other eForm Documents",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427920/download/5a429f3931c34d018e04e4712d7e47845227e036d48948b2ab52369ecb0706df.pdf",
                        documentName: "Form MGT-14-08072019_signed",
                        documentFilingDate: "08/07/2019",
                        documentStatus: "completed"
                    }, {
                        documentType: "Other eForm Documents",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427927/download/d7d610f7b39847afb912077d5339bfd1858b444e397f442791dd84f8118a1c45.pdf",
                        documentName: "Form MGT-14-03052019-signed",
                        documentFilingDate: "03/05/2019",
                        documentStatus: "completed"
                    }, {
                        documentType: "Other eForm Documents",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427954/download/bfc61fabd51d480b92e9095cfd26b83052788ff96f0c445c8971920834979f85.pdf",
                        documentName: "Form PAS-3-04012019_signed",
                        documentFilingDate: "04/01/2019",
                        documentStatus: "completed"
                    }, {
                        documentType: "Other eForm Documents",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427955/download/8ed3bdacfdc6417c884a765d93c6b6fec70331e4eccf4f829b480db49c661423.pdf",
                        documentName: "Form PAS-3-06112018_signed",
                        documentFilingDate: "06/11/2018",
                        documentStatus: "completed"
                    }, {
                        documentType: "Other eForm Documents",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427940/download/993645527bda4dfaa5d1a560bec8366b8f0af9ab98c94b6097d456e555f0b7c5.pdf",
                        documentName: "Form MGT-14-25102018_signed",
                        documentFilingDate: "25/10/2018",
                        documentStatus: "completed"
                    }, {
                        documentType: "Other eForm Documents",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427928/download/8b4f02bb57df40de88f20288dbd858102dc57f36317846369c77e3c0e25bab6c.pdf",
                        documentName: "Form SH-7-11102018-signed",
                        documentFilingDate: "11/10/2018",
                        documentStatus: "completed"
                    }, {
                        documentType: "Other eForm Documents",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427941/download/cbe99f18f2ce433cbbb87a3e6b6b215c5a21ca6b16e74d12b808f40688efb214.pdf",
                        documentName: "Form ADT-1-26102017_signed",
                        documentFilingDate: "26/10/2017",
                        documentStatus: "completed"
                    }, {
                        documentType: "Other eForm Documents",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427949/download/2aa1d16b48f443c29c329eb30a385e905c2e787457af473195203ef836d18d74.pdf",
                        documentName: "Form SH-7-12092017-signed",
                        documentFilingDate: "12/09/2017",
                        documentStatus: "completed"
                    }, {
                        documentType: "Other eForm Documents",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427935/download/eb37f973c5dd44669497afc94314f8ea60a64a95245340d2b183851efaca504f.pdf",
                        documentName: "Form MGT-14-08092017-signed",
                        documentFilingDate: "08/09/2017",
                        documentStatus: "completed"
                    }, {
                        documentType: "Other eForm Documents",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427965/download/5ea872cc13764ce1966c44b890e32022cd7e8f1fe5984d9aacf62b929f4666c8.pdf",
                        documentName: "Form PAS-3-27072017_signed",
                        documentFilingDate: "27/07/2017",
                        documentStatus: "completed"
                    }, {
                        documentType: "Other eForm Documents",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427968/download/8096110389aa4c208458ac0836b46d285e223c85fe9a491983b462e5508de9f8.pdf",
                        documentName: "Form PAS-3-12072017_signed",
                        documentFilingDate: "12/07/2017",
                        documentStatus: "completed"
                    }, {
                        documentType: "Other eForm Documents",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427966/download/93f8047b8c3649678b6058d9bedd36e5213828de0e9a4071981d5c4b612a10a4.pdf",
                        documentName: "Form MGT-14-24042017-signed",
                        documentFilingDate: "24/04/2017",
                        documentStatus: "completed"
                    }, {
                        documentType: "Other eForm Documents",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427912/download/29b0566e4955454cbb95e2a7e395ed59f32601541431418aa25050ae125b5892.pdf",
                        documentName: "Form MGT-14-05042017-signed",
                        documentFilingDate: "05/04/2017",
                        documentStatus: "completed"
                    }, {
                        documentType: "Other eForm Documents",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427918/download/5ae8d269d7d24747ab0e2ef84cc5a0470a3e84f1b1b3471fb509ea31348a6987.pdf",
                        documentName: "Form PAS-3-03042017_signed",
                        documentFilingDate: "03/04/2017",
                        documentStatus: "completed"
                    }, {
                        documentType: "Other eForm Documents",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427919/download/b05f1d81cb8c40039ef45bb506df068ab3a7c0d93ff24ef090b22f51ed225c93.pdf",
                        documentName: "Form PAS-3-03042017_signed",
                        documentFilingDate: "03/04/2017",
                        documentStatus: "completed"
                    }, {
                        documentType: "Other eForm Documents",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427930/download/9ef51ce7a77348c0a56c07cf494d4d45c91bc5040e09402185a876a60aad22c6.pdf",
                        documentName: "Form PAS-3-20022017_signed",
                        documentFilingDate: "20/02/2017",
                        documentStatus: "completed"
                    }, {
                        documentType: "Other eForm Documents",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427939/download/f2c9bdb3880943a3a3ebc2dce056fa9fe6add2bce0d044689ce96245f928f175.pdf",
                        documentName: "Form MGT-14-19122016-signed",
                        documentFilingDate: "19/12/2016",
                        documentStatus: "completed"
                    }, {
                        documentType: "Other eForm Documents",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427924/download/c916ca6ba2a9457ebc4da78924b861bb72a44303bfcb4612857a8c0a8adf7891.pdf",
                        documentName: "Form SH-7-16122016-signed",
                        documentFilingDate: "16/12/2016",
                        documentStatus: "completed"
                    }, {
                        documentType: "Other eForm Documents",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427932/download/10d79a3be4264bbcaa28df9c75b6f40b88ce43a5e5ee4d33835f0bb5f0ce20b2.pdf",
                        documentName: "Form MGT-14-08122016_signed",
                        documentFilingDate: "08/12/2016",
                        documentStatus: "completed"
                    }, {
                        documentType: "Other eForm Documents",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427929/download/23d2572e063942beb5fbfc23efafee54d843f460f27645b68043fa7e5db00391.pdf",
                        documentName: "Form PAS-3-01122016_signed",
                        documentFilingDate: "01/12/2016",
                        documentStatus: "completed"
                    }, {
                        documentType: "Other eForm Documents",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427926/download/faeaf6dbd3b041bab63e3b0d9818826e8845f08385204569a7f10ae6ebf713de.pdf",
                        documentName: "Form PAS-3-24102016",
                        documentFilingDate: "24/10/2016",
                        documentStatus: "completed"
                    }, {
                        documentType: "Other eForm Documents",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427921/download/bc182bb46aaf437fb2bc10525e97ac6c4af533336578401e9868a7b1de851c66.pdf",
                        documentName: "Form PAS-3-24102016",
                        documentFilingDate: "24/10/2016",
                        documentStatus: "completed"
                    }, {
                        documentType: "Other eForm Documents",
                        documentUrl: "https://staging-persist.signzy.tech/api/files/4427944/download/353c501a9b6d416a8db42a16552f458b744c31ef5677408ea821298dca8cc587.pdf",
                        documentName: "Form PAS-3-24102016",
                        documentFilingDate: "24/10/2016",
                        documentStatus: "completed"
                    }],
                    status: "completed",
                    updatedTimestamp: 1644317359,
                    isComplete: 1
                }
            };
        return {
            getfileSearchResponse: function() {
                return t
            },
            getAllFileSearchResponse: function() {
                return i
            }
        }
    }
    angular.module("signzySandbox").service("rocFactory", e), e.$inject = ["$http", "$timeout"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o) {
        e.loading = !1, e.data = {
            companySearchText: "",
            companyQuickSearchText: "",
            fileCompanyID: "U74999PN2015PTC157118",
            companySmartSearchText: "",
            din: null != localStorage.getItem("din") ? localStorage.getItem("din") : "",
            quickCompanyID: null != localStorage.getItem("cin") ? localStorage.getItem("cin") : "",
            simpleCompanyID: null != localStorage.getItem("cin") ? localStorage.getItem("cin") : "",
            detailedCompanyID: null != localStorage.getItem("cin") ? localStorage.getItem("cin") : "",
            assetCompanyID: null != localStorage.getItem("cin") ? localStorage.getItem("cin") : ""
        }, console.log("kjhgfdsdfgh", e.data), e.name = "shiv", e.querySimpleSearchCompany = function() {
            "" == e.data.companySearchText && (e.companyData = null);
            var a = s.getURLs().rocSmartFill.data;
            console.log(a + escape(e.data.companySimpleSearchText)), escape(e.data.companySimpleSearchText).length > 2 ? i.get(a + escape(e.data.companySimpleSearchText)).then(function(a) {
                console.log(a.data[0]), e.companyList = a.data[0]
            }) : e.companyList = []
        }, e.queryDetailedSearchCompany = function() {
            "" == e.data.companySearchText && (e.companyData = null);
            var a = s.getURLs().rocSmartFill.data;
            escape(e.data.companyDetailedSearchText).length > 2 ? i.get(a + escape(e.data.companyDetailedSearchText)).then(function(a) {
                console.log(a.data[0]), e.companyList = a.data[0]
            }) : e.companyList = []
        }, e.queryQuickSearchCompany = function() {
            "" == e.data.companyQuickSearchText && (e.companyData = null);
            var a = s.getURLs().rocSmartFill.data;
            escape(e.data.companyQuickSearchText).length > 2 ? i.get(a + escape(e.data.companyQuickSearchText)).then(function(a) {
                e.companyList = a.data[0]
            }) : e.companyList = []
        }, e.querySmartSearchCompany = function(a) {
            e.loading = !0, "" == e.data.companySmartSearchText && (e.companyData = null);
            var i = {
                name: e.data.companySmartSearchText
            };
            delete e.data.error, escape(e.data.companySmartSearchText).length > 2 ? t.createOrganization().then(function(a) {
                t.createHunt(a.id, a.accessToken, "searchCompaniesByName", i).then(function(a) {
                    console.log("huntObj", a), e.companyList = a.result.companiesList, e.loading = !1
                }, function(a) {
                    e.loading = !1, e.companyList = [], e.data.error = a, console.log("hunt error", a)
                })
            }, function(a) {
                e.loading = !1, e.companyList = [], e.data.error = a, console.log("organization error", a)
            }) : e.companyList = []
        }, e.getSmartSearchCompany = function(a) {
            e.loading = !0, e.companyList = [], e.data.smartResponse = a, localStorage.setItem("cin", a.companyID), delete e.data.error, e.loading = !1
        }, e.queryQuickSearchCIN = function(a) {
            e.loading = !0;
            var i = {
                cin: a
            };
            localStorage.setItem("cin", a), delete e.data.error, t.createOrganization().then(function(a) {
                t.createHunt(a.id, a.accessToken, "quickSearchByCin", i).then(function(a) {
                    console.log("huntObj", a), e.data.quickResponse = a.result, e.loading = !1
                }, function(a) {
                    e.loading = !1, delete e.data.quickResponse, e.data.error = a, console.log("hunt error", a)
                })
            }, function(a) {
                e.loading = !1, delete e.data.quickResponse, e.data.error = a, console.log("organization error", a)
            })
        }, e.queryAssetSearchCIN = function(a) {
            e.loading = !0;
            var i = {
                cin: a
            };
            localStorage.setItem("cin", a), delete e.data.error, t.createOrganization().then(function(a) {
                t.createHunt(a.id, a.accessToken, "assetChargesByCin", i).then(function(a) {
                    console.log("huntObj", a), e.data.assetResponse = a.result, e.loading = !1
                }, function(a) {
                    e.loading = !1, delete e.data.assetResponse, e.data.error = a, console.log("hunt error", a)
                })
            }, function(a) {
                e.loading = !1, delete e.data.assetResponse, e.data.error = a, console.log("organization error", a)
            })
        }, e.querySimpleSearchCIN = function(a) {
            e.loading = !0;
            var i = {
                cin: a
            };
            localStorage.setItem("cin", a), delete e.data.error, t.createOrganization().then(function(a) {
                t.createHunt(a.id, a.accessToken, "simpleSearchByCin", i).then(function(a) {
                    console.log("huntObj", a), e.data.simpleResponse = a.result, e.loading = !1
                }, function(a) {
                    e.loading = !1, delete e.data.simpleResponse, e.data.error = a, console.log("hunt error", a)
                })
            }, function(a) {
                e.loading = !1, delete e.data.simpleResponse, e.data.error = a, console.log("organization error", a)
            })
        }, e.queryDetailedSearchCIN = function(a) {
            e.loading = !0;
            var i = {
                cin: a
            };
            localStorage.setItem("cin", a), delete e.data.error, t.createOrganization().then(function(a) {
                t.createHunt(a.id, a.accessToken, "detailedSearchByCin", i).then(function(a) {
                    console.log("huntObj", a), e.data.detailedResponse = a.result, e.loading = !1
                }, function(a) {
                    e.loading = !1, delete e.data.detailedResponse, e.data.error = a, console.log("hunt error", a)
                })
            }, function(a) {
                e.loading = !1, delete e.data.detailedResponse, e.data.error = a, console.log("organization error", a)
            })
        }, e.dinSearch = function(a) {
            e.loading = !0;
            var i = {
                din: e.data.din
            };
            localStorage.setItem("din", e.data.din), delete e.data.error, t.createOrganization().then(function(n) {
                t.createHunt(n.id, n.accessToken, a, i).then(function(a) {
                    console.log("huntObj", a), e.data.dinData = a.result, e.loading = !1
                }, function(a) {
                    e.loading = !1, delete e.data.dinData, e.data.error = a, console.log("hunt error", a)
                })
            }, function(a) {
                e.loading = !1, delete e.data.dinData, e.data.error = a, console.log("organization error", a)
            })
        }, e.fileSearch = function(a) {
            e.loading = !0, e.data.companyFileResponse = r.getfileSearchResponse(), e.loading = !1
        }, e.allFileSearch = function(a) {
            console.log("hittes"), e.loading = !0, e.data.companyAllFileResponse = r.getAllFileSearchResponse(), console.log("kjhgfdsdfgh", e.data.companyAllFileResponse), e.loading = !1
        }
    }
    angular.module("signzySandbox").controller("RocController", e), e.$inject = ["$scope", "$log", "httpSrv", "$http", "$cookies", "URLService", "rocFactory", "grantSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        a.loading = !1;
        a.states = [{
            id: 1,
            name: "Maharashtra"
        }], a.data = {
            professionalTaxNumber: ""
        }, a.search = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                essentials: {
                    professionalTaxNumber: a.data.professionalTaxNumber,
                    state: a.data.state
                }
            };
            c.createPlexus("ptrcs", e).then(function(e) {
                console.log("plexusObj", e), a.data.ptrcResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.ptrcResponse, a.data.error = e, console.log("identity error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("PtrcController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a) {
        var t = ["ANDHRA PRADESH MEDICAL COUNCIL", "ARUNACHAL PRADESH MEDICAL COUNCIL", "ASSAM MEDICAL COUNCIL", "BHOPAL MEDICAL COUNCIL", "BIHAR MEDICAL COUNCIL", "BOMBAY MEDICAL COUNCIL", "CHANDIGARH MEDICAL COUNCIL", "CHATTISGARH MEDICAL COUNCIL", "DELHI MEDICAL COUNCIL", "GOA MEDICAL COUNCIL", "GUJARAT MEDICAL COUNCIL", "HARYANA MEDICAL COUNCIL", "HIMANCHAL PRADESH MEDICAL COUNCIL", "HYDERABAD MEDICAL COUNCIL", "JAMMU & KASHMIR MEDICAL COUNCIL", "JHARKHAND MEDICAL COUNCIL", "KARNATAKA MEDICAL COUNCIL", "MADHYA PRADESH MEDICAL COUNCIL", "MADRAS MEDICAL COUNCIL", "MAHAKOSHAL MEDICAL COUNCIL", "MAHARASHTRA MEDICAL COUNCIL", "MANIPUR MEDICAL COUNCIL", "MEDICAL COUNCIL OF INDIA", "MEDICAL COUNCIL OF TANGANYIKA", "MIZORAM MEDICAL COUNCIL", "MYSORE MEDICAL COUNCIL", "NAGALAND MEDICAL COUNCIL", "ORISSA COUNCIL OF MEDICAL REGISTRATION", "PONDICHERRY MEDICAL COUNCIL", "PUNJAB MEDICAL COUNCIL", "RAJASTHAN MEDICAL COUNCIL", "SIKKIM MEDICAL COUNCIL", "TAMIL NADU MEDICAL COUNCIL", "TELANGANA STATE MEDICAL COUNCIL", "TRAVANCORE COCHIN MEDICAL COUNCIL, TRIVANDRUM", "TRIPURA STATE MEDICAL COUNCIL", "UTTAR PRADESH MEDICAL COUNCIL", "UTTARAKHAND MEDICAL COUNCIL", "VIDHARBA MEDICAL COUNCIL", "WEST BENGAL MEDICAL COUNCIL"];
        return {
            getValidStateMedicalCouncils: function() {
                return t
            }
        }
    }
    angular.module("signzySandbox").service("mciFactory", e), e.$inject = ["$http", "$timeout"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o) {
        e.loading = !1;
        e.wrongInput = !1, e.validStateMedicalCouncil = o.getValidStateMedicalCouncils(), e.data = {
            registration_no: "",
            qualification_year: "",
            state_medical_council: "",
            year_of_registration: "",
            name: ""
        }, e.search = function() {
            e.loading = !0, e.wrongInput = !1, delete e.data.error;
            var a = {
                essentials: {
                    registration_no: e.data.registration_no,
                    qualification_year: e.data.qualification_year,
                    state_medical_council: e.data.state_medical_council,
                    year_of_registration: e.data.year_of_registration,
                    name: e.data.name
                }
            };
            console.log("Data =", a), i.createPlexus("mcis", a).then(function(a) {
                console.log("plexusObj", a), e.data.mciResponse = a.result, e.loading = !1
            }, function(a) {
                e.loading = !1, delete e.data.mciResponse, e.data.error = a, console.log("identity error", a)
            })
        }
    }
    angular.module("signzySandbox").controller("MciController", e), e.$inject = ["$scope", "$log", "$q", "httpSrv", "$http", "$cookies", "URLService", "mciFactory"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        a.loading = !1, a.wrongInput = !1;
        a.data = {
            search: {
                lei: "",
                companyName: "",
                uniqueIdentifier: ""
            }
        }, a.leiSearch = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "search",
                essentials: a.data.search
            };
            c.createPlexus("lei", e).then(function(e) {
                console.log("plexusObj", e), a.data.responseData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.responseData, a.data.error = e, console.log("plexus error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("LEIController", e), e.$inject = ["$state", "$scope", "$http", "$log", "Upload", "URLService", "UtilsService", "$cookies", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l) {
        a.loading = !1, a.wrongInput = !1;
        a.data = {
            iecCode: ""
        }, a.isValid = function() {
            return !0
        }, a.search = function() {
            if (a.loading = !0, a.wrongInput = !1, delete a.data.error, a.isValid()) {
                var e = {
                    essentials: {
                        iecCode: a.data.iecCode
                    }
                };
                l.createPlexus("iecs", e).then(function(e) {
                    console.log("plexusObj", e), a.data.iecData = e.result, a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.iecData, a.data.error = e, console.log("identity error", e)
                })
            } else a.wrongInput = !0, a.loading = !1
        }
    }
    angular.module("signzySandbox").controller("IecController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "$cookies", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l) {
        a.loading = !1, a.wrongInput = !1;
        a.data = {
            firmNumber: "",
            memberNumber: ""
        }, a.isvalidFirm = function() {
            return is_valid("icwai", a.data.firmNumber) ? !0 : !1
        }, a.isvalidMember = function() {
            return is_valid("icwai", a.data.memberNumber) ? !0 : !1
        }, a.searchFirm = function() {
            if (a.loading = !0, a.wrongInput = !1, delete a.data.error, a.isvalidFirm()) {
                var e = {
                    type: "firms",
                    essentials: {
                        firmNumber: a.data.firmNumber
                    }
                };
                l.createPlexus("icwais", e).then(function(e) {
                    console.log("plexusObj", e), a.data.icwaiData = e.result, a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.icwaiData, a.data.error = e, console.log("identity error", e)
                })
            } else a.wrongInput = !0, a.loading = !1
        }, a.searchMember = function() {
            if (a.loading = !0, a.wrongInput = !1, delete a.data.error, a.isvalidMember()) {
                var e = {
                    type: "members",
                    essentials: {
                        memberNumber: a.data.memberNumber
                    }
                };
                console.log("inputData", e), l.createPlexus("icwais", e).then(function(e) {
                    console.log("plexusObj", e), a.data.icwaiData = e.result, a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.icwaiData, a.data.error = e, console.log("identity error", e)
                })
            } else a.wrongInput = !0, a.loading = !1
        }
    }
    angular.module("signzySandbox").controller("IcwaiController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "$cookies", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        a.loading = !1, a.wrongInput = !1;
        a.states = [{
            id: 1,
            name: "Maharashtra"
        }], a.data = {
            memberNumber: "",
            memberType: "ACS"
        }, a.search = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                essentials: {
                    memberNumber: a.data.memberNumber,
                    memberType: a.data.memberType
                }
            };
            c.createPlexus("icsis", e).then(function(e) {
                console.log("plexusObj", e), a.data.icsiResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.icsiResponse, a.data.error = e, console.log("identity error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("IcsiController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l) {
        a.loading = !1, a.wrongInput = !1;
        a.data = {
            memberNumber: ""
        }, a.isValid = function() {
            return is_valid("icai", a.data.memberNumber) ? !0 : !1
        }, a.search = function() {
            if (a.loading = !0, a.wrongInput = !1, delete a.data.error, a.isValid()) {
                var e = {
                    essentials: {
                        memberNumber: a.data.memberNumber
                    }
                };
                l.createPlexus("icais", e).then(function(e) {
                    console.log("plexusObj", e), a.data.icaiData = e.result, a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.icaiData, a.data.error = e, console.log("identity error", e)
                })
            } else a.wrongInput = !0, a.loading = !1
        }
    }
    angular.module("signzySandbox").controller("IcaiController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "$cookies", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l) {
        a.loading = !1, a.wrongInput = !1;
        a.data = {
            licenseNumber: ""
        }, a.isValid = function() {
            return is_valid("fssai", a.data.licenseNumber) ? !0 : !1
        }, a.search = function() {
            if (a.loading = !0, a.wrongInput = !1, delete a.data.error, a.isValid()) {
                var e = {
                    essentials: {
                        licenseNumber: a.data.licenseNumber
                    }
                };
                l.createPlexus("fssais", e).then(function(e) {
                    console.log("plexusObj", e), a.data.fssaiData = e.result, a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.fssaiData, a.data.error = e, console.log("identity error", e)
                })
            } else a.wrongInput = !0, a.loading = !1
        }
    }
    angular.module("signzySandbox").controller("FssaiController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "$cookies", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l) {
        a.loading = !1, a.wrongInput = !1;
        a.data = {
            panNumber: ""
        }, a.isValidPan = function(e) {
            return is_valid("pan", e) ? !0 : !1
        }, a.panSearch = function() {
            if (a.loading = !0, a.wrongInput = !1, delete a.data.error, a.isValidPan(a.data.panNumber)) {
                var e = {
                    task: "searchByPan",
                    essentials: {
                        panNumber: a.data.panNumber
                    }
                };
                l.createPlexus("esics", e).then(function(e) {
                    console.log("plexusObj", e), a.data.esicData = e.result, a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.esicData, a.data.error = e, console.log("identity error", e)
                })
            } else a.wrongInput = !0, a.loading = !1
        }
    }
    angular.module("signzySandbox").controller("EsicController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "$cookies", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l) {
        a.loading = !1, a.wrongInput = !1;
        a.noOfMonths = [];
        for (var d = 1; 12 >= d; d++) a.noOfMonths.push(d);
        var c = function() {
            for (var e = [], a = 1; 3 >= a; a++) {
                var t = new Date;
                t.setMonth(t.getMonth() - a);
                var i = t.toISOString().split("T")[0].split("-");
                e.push(i[1] + "/" + i[0])
            }
            return console.log("dateArr", e), e
        };
        a.data = {
            establishmentId: "",
            employeeListMonths: "1",
            uan: "",
            employeeName: "",
            establishmentName: "",
            searchType: "name",
            lastMonths: c(),
            selectedLastMonth: c()[0]
        }, a.searchBasicEstablishment = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "basicEstablishmentSearch",
                essentials: {}
            };
            "name" == a.data.searchType ? e.essentials.establishmentName = a.data.establishmentName : e.essentials.establishmentId = a.data.establishmentId, console.log("inputData", e), l.createPlexus("epfos", e).then(function(e) {
                console.log("plexusObj", e), a.data.epfoData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.epfoData, a.data.error = e, console.log("epfo error", e)
            })
        }, a.searchDetailedEstablishment = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "detailedEstablishmentSearch",
                essentials: {
                    establishmentId: a.data.establishmentId,
                    employeeListMonths: a.data.employeeListMonths
                }
            };
            l.createPlexus("epfos", e).then(function(e) {
                console.log("plexusObj", e), a.data.epfoData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.epfoData, a.data.error = e, console.log("epfo error", e)
            })
        }, a.employeeNameSearch = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "employeeNameSearch",
                essentials: {
                    establishmentId: a.data.establishmentId,
                    employeeName: a.data.employeeName,
                    employmentMonth: a.data.selectedLastMonth
                }
            };
            l.createPlexus("epfos", e).then(function(e) {
                console.log("plexusObj", e), a.data.epfoData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.epfoData, a.data.error = e, console.log("epfo error", e)
            })
        }, a.employeeNameSearchv2 = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "employeeNameSearchv2",
                essentials: {
                    establishmentId: a.data.establishmentId,
                    establishmentName: a.data.establishmentName,
                    employeeName: a.data.employeeName,
                    employmentMonth: a.data.selectedLastMonth
                }
            };
            l.createPlexus("epfos", e).then(function(e) {
                console.log("plexusObj", e), a.data.epfoData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.epfoData, a.data.error = e, console.log("epfo error", e)
            })
        }, a.searchUan = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "uanSearch",
                essentials: {
                    uan: a.data.uan
                }
            };
            l.createPlexus("epfos", e).then(function(e) {
                console.log("plexusObj", e), a.data.epfoData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.epfoData, a.data.error = e, console.log("epfo error", e)
            })
        }, a.uanDetailed = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "uanDetailed",
                essentials: {
                    uan: a.data.uan,
                    password: a.data.password
                }
            };
            l.createPlexus("epfos", e).then(function(e) {
                console.log("plexusObj", e), a.data.epfoData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.epfoData, a.data.error = e, console.log("epfo error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("EpfoController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "$cookies", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l) {
        a.loading = !1, a.wrongInput = !1;
        a.data = {
            cstNumber: ""
        }, a.isValid = function() {
            return is_valid("cst", a.data.cstNumber) ? !0 : !1
        }, a.search = function() {
            if (a.loading = !0, a.wrongInput = !1, delete a.data.error, a.isValid()) {
                var e = {
                    essentials: {
                        cstNumber: a.data.cstNumber
                    }
                };
                l.createPlexus("csts", e).then(function(e) {
                    console.log("plexusObj", e), a.data.cstData = e.result, a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.cstData, a.data.error = e, console.log("identity error", e)
                })
            } else a.wrongInput = !0, a.loading = !1
        }
    }
    angular.module("signzySandbox").controller("CstController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "$cookies", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l) {
        a.loading = !1, a.wrongInput = !1;
        a.data = {
            registrationNumber: ""
        }, a.registrationNumberSearch = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "registrationNumberSearch",
                essentials: {
                    registrationNumber: a.data.registrationNumber
                }
            };
            l.createPlexus("coas", e).then(function(e) {
                console.log("plexusObj", e), a.data.coaData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.coaData, a.data.error = e, console.log("identity error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("CoaController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "$cookies", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l) {
        a.loading = !1, a.wrongInput = !1;
        a.data = {
            assesseeCode: ""
        }, a.isValid = function() {
            return is_valid("centralservicetax", a.data.assesseeCode) ? !0 : !1
        }, a.search = function() {
            if (a.loading = !0, a.wrongInput = !1, delete a.data.error, a.isValid()) {
                var e = {
                    essentials: {
                        assesseeCode: a.data.assesseeCode
                    }
                };
                l.createPlexus("cservicetaxs", e).then(function(e) {
                    console.log("plexusObj", e), a.data.centralservicetaxData = e.result, a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.centralservicetaxData, a.data.error = e, console.log("plexus error", e)
                })
            } else a.wrongInput = !0, a.loading = !1
        }
    }
    angular.module("signzySandbox").controller("CentralServiceTaxController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "$cookies", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        a.loading = !1, a.consent = !1;
        a.data = {
            files: [],
            response: {},
            firstImage: "",
            secondImage: ""
        }, a.fileUpload = function(e, t) {
            o.File.upload(a.data.files[t]).then(function(e) {
                console.log("Forgery File Uploaded", e), a.data.files[t] = e.directURL
            }, function() {
                i.debug("File submitted, starting worker call", a.data.files)
            })
        }, a.inputsFields = [
            ["", ""]
        ], a.runTextMatch = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            for (var e = {
                    essentials: {
                        images: [a.data.files[0]],
                        fields: {}
                    }
                }, t = 0, i = a.inputsFields.length; i > t; t++) e.essentials.fields[a.inputsFields[t][0]] = a.inputsFields[t][1];
            c.createPlexus("textmatches ", e).then(function(e) {
                console.log("plexusObj", e), a.data.matchData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.matchData, a.data.error = e, console.log("identity error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("TextMatchController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        a.loading = !1, a.consent = !1;
        a.data = {
            file: ""
        }, a.fileUpload = function(e) {
            o.File.upload(a.data.file).then(function(e) {
                console.log("File Uploaded", e), a.data.file = e.directURL
            }, function() {
                i.debug("File submitted, starting worker call", a.data.files)
            })
        }, a.runMrzDetect = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                essentials: {
                    file: a.data.file
                }
            };
            c.createPlexus("mrzdetectors ", e).then(function(e) {
                console.log("plexusObj", e), a.data.mrzData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.mrzData, a.data.error = e, console.log("identity error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("MrzDetectController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        a.loading = !1;
        a.data = {
            cin: null != localStorage.getItem("cin") ? localStorage.getItem("cin") : "",
            callbackUrl: ""
        }, a.companyRequest = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "fetch",
                essentials: {
                    cin: a.data.cin.toUpperCase(),
                    callbackUrl: a.data.callbackUrl
                }
            };
            c.createPlexus("companyconsolidated", e).then(function(e) {
                console.log("plexusObj", e), a.data.companyResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.companyResponse, a.data.error = e
            })
        }, a.getRequest = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "getData",
                essentials: {
                    requestId: a.data.requestId
                }
            };
            c.createPlexus("companyconsolidated", e).then(function(e) {
                console.log("plexusObj", e), a.data.getResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.getResponse, a.data.error = e
            })
        }, a.fetchRealtime = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "fetchRealtime",
                essentials: {
                    cin: a.data.cin
                }
            };
            a.data.callbackUrl && a.data.callbackUrl.trim() && (e.essentials.callbackUrl = a.data.callbackUrl), c.createPlexus("companyconsolidated", e).then(function(e) {
                console.log("plexusObj", e), a.data.getResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.getResponse, a.data.error = e
            })
        }, a.fetchFinancialRealtime = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "fetchFinancialRealtime",
                essentials: {
                    cin: a.data.cin
                }
            };
            a.data.callbackUrl && a.data.callbackUrl.trim() && (e.essentials.callbackUrl = a.data.callbackUrl), c.createPlexus("companyconsolidated", e).then(function(e) {
                console.log("plexusObj", e), a.data.getResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.getResponse, a.data.error = e
            })
        }, a.getDataStatus = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "getDataStatus",
                essentials: {
                    cin: a.data.cin
                }
            };
            a.data.callbackUrl && a.data.callbackUrl.trim() && (e.essentials.callbackUrl = a.data.callbackUrl), c.createPlexus("companyconsolidated", e).then(function(e) {
                console.log("plexusObj", e), a.data.getResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.getResponse, a.data.error = e
            })
        }
    }
    angular.module("signzySandbox").controller("CompanyController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        a.loading = !1;
        a.data = {
            cin: null != localStorage.getItem("cin") ? localStorage.getItem("cin") : "",
            callbackUrl: ""
        }, a.patRequest = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "profitAfterTax",
                essentials: {
                    cin: a.data.cin.toUpperCase(),
                    callbackUrl: a.data.callbackUrl
                }
            };
            c.createPlexus("revenues", e).then(function(e) {
                console.log("plexusObj", e), a.data.revenueResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.revenueResponse, a.data.error = e
            })
        }
    }
    angular.module("signzySandbox").controller("RevenueController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        a.loading = !1;
        a.data = {
            pan: "",
            gstin: null != localStorage.getItem("gstin") ? localStorage.getItem("gstin") : "",
            username: null != localStorage.getItem("username") ? localStorage.getItem("username") : "",
            appKey: null != localStorage.getItem("appKey") ? localStorage.getItem("appKey") : "",
            authToken: null != localStorage.getItem("authToken") ? localStorage.getItem("authToken") : "",
            sek: null != localStorage.getItem("sek") ? localStorage.getItem("sek") : "",
            task: "monthlyTurnover",
            retPeriod: "",
            otp: ""
        }, a.isValid = function() {
            return is_valid("pan", a.data.pan) ? !0 : !1
        }, a.otpRequest = function() {
            a.loading = !0, a.wrongInput = !1, localStorage.removeItem("appKey"), localStorage.removeItem("gstin"), localStorage.removeItem("username"), delete a.data.error;
            var e = {
                task: "getOtp",
                essentials: {
                    gstin: a.data.gstin.toUpperCase(),
                    username: a.data.username
                }
            };
            c.createPlexus("gstrinitiations", e).then(function(e) {
                console.log("plexusObj", e), a.data.otpResponse = e.result, localStorage.setItem("appKey", a.data.otpResponse.appKey), localStorage.setItem("gstin", a.data.gstin.toUpperCase()), localStorage.setItem("username", a.data.username), a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.otpResponse, a.data.error = e, localStorage.removeItem("username"), localStorage.removeItem("appKey"), localStorage.removeItem("gstin"), console.log("identity error", e)
            })
        }, a.authTokenRequest = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error, localStorage.removeItem("authToken"), localStorage.removeItem("sek");
            var e = {
                task: "getAuthToken",
                essentials: {
                    gstin: a.data.gstin.toUpperCase(),
                    username: a.data.username,
                    otp: a.data.otp,
                    appKey: a.data.appKey
                }
            };
            c.createPlexus("gstrinitiations", e).then(function(e) {
                console.log("plexusObj", e), a.data.authReponse = e.result, localStorage.setItem("authToken", a.data.authReponse.authToken), localStorage.setItem("sek", a.data.authReponse.sek), a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.authReponse, a.data.error = e, console.log("identity error", e)
            })
        }, a.turnOverRequest = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                essentials: {
                    gstin: a.data.gstin.toUpperCase(),
                    username: a.data.username,
                    authToken: a.data.authToken,
                    appKey: a.data.appKey,
                    sek: a.data.sek,
                    retPeriod: a.data.retPeriod,
                    task: a.data.task
                }
            };
            c.createPlexus("gstrturnovers", e).then(function(e) {
                console.log("plexusObj", e), a.data.returnResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.returnResponse, a.data.error = e, console.log("identity error", e)
            })
        }, a.delinquencyRequest = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                essentials: {
                    gstin: a.data.gstin.toUpperCase(),
                    username: a.data.username,
                    authToken: a.data.authToken,
                    appKey: a.data.appKey,
                    sek: a.data.sek,
                    retPeriod: a.data.retPeriod
                }
            };
            c.createPlexus("gstrdelinquencies", e).then(function(e) {
                console.log("plexusObj", e), a.data.returnResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.returnResponse, a.data.error = e, console.log("identity error", e)
            })
        }, a.discrepancyRequest = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                essentials: {
                    gstin: a.data.gstin.toUpperCase(),
                    username: a.data.username,
                    authToken: a.data.authToken,
                    appKey: a.data.appKey,
                    sek: a.data.sek,
                    retPeriod: a.data.retPeriod
                }
            };
            c.createPlexus("gstrdiscrepancies", e).then(function(e) {
                console.log("plexusObj", e), a.data.returnResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.returnResponse, a.data.error = e, console.log("identity error", e)
            })
        }, a.grossProfitRequest = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                essentials: {
                    gstin: a.data.gstin.toUpperCase(),
                    username: a.data.username,
                    authToken: a.data.authToken,
                    appKey: a.data.appKey,
                    sek: a.data.sek,
                    retPeriod: a.data.retPeriod
                }
            };
            c.createPlexus("gstrgrossprofits", e).then(function(e) {
                console.log("plexusObj", e), a.data.returnResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.returnResponse, a.data.error = e, console.log("identity error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("GstrController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        a.loading = !1;
        a.data = {
            gstin: null != localStorage.getItem("gstin") ? localStorage.getItem("gstin") : "",
            authType: null != localStorage.getItem("authType") ? localStorage.getItem("authType") : "",
            username: null != localStorage.getItem("username") ? localStorage.getItem("username") : "",
            password: null != localStorage.getItem("password") ? localStorage.getItem("password") : "",
            fromDate: null != localStorage.getItem("fromDate") ? localStorage.getItem("fromDate") : "",
            toDate: null != localStorage.getItem("toDate") ? localStorage.getItem("toDate") : "",
            callBackUrl: null != localStorage.getItem("callBackUrl") ? localStorage.getItem("callBackUrl") : "",
            otp: ""
        }, a.createRequest = function() {
            a.loading = !0, a.wrongInput = !1, localStorage.removeItem("password"), localStorage.removeItem("gstin"), localStorage.removeItem("username"), localStorage.removeItem("fromDate"), localStorage.removeItem("toDate"), localStorage.removeItem("callBackUrl"), delete a.data.error;
            var e = {
                task: "createRequest",
                type: "Detailed",
                essentials: {
                    authType: a.data.authType,
                    gstin: [a.data.gstin.toUpperCase()],
                    username: [a.data.username],
                    password: [a.data.password],
                    fromDate: [a.data.fromDate],
                    toDate: [a.data.toDate],
                    callBackUrl: a.data.callBackUrl
                }
            };
            c.createPlexus("gstanalytics", e).then(function(e) {
                console.log("plexusObj", e), a.data.createResponse = e, localStorage.setItem("requestId", a.data.createResponse.requestId), localStorage.setItem("gstin", a.data.gstin.toUpperCase()), localStorage.setItem("username", a.data.username), a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.createResponse, a.data.error = e, localStorage.removeItem("username"), localStorage.removeItem("appKey"), localStorage.removeItem("gstin"), console.log("identity error", e)
            })
        }, a.submitOtp = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error, localStorage.removeItem("otp"), localStorage.removeItem("requestId");
            var e = {
                task: "getGstAnalyticsAuthToken",
                type: "Detailed",
                essentials: {
                    gstin: [a.data.gstin.toUpperCase()],
                    requestId: a.data.requestId,
                    otp: [a.data.otp]
                }
            };
            c.createPlexus("gstanalytics", e).then(function(e) {
                console.log("plexusObj", e), a.data.submitOtpReponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.submitOtpReponse, a.data.error = e, console.log("identity error", e)
            })
        }, a.getAnalyticsReport = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "getGstAnalyticsReport",
                type: "Detailed",
                essentials: {
                    gstin: a.data.gstin.toUpperCase(),
                    requestId: a.data.requestId
                }
            };
            c.createPlexus("gstanalytics", e).then(function(e) {
                console.log("plexusObj", e), a.data.getReportReponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.getReportReponse, a.data.error = e, console.log("identity error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("GstAnalyticsController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        a.loading = !1, a.consent = !1;
        a.data = {
            casExtraction: {
                file: "",
                password: ""
            }
        }, a.fileUpload = function(e, t) {
            console.log("file ", e), console.log("option ", t), 0 === t && o.File.upload(a.data.details.url).then(function(e) {
                console.log("File Uploaded", e), a.data.casExtraction.file = e.directURL
            }, function() {
                i.debug("File submitted, starting worker call", a.data.casExtraction.file)
            })
        }, a.casExtraction = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error, console.log("mfCASExtraction--->", a.data.casExtraction);
            var e = {
                task: "mfCASExtraction",
                essentials: {
                    file: a.data.casExtraction.file
                }
            };
            console.log("inputData : ", e), a.data.casExtraction.password.length > 0 && (e.essentials.password = a.data.casExtraction.password), c.createPlexus("mutualFund", e).then(function(e) {
                console.log("plexusObj", e), a.data.casResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.casResponse, a.data.error = e, console.log("plexus error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("mfController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        a.loading = !1;
        var u = {};
        a.states = [{
            id: 0,
            name: ""
        }, {
            id: 1,
            name: "Andaman and Nicobar Islands"
        }, {
            id: 2,
            name: "Andhra Pradesh"
        }, {
            id: 3,
            name: "Arunachal Pradesh"
        }, {
            id: 4,
            name: "Assam"
        }, {
            id: 5,
            name: "Bihar"
        }, {
            id: 6,
            name: "Chandigarh"
        }, {
            id: 7,
            name: "Chattisgarh"
        }, {
            id: 8,
            name: "Dadra & Nagar Haveli"
        }, {
            id: 9,
            name: "Daman & Diu"
        }, {
            id: 10,
            name: "Delhi"
        }, {
            id: 11,
            name: "Goa"
        }, {
            id: 12,
            name: "Gujarat"
        }, {
            id: 13,
            name: "Haryana"
        }, {
            id: 14,
            name: "Himachal Pradesh"
        }, {
            id: 15,
            name: "Jammu and Kashmir"
        }, {
            id: 16,
            name: "Jharkhand"
        }, {
            id: 17,
            name: "Karnataka"
        }, {
            id: 18,
            name: "Kerala"
        }, {
            id: 19,
            name: "Lakshadweep"
        }, {
            id: 20,
            name: "Madhya Pradesh"
        }, {
            id: 21,
            name: "Maharashtra"
        }, {
            id: 22,
            name: "Manipur"
        }, {
            id: 23,
            name: "Meghalaya"
        }, {
            id: 24,
            name: "Mizoram"
        }, {
            id: 25,
            name: "Nagaland"
        }, {
            id: 26,
            name: "Odisha"
        }, {
            id: 27,
            name: "Puducherry"
        }, {
            id: 28,
            name: "Punjab"
        }, {
            id: 29,
            name: "Rajasthan"
        }, {
            id: 30,
            name: "Sikkim"
        }, {
            id: 31,
            name: "Tamil Nadu"
        }, {
            id: 32,
            name: "Telangana"
        }, {
            id: 33,
            name: "Tripura"
        }, {
            id: 34,
            name: "Uttar Pradesh"
        }, {
            id: 35,
            name: "Uttrakhand"
        }, {
            id: 36,
            name: "West Bengal"
        }], a.data = {
            voter: {},
            voterid_files: [],
            verifyData: {
                name: null != localStorage.getItem("voterData") ? JSON.parse(localStorage.getItem("voterData")).name : "",
                epicNumber: null != localStorage.getItem("voterData") ? JSON.parse(localStorage.getItem("voterData")).epicNumber : "",
                state: null != localStorage.getItem("voterData") ? JSON.parse(localStorage.getItem("voterData")).state : ""
            },
            searchData: {
                epicNumber: null != localStorage.getItem("voterData") ? JSON.parse(localStorage.getItem("voterData")).epicNumber : "",
                state: null != localStorage.getItem("voterData") ? JSON.parse(localStorage.getItem("voterData")).state : ""
            }
        }, a.fileUpload = function(e, t) {
            o.File.upload(a.data.voterid_files[t]).then(function(e) {
                console.log("Aadhaar File Uploaded", e), a.data.voterid_files[t] = e.directURL, a.data.voter = s.appendObject(u, a.data.voter)
            }, function() {
                i.debug("File submitted, starting worker call", a.data.voterid_files)
            })
        }, a.extract = function() {
            a.loading = !0, delete a.data.error, localStorage.setItem("voteridFiles", JSON.stringify({
                img: a.data.voterid_files
            })), c.createIdentity("voterid", a.data.voterid_files).then(function(e) {
                c.createSnoop(e.id, e.accessToken, "autoRecognition", {}).then(function(e) {
                    console.log("snoopObj", e), a.data.voteridExtractedResponse = e.response.result, localStorage.setItem("voteridExtraction", JSON.stringify(a.data.voteridExtractedResponse)), a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.voteridExtractedResponse, a.data.error = e, console.log("snoop error", e)
                })
            }, function(e) {
                a.loading = !1, delete a.data.voteridExtractedResponse, a.data.error = e, console.log("identity error", e)
            })
        }, a.verify = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error, localStorage.setItem("voterData", JSON.stringify(a.data.verifyData)), c.createIdentity("voterid", []).then(function(e) {
                c.createSnoop(e.id, e.accessToken, "verification", a.data.verifyData).then(function(e) {
                    console.log("snoopObj", e), a.data.voterIdVerifiedResponse = e.response.result, a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.voterIdVerifiedResponse, a.data.error = e, console.log("snoop error", e)
                })
            }, function(e) {
                a.loading = !1, delete a.data.voterIdVerifiedResponse, a.data.error = e, console.log("identity error", e)
            })
        }, a.search = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                essentials: {
                    epicNumber: a.data.searchData.epicNumber,
                    state: a.data.searchData.state
                }
            };
            c.createPlexus("voteridsearches", e).then(function(e) {
                console.log("plexusObj", e), a.data.voterSearchData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.voterSearchData, a.data.error = e, console.log("identity error", e)
            })
        }, a.detailedSearch = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                essentials: {
                    epicNumber: a.data.searchData.epicNumber,
                    state: a.data.searchData.state
                }
            };
            c.createPlexus("detailedvoteridsearches", e).then(function(e) {
                console.log("plexusObj", e), a.data.voterSearchData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.voterSearchData, a.data.error = e, console.log("identity error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("VoterIDController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c, u) {
        a.loading = !1, a.consent = !1;
        var p = {};
        a.states = [{
            id: 0,
            name: ""
        }, {
            id: 1,
            name: "Andaman and Nicobar Islands"
        }, {
            id: 2,
            name: "Andhra Pradesh"
        }, {
            id: 3,
            name: "Arunachal Pradesh"
        }, {
            id: 4,
            name: "Assam"
        }, {
            id: 5,
            name: "Bihar"
        }, {
            id: 6,
            name: "Chandigarh"
        }, {
            id: 7,
            name: "Chattisgarh"
        }, {
            id: 8,
            name: "Dadra & Nagar Haveli"
        }, {
            id: 9,
            name: "Daman & Diu"
        }, {
            id: 10,
            name: "Delhi"
        }, {
            id: 11,
            name: "Goa"
        }, {
            id: 12,
            name: "Gujarat"
        }, {
            id: 13,
            name: "Haryana"
        }, {
            id: 14,
            name: "Himachal Pradesh"
        }, {
            id: 15,
            name: "Jammu and Kashmir"
        }, {
            id: 16,
            name: "Jharkhand"
        }, {
            id: 17,
            name: "Karnataka"
        }, {
            id: 18,
            name: "Kerala"
        }, {
            id: 19,
            name: "Lakshadweep"
        }, {
            id: 20,
            name: "Madhya Pradesh"
        }, {
            id: 21,
            name: "Maharashtra"
        }, {
            id: 22,
            name: "Manipur"
        }, {
            id: 23,
            name: "Meghalaya"
        }, {
            id: 24,
            name: "Mizoram"
        }, {
            id: 25,
            name: "Nagaland"
        }, {
            id: 26,
            name: "Odisha"
        }, {
            id: 27,
            name: "Puducherry"
        }, {
            id: 28,
            name: "Punjab"
        }, {
            id: 29,
            name: "Rajasthan"
        }, {
            id: 30,
            name: "Sikkim"
        }, {
            id: 31,
            name: "Tamil Nadu"
        }, {
            id: 32,
            name: "Telangana"
        }, {
            id: 33,
            name: "Tripura"
        }, {
            id: 34,
            name: "Uttar Pradesh"
        }, {
            id: 35,
            name: "Uttrakhand"
        }, {
            id: 36,
            name: "West Bengal"
        }], a.data = {
            voter: {},
            voterid_files: [],
            reviewFile: [],
            verifyData: {
                name: null != localStorage.getItem("voterData") ? JSON.parse(localStorage.getItem("voterData")).name : "",
                epicNumber: null != localStorage.getItem("voterData") ? JSON.parse(localStorage.getItem("voterData")).epicNumber : "",
                state: null != localStorage.getItem("voterData") ? JSON.parse(localStorage.getItem("voterData")).state : ""
            },
            searchData: {
                epicNumber: null != localStorage.getItem("voterData") ? JSON.parse(localStorage.getItem("voterData")).epicNumber : "",
                state: null != localStorage.getItem("voterData") ? JSON.parse(localStorage.getItem("voterData")).state : ""
            }
        }, a.search = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error, console.log("voterID-->", a.data.epicNumber);
            var e = {
                task: "epicNumberSearch",
                essentials: {
                    epicNumber: a.data.searchData.epicNumber,
                    state: a.data.searchData.state
                }
            };
            c.createPlexus("voterIdV2", e).then(function(e) {
                console.log("plexusObj", e), a.data.voterSearchData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.voterSearchData, a.data.error = e, console.log("identity error", e)
            })
        }, a.verify = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error, console.log("voterIdV2-->", a.data.epicNumber);
            var e = {
                task: "verification",
                essentials: {
                    epicNumber: a.data.verifyData.epicNumber,
                    name: a.data.verifyData.name,
                    state: a.data.verifyData.state
                }
            };
            c.createPlexus("voterIdV2", e).then(function(e) {
                console.log("plexusObj", e), a.data.voterIdVerifiedResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.voterIdVerifiedResponse, a.data.error = e, console.log("identity error", e)
            })
        }, a.extract = function() {
            a.loading = !0, delete a.data.error, localStorage.setItem("voteridFiles", JSON.stringify({
                img: a.data.voterid_files
            }));
            var e = {
                task: "extraction",
                essentials: {
                    images: a.data.voterid_files
                }
            };
            c.createPlexus("voterIdV2", e).then(function(e) {
                console.log("plexusObj", e), a.data.voteridExtractedResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.voteridExtractedResponse, a.data.error = e, console.log("identity error", e)
            })
        }, a.fileUpload = function(e, t) {
            a.data.reviewFile[t] = (u.URL || u.webkitURL).createObjectURL(e[0]), o.File.upload(a.data.voterid_files[t]).then(function(e) {
                console.log("Aadhaar File Uploaded", e), a.data.voterid_files[t] = e.directURL, a.data.voter = s.appendObject(p, a.data.voter)
            }, function() {
                i.debug("File submitted, starting worker call", a.data.voterid_files)
            })
        }
    }
    angular.module("signzySandbox").controller("voterIdV2", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv", "$window"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d) {
        a.loading = !1, a.wrongInput = !1, a.stolenVehicleTypeList = d.getStolenVehicleTypeList();
        a.data = {
            vehicleNumber: "",
            blacklistCheck: "false",
            stolen: {
                vehicleNumber: "",
                vehicleType: ""
            }
        }, a.isValid = function() {
            return is_valid("vehicleregistration", a.data.vehicleNumber) ? !0 : !1
        }, a.basicSearch = function() {
            if (a.loading = !0, a.wrongInput = !1, delete a.data.error, a.isValid()) {
                var e = {
                    task: "basicSearch",
                    essentials: {
                        vehicleNumber: a.data.vehicleNumber
                    }
                };
                l.createPlexus("vehicleregistrations", e).then(function(e) {
                    console.log("plexusObj", e), a.data.vehicleregistrationData = e.result, a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.vehicleregistrationData, a.data.error = e, console.log("identity error", e)
                })
            } else a.wrongInput = !0, a.loading = !1
        }, a.detailedSearch = function() {
            if (a.loading = !0, a.wrongInput = !1, delete a.data.error, a.isValid()) {
                var e = {
                    task: "detailedSearch",
                    essentials: a.data
                };
                l.createPlexus("vehicleregistrations", e).then(function(e) {
                    console.log("plexusObj", e), a.data.vehicleregistrationData = e.result, a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.vehicleregistrationData, a.data.error = e, console.log("identity error", e)
                })
            } else a.wrongInput = !0, a.loading = !1
        }, a.otpFlow = function(e) {
            delete a.data.vehicleregistrationData, a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var t = {
                task: "otpBasedSearch",
                essentials: {
                    task: e,
                    vehicleNumber: a.data.vehicleNumber,
                    mobileNumber: a.data.mobileNumber,
                    referenceId: a.data.referenceId,
                    otp: a.data.otp
                }
            };
            l.createPlexus("vehicleregistrations", t).then(function(t) {
                console.log("plexusObj", t), a.data.vehicleregistrationData = t.result, "generateOtp" == e && (a.data.referenceId = a.data.vehicleregistrationData.referenceId), a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.vehicleregistrationData, a.data.error = e, console.log("identity error", e)
            })
        }, a.checkStolenVehicle = function() {
            if (a.loading = !0, a.wrongInput = !1, delete a.data.error, a.isValid()) {
                var e = {
                    task: "checkStolenVehicle",
                    essentials: a.data.stolen
                };
                l.createPlexus("vehicleregistrations", e).then(function(e) {
                    console.log("plexusObj", e), a.data.vehicleregistrationData = e.result, a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.vehicleregistrationData, a.data.error = e, console.log("identity error", e)
                })
            } else a.wrongInput = !0, a.loading = !1
        }, a.challanSearch = function() {
            if (a.loading = !0, a.wrongInput = !1, delete a.data.error, a.isValid()) {
                var e = {
                    task: "challanSearch",
                    essentials: {
                        vehicleNumber: a.data.vehicleNumber
                    }
                };
                l.createPlexus("vehicleregistrations", e).then(function(e) {
                    console.log("plexusObj", e), a.data.vehicleregistrationData = e.result, a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.vehicleregistrationData, a.data.error = e, console.log("identity error", e)
                })
            } else a.wrongInput = !0, a.loading = !1
        }
    }
    angular.module("signzySandbox").controller("VehicleregistrationController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "$cookies", "$timeout", "grantSrv", "httpSrv", "vehicleRegistrationFactory"]
}(),
function() {
    "use strict";

    function e(e, a) {
        var t = {
            ambulance: "AMBULANCE",
            autoRickshaw: "AUTO RICKSHAW",
            bus: "BUS",
            car: "CAR",
            jeep: "JEEP",
            lorry: "LORRY",
            miniBus: "MINI BUS",
            moped: "MOPED",
            motorBoat: "MOTOR BOAT",
            motorCycle: "MOTOR CYCLE",
            roadRoller: "ROAD ROLLER",
            scooter: "SCOOTER",
            stationWagon: "STATION WAGON",
            tanker: "TANKER",
            tempo: "TEMPO",
            tractor: "TRACTOR",
            truck: "TRUCK",
            van: "VAN",
            earthMover: "EARTH MOVER",
            mobileCrane: "MOBILE CRANE",
            trailer: "TRAILER",
            miscellaneous: "MISCELLANEOUS",
            threeWheeler: "THREE WHEELER",
            lgvgoods: "LGVGOODS",
            eRickshaw: "E_RICKSHAW",
            eCar: "E_CAR",
            eBike: "E_BIKE",
            eAutorickshaw: "E_AUTORICKSHAW"
        };
        return {
            getStolenVehicleTypeList: function() {
                var e = [];
                return e = Object.keys(t), e.sort(function(e, a) {
                    return a > e ? -1 : 1
                }), e
            }
        }
    }
    angular.module("signzySandbox").service("vehicleRegistrationFactory", e), e.$inject = ["$http", "$timeout"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        a.loading = !1, a.consent = !1;
        a.data = {
            number: ""
        }, a.generateOTP = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error, console.log("Vaccine-->", a.data.mobileNumber);
            var e = {
                task: "generateOTP",
                essentials: {
                    mobileNumber: a.data.mobileNumber
                }
            };
            c.createPlexus("vaccine", e).then(function(e) {
                console.log("plexusObj", e), a.data.generateOTPResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.generateOTPResponse, a.data.error = e, console.log("identity error", e)
            })
        }, a.vaccinationDetails = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error, console.log("Vaccine-->", a.data.requestId, a.data.otp);
            var e = {
                task: "vaccinationDetails",
                essentials: {
                    requestId: a.data.requestId,
                    otp: a.data.otp
                }
            };
            c.createPlexus("vaccine", e).then(function(e) {
                console.log("plexusObj", e), a.data.vaccinationDetailsResp = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.vaccinationDetailsResp, a.data.error = e, console.log("identity error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("vaccineController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c, u) {
        a.loading = !1, a.consent = !1;
        a.data = {
            number: ""
        }, a.inputData = {
            manufacturerList: [],
            modelList: [],
            cityList: [],
            trimList: [],
            yearList: []
        }, a.trim = function() {
            var e = {
                task: "trimList",
                essentials: {
                    manufacturerName: a.data.manufacturerName,
                    modelName: a.data.modelName,
                    year: a.data.year
                }
            };
            c.createPlexus("usedcar", e).then(function(e) {
                console.log("plexusObj", e), a.inputData.trimList = e.result.trimList
            }, function(a) {
                console.log("plexusObj", e), u.error(a.error.message), console.log("identity error", a)
            })
        }, a.year = function() {
            var e = {
                task: "yearList",
                essentials: {
                    manufacturerName: a.data.manufacturerName,
                    modelName: a.data.modelName
                }
            };
            c.createPlexus("usedcar", e).then(function(e) {
                console.log("plexusObj", e), a.inputData.yearList = e.result.yearList
            }, function(a) {
                console.log("plexusObj", e), u.error(a.error.message), console.log("identity error", a)
            })
        }, a.model = function() {
            var e = {
                task: "modelList",
                essentials: {
                    manufacturerName: a.data.manufacturerName
                }
            };
            c.createPlexus("usedcar", e).then(function(e) {
                console.log("plexusObj", e), a.inputData.modelList = e.result.modelList
            }, function(a) {
                console.log("plexusObj", e), u.error(a.error.message), console.log("identity error", a)
            })
        }, a.manufacturer = function() {
            var e = {
                task: "manufacturerList",
                essentials: {}
            };
            c.createPlexus("usedcar", e).then(function(e) {
                console.log("plexusObj", e), a.inputData.manufacturerList = e.result.manufacturerList
            }, function(a) {
                console.log("plexusObj", e), u.error(a.error.message), console.log("identity error", a)
            })
        }, a.price = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "price",
                essentials: {
                    manufacturerName: a.data.manufacturerName,
                    modelName: a.data.modelName,
                    trimName: a.data.trimName,
                    transactionType: a.data.transactionType,
                    customerType: a.data.customerType,
                    city: a.data.city,
                    year: a.data.year,
                    kmsDriven: a.data.kmsDriven
                }
            };
            c.createPlexus("usedcar", e).then(function(e) {
                console.log("plexusObj", e), a.data.usedCarResponse = e, a.loading = !1
            }, function(t) {
                console.log("plexusObj", e), a.loading = !1, delete a.data.usedCarResponse, a.data.error = t, console.log("identity error", t)
            })
        }, a.city = function() {
            var e = {
                task: "cityList",
                essentials: {}
            };
            c.createPlexus("newcar", e).then(function(e) {
                a.inputData.cityList = e.result.cityList
            }, function(a) {
                console.log("plexusObj", e), u.error(a.error.message), u.error(a.error.message), console.log("identity error", a)
            })
        }, a.city(), setTimeout(function() {
            a.manufacturer()
        }, 500)
    }
    angular.module("signzySandbox").controller("UsedCarController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv", "toastr"]
}(),
function() {
    "use strict";

    function e(e, a) {
        var t = [{
            name: "Select Country",
            value: ""
        }, {
            name: "ANDORRA",
            value: "AD"
        }, {
            name: "UNITED ARAB EMIRATES",
            value: "AE"
        }, {
            name: "AFGHANISTAN",
            value: "AF"
        }, {
            name: "ANTIGUA AND BARBUDA",
            value: "AG"
        }, {
            name: "ANGUILLA",
            value: "AI"
        }, {
            name: "ALBANIA",
            value: "AL"
        }, {
            name: "ARMENIA",
            value: "AM"
        }, {
            name: "NETHERLANDS ANTILLES",
            value: "AN"
        }, {
            name: "ANGOLA",
            value: "AO"
        }, {
            name: "ANTARCTICA",
            value: "AQ"
        }, {
            name: "ARGENTINA",
            value: "AR"
        }, {
            name: "AMERICAN SAMOA",
            value: "AS"
        }, {
            name: "AUSTRIA",
            value: "AT"
        }, {
            name: "AUSTRALIA",
            value: "AU"
        }, {
            name: "ARUBA",
            value: "AW"
        }, {
            name: "AZERBAIJAN",
            value: "AZ"
        }, {
            name: "BOSNIA AND HERZEGOVINA",
            value: "BA"
        }, {
            name: "BARBADOS",
            value: "BB"
        }, {
            name: "BANGLADESH",
            value: "BD"
        }, {
            name: "BELGIUM",
            value: "BE"
        }, {
            name: "BURKINA FASO",
            value: "BF"
        }, {
            name: "BULGARIA",
            value: "BG"
        }, {
            name: "BAHRAIN",
            value: "BH"
        }, {
            name: "BURUNDI",
            value: "BI"
        }, {
            name: "BENIN",
            value: "BJ"
        }, {
            name: "SAINT BARTHELEMY",
            value: "BL"
        }, {
            name: "BERMUDA",
            value: "BM"
        }, {
            name: "BRUNEI DARUSSALAM",
            value: "BN"
        }, {
            name: "BOLIVIA",
            value: "BO"
        }, {
            name: "BRAZIL",
            value: "BR"
        }, {
            name: "BAHAMAS",
            value: "BS"
        }, {
            name: "BHUTAN",
            value: "BT"
        }, {
            name: "BOTSWANA",
            value: "BW"
        }, {
            name: "BELARUS",
            value: "BY"
        }, {
            name: "BELIZE",
            value: "BZ"
        }, {
            name: "CANADA",
            value: "CA"
        }, {
            name: "COCOS (KEELING) ISLANDS",
            value: "CC"
        }, {
            name: "CONGO, THE DEMOCRATIC REPUBLIC OF THE",
            value: "CD"
        }, {
            name: "CENTRAL AFRICAN REPUBLIC",
            value: "CF"
        }, {
            name: "CONGO",
            value: "CG"
        }, {
            name: "SWITZERLAND",
            value: "CH"
        }, {
            name: "COTE D IVOIRE",
            value: "CI"
        }, {
            name: "COOK ISLANDS",
            value: "CK"
        }, {
            name: "CHILE",
            value: "CL"
        }, {
            name: "CAMEROON",
            value: "CM"
        }, {
            name: "CHINA",
            value: "CN"
        }, {
            name: "COLOMBIA",
            value: "CO"
        }, {
            name: "COSTA RICA",
            value: "CR"
        }, {
            name: "CUBA",
            value: "CU"
        }, {
            name: "CAPE VERDE",
            value: "CV"
        }, {
            name: "CHRISTMAS ISLAND",
            value: "CX"
        }, {
            name: "CYPRUS",
            value: "CY"
        }, {
            name: "CZECH REPUBLIC",
            value: "CZ"
        }, {
            name: "GERMANY",
            value: "DE"
        }, {
            name: "DJIBOUTI",
            value: "DJ"
        }, {
            name: "DENMARK",
            value: "DK"
        }, {
            name: "DOMINICA",
            value: "DM"
        }, {
            name: "DOMINICAN REPUBLIC",
            value: "DO"
        }, {
            name: "ALGERIA",
            value: "DZ"
        }, {
            name: "ECUADOR",
            value: "EC"
        }, {
            name: "ESTONIA",
            value: "EE"
        }, {
            name: "EGYPT",
            value: "EG"
        }, {
            name: "ERITREA",
            value: "ER"
        }, {
            name: "SPAIN",
            value: "ES"
        }, {
            name: "ETHIOPIA",
            value: "ET"
        }, {
            name: "FINLAND",
            value: "FI"
        }, {
            name: "FIJI",
            value: "FJ"
        }, {
            name: "FALKLAND ISLANDS (MALVINAS)",
            value: "FK"
        }, {
            name: "MICRONESIA, FEDERATED STATES OF",
            value: "FM"
        }, {
            name: "FAROE ISLANDS",
            value: "FO"
        }, {
            name: "FRANCE",
            value: "FR"
        }, {
            name: "GABON",
            value: "GA"
        }, {
            name: "UNITED KINGDOM",
            value: "GB"
        }, {
            name: "GRENADA",
            value: "GD"
        }, {
            name: "GEORGIA",
            value: "GE"
        }, {
            name: "GHANA",
            value: "GH"
        }, {
            name: "GIBRALTAR",
            value: "GI"
        }, {
            name: "GREENLAND",
            value: "GL"
        }, {
            name: "GAMBIA",
            value: "GM"
        }, {
            name: "GUINEA",
            value: "GN"
        }, {
            name: "EQUATORIAL GUINEA",
            value: "GQ"
        }, {
            name: "GREECE",
            value: "GR"
        }, {
            name: "GUATEMALA",
            value: "GT"
        }, {
            name: "GUAM",
            value: "GU"
        }, {
            name: "GUINEA-BISSAU",
            value: "GW"
        }, {
            name: "GUYANA",
            value: "GY"
        }, {
            name: "HONG KONG",
            value: "HK"
        }, {
            name: "HONDURAS",
            value: "HN"
        }, {
            name: "CROATIA",
            value: "HR"
        }, {
            name: "HAITI",
            value: "HT"
        }, {
            name: "HUNGARY",
            value: "HU"
        }, {
            name: "INDONESIA",
            value: "ID"
        }, {
            name: "IRELAND",
            value: "IE"
        }, {
            name: "ISRAEL",
            value: "IL"
        }, {
            name: "ISLE OF MAN",
            value: "IM"
        }, {
            name: "INDIA",
            value: "IN"
        }, {
            name: "IRAQ",
            value: "IQ"
        }, {
            name: "IRAN, ISLAMIC REPUBLIC OF",
            value: "IR"
        }, {
            name: "ICELAND",
            value: "IS"
        }, {
            name: "ITALY",
            value: "IT"
        }, {
            name: "JAMAICA",
            value: "JM"
        }, {
            name: "JORDAN",
            value: "JO"
        }, {
            name: "JAPAN",
            value: "JP"
        }, {
            name: "KENYA",
            value: "KE"
        }, {
            name: "KYRGYZSTAN",
            value: "KG"
        }, {
            name: "CAMBODIA",
            value: "KH"
        }, {
            name: "KIRIBATI",
            value: "KI"
        }, {
            name: "COMOROS",
            value: "KM"
        }, {
            name: "SAINT KITTS AND NEVIS",
            value: "KN"
        }, {
            name: "KOREA DEMOCRATIC PEOPLES REPUBLIC OF",
            value: "KP"
        }, {
            name: "KOREA REPUBLIC OF",
            value: "KR"
        }, {
            name: "KUWAIT",
            value: "KW"
        }, {
            name: "CAYMAN ISLANDS",
            value: "KY"
        }, {
            name: "KAZAKSTAN",
            value: "KZ"
        }, {
            name: "LAO PEOPLES DEMOCRATIC REPUBLIC",
            value: "LA"
        }, {
            name: "LEBANON",
            value: "LB"
        }, {
            name: "SAINT LUCIA",
            value: "LC"
        }, {
            name: "LIECHTENSTEIN",
            value: "LI"
        }, {
            name: "SRI LANKA",
            value: "LK"
        }, {
            name: "LIBERIA",
            value: "LR"
        }, {
            name: "LESOTHO",
            value: "LS"
        }, {
            name: "LITHUANIA",
            value: "LT"
        }, {
            name: "LUXEMBOURG",
            value: "LU"
        }, {
            name: "LATVIA",
            value: "LV"
        }, {
            name: "LIBYAN ARAB JAMAHIRIYA",
            value: "LY"
        }, {
            name: "MOROCCO",
            value: "MA"
        }, {
            name: "MONACO",
            value: "MC"
        }, {
            name: "MOLDOVA, REPUBLIC OF",
            value: "MD"
        }, {
            name: "MONTENEGRO",
            value: "ME"
        }, {
            name: "SAINT MARTIN",
            value: "MF"
        }, {
            name: "MADAGASCAR",
            value: "MG"
        }, {
            name: "MARSHALL ISLANDS",
            value: "MH"
        }, {
            name: "MACEDONIA, THE FORMER YUGOSLAV REPUBLIC OF",
            value: "MK"
        }, {
            name: "MALI",
            value: "ML"
        }, {
            name: "MYANMAR",
            value: "MM"
        }, {
            name: "MONGOLIA",
            value: "MN"
        }, {
            name: "MACAU",
            value: "MO"
        }, {
            name: "NORTHERN MARIANA ISLANDS",
            value: "MP"
        }, {
            name: "MAURITANIA",
            value: "MR"
        }, {
            name: "MONTSERRAT",
            value: "MS"
        }, {
            name: "MALTA",
            value: "MT"
        }, {
            name: "MAURITIUS",
            value: "MU"
        }, {
            name: "MALDIVES",
            value: "MV"
        }, {
            name: "MALAWI",
            value: "MW"
        }, {
            name: "MEXICO",
            value: "MX"
        }, {
            name: "MALAYSIA",
            value: "MY"
        }, {
            name: "MOZAMBIQUE",
            value: "MZ"
        }, {
            name: "NAMIBIA",
            value: "NA"
        }, {
            name: "NEW CALEDONIA",
            value: "NC"
        }, {
            name: "NIGER",
            value: "NE"
        }, {
            name: "NIGERIA",
            value: "NG"
        }, {
            name: "NICARAGUA",
            value: "NI"
        }, {
            name: "NETHERLANDS",
            value: "NL"
        }, {
            name: "NORWAY",
            value: "NO"
        }, {
            name: "NEPAL",
            value: "NP"
        }, {
            name: "NAURU",
            value: "NR"
        }, {
            name: "NIUE",
            value: "NU"
        }, {
            name: "NEW ZEALAND",
            value: "NZ"
        }, {
            name: "OMAN",
            value: "OM"
        }, {
            name: "PANAMA",
            value: "PA"
        }, {
            name: "PERU",
            value: "PE"
        }, {
            name: "FRENCH POLYNESIA",
            value: "PF"
        }, {
            name: "PAPUA NEW GUINEA",
            value: "PG"
        }, {
            name: "PHILIPPINES",
            value: "PH"
        }, {
            name: "PAKISTAN",
            value: "PK"
        }, {
            name: "POLAND",
            value: "PL"
        }, {
            name: "SAINT PIERRE AND MIQUELON",
            value: "PM"
        }, {
            name: "PITCAIRN",
            value: "PN"
        }, {
            name: "PUERTO RICO",
            value: "PR"
        }, {
            name: "PORTUGAL",
            value: "PT"
        }, {
            name: "PALAU",
            value: "PW"
        }, {
            name: "PARAGUAY",
            value: "PY"
        }, {
            name: "QATAR",
            value: "QA"
        }, {
            name: "ROMANIA",
            value: "RO"
        }, {
            name: "SERBIA",
            value: "RS"
        }, {
            name: "RUSSIAN FEDERATION",
            value: "RU"
        }, {
            name: "RWANDA",
            value: "RW"
        }, {
            name: "SAUDI ARABIA",
            value: "SA"
        }, {
            name: "SOLOMON ISLANDS",
            value: "SB"
        }, {
            name: "SEYCHELLES",
            value: "SC"
        }, {
            name: "SUDAN",
            value: "SD"
        }, {
            name: "SWEDEN",
            value: "SE"
        }, {
            name: "SINGAPORE",
            value: "SG"
        }, {
            name: "SAINT HELENA",
            value: "SH"
        }, {
            name: "SLOVENIA",
            value: "SI"
        }, {
            name: "SLOVAKIA",
            value: "SK"
        }, {
            name: "SIERRA LEONE",
            value: "SL"
        }, {
            name: "SAN MARINO",
            value: "SM"
        }, {
            name: "SENEGAL",
            value: "SN"
        }, {
            name: "SOMALIA",
            value: "SO"
        }, {
            name: "SURINAME",
            value: "SR"
        }, {
            name: "SAO TOME AND PRINCIPE",
            value: "ST"
        }, {
            name: "EL SALVADOR",
            value: "SV"
        }, {
            name: "SYRIAN ARAB REPUBLIC",
            value: "SY"
        }, {
            name: "SWAZILAND",
            value: "SZ"
        }, {
            name: "TURKS AND CAICOS ISLANDS",
            value: "TC"
        }, {
            name: "CHAD",
            value: "TD"
        }, {
            name: "TOGO",
            value: "TG"
        }, {
            name: "THAILAND",
            value: "TH"
        }, {
            name: "TAJIKISTAN",
            value: "TJ"
        }, {
            name: "TOKELAU",
            value: "TK"
        }, {
            name: "TIMOR-LESTE",
            value: "TL"
        }, {
            name: "TURKMENISTAN",
            value: "TM"
        }, {
            name: "TUNISIA",
            value: "TN"
        }, {
            name: "TONGA",
            value: "TO"
        }, {
            name: "TURKEY",
            value: "TR"
        }, {
            name: "TRINIDAD AND TOBAGO",
            value: "TT"
        }, {
            name: "TUVALU",
            value: "TV"
        }, {
            name: "TAIWAN, PROVINCE OF CHINA",
            value: "TW"
        }, {
            name: "TANZANIA, UNITED REPUBLIC OF",
            value: "TZ"
        }, {
            name: "UKRAINE",
            value: "UA"
        }, {
            name: "UGANDA",
            value: "UG"
        }, {
            name: "UNITED STATES",
            value: "US"
        }, {
            name: "URUGUAY",
            value: "UY"
        }, {
            name: "UZBEKISTAN",
            value: "UZ"
        }, {
            name: "HOLY SEE (VATICAN CITY STATE)",
            value: "VA"
        }, {
            name: "SAINT VINCENT AND THE GRENADINES",
            value: "VC"
        }, {
            name: "VENEZUELA",
            value: "VE"
        }, {
            name: "VIRGIN ISLANDS, BRITISH",
            value: "VG"
        }, {
            name: "VIRGIN ISLANDS, U.S.",
            value: "VI"
        }, {
            name: "VIET NAM",
            value: "VN"
        }, {
            name: "VANUATU",
            value: "VU"
        }, {
            name: "WALLIS AND FUTUNA",
            value: "WF"
        }, {
            name: "SAMOA",
            value: "WS"
        }, {
            name: "KOSOVO",
            value: "XK"
        }, {
            name: "YEMEN",
            value: "YE"
        }, {
            name: "MAYOTTE",
            value: "YT"
        }, {
            name: "SOUTH AFRICA",
            value: "ZA"
        }, {
            name: "ZAMBIA",
            value: "ZM"
        }, {
            name: "ZIMBABWE",
            value: "ZW"
        }];
        return {
            getCountryData: function() {
                return t
            }
        }
    }
    angular.module("signzySandbox").service("peopleFinderFactory", e), e.$inject = ["$http", "$timeout"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d) {
        a.loading = !1, a.wrongInput = !1;
        a.data = {
            email: ""
        }, a.countries = d.getCountryData(), a.isValid = function() {
            return a.data.email && is_valid("email", a.data.email) ? !0 : !1
        };
        var c = function(e) {
            var a = {};
            return e && e.email && (a.email = e.email), e && e.phone && (a.phone = e.phone), e && e.username && (a.username = e.username), e && e.userId && (a.userId = e.userId), e && e.url && (a.url = e.url), e && e.name && (a.name = e.name), e && e.country && (a.country = e.country), e && e.state && (a.state = e.state), e && e.city && (a.city = e.city), e && e.street && (a.street = e.street), e && e.house && (a.house = e.house), e && e.zipcode && (a.zipcode = e.zipcode), e && e.address && (a.address = e.address), e && e.ageRange && (a.ageRange = e.ageRange), a
        };
        a.peopleFinder = function() {
            a.loading = !0, delete a.data.error, a.wrongInput = !1;
            var e = {
                task: "peopleFinder",
                essentials: c(a.data)
            };
            l.createPlexus("peoplesearches", e).then(function(e) {
                console.log("plexusObj", e), a.data.peopleData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.peopleData, a.data.error = e, console.log("identity error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("PeopleSearchController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "$cookies", "$timeout", "grantSrv", "httpSrv", "peopleFinderFactory"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c, u) {
        a.loading = !1, a.consent = !1;
        a.data = {
            passport_files: null != localStorage.getItem("passportFiles") ? JSON.parse(localStorage.getItem("passportFiles")).img : [],
            passport: {},
            reviewFile: [],
            faceExtraction: {
                image: null != localStorage.getItem("passportFiles") ? JSON.parse(localStorage.getItem("passportFiles")).img[0] : ""
            },
            mrzData: {
                mrzFirstLine: "",
                mrzSecondLine: ""
            },
            verifyData: {
                fileNumber: "",
                dob: "",
                name: "",
                fuzzy: "true"
            }
        }, a.fetch = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error, console.log("passportV2-->", a.data.fileNumber);
            var e = {
                task: "fetch",
                essentials: {
                    fileNumber: a.data.verifyData.fileNumber,
                    dob: a.data.verifyData.dob
                }
            };
            c.createPlexus("passportV2", e).then(function(e) {
                console.log("plexusObj", e), a.data.passportFetchResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.passportFetchResponse, a.data.error = e, console.log("identity error", e)
            })
        }, a.verify = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error, console.log("passportv2-->", a.data.fileNumber);
            var e = {
                task: "verification",
                essentials: {
                    name: a.data.verifyData.name,
                    fileNumber: a.data.verifyData.fileNumber,
                    dob: a.data.verifyData.dob
                }
            };
            c.createPlexus("passportV2", e).then(function(e) {
                console.log("plexusObj", e), a.data.passportVerifiedResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.passportVerifiedResponse, a.data.error = e, console.log("identity error", e)
            })
        }, a.extract = function() {
            a.loading = !0, delete a.data.error, localStorage.setItem("passportFiles", JSON.stringify({
                img: a.data.passport_files
            }));
            var e = {
                task: "extraction",
                essentials: {
                    images: a.data.passport_files
                }
            };
            c.createPlexus("passportV2", e).then(function(e) {
                console.log("plexusObj", e), a.data.passportExtractedResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.passportExtractedResponse, a.data.error = e, console.log("identity error", e)
            })
        }, a.fileUpload = function(e, t) {
            console.log("file index", e, t), a.data.reviewFile[t] = (u.URL || u.webkitURL).createObjectURL(e[0]), o.File.upload(a.data.passport_files[t]).then(function(e) {
                console.log("passport File Uploaded", e), a.data.passport_files[t] = e.directURL
            }, function() {
                i.debug("File submitted, starting worker call", a.data.passport_files)
            })
        }
    }
    angular.module("signzySandbox").controller("passportV2", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv", "$window"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        console.log("inside passport"), a.loading = !1;
        a.data = {
            passport_files: null != localStorage.getItem("passportFiles") ? JSON.parse(localStorage.getItem("passportFiles")).img : [],
            passport: {},
            faceExtraction: {
                image: null != localStorage.getItem("passportFiles") ? JSON.parse(localStorage.getItem("passportFiles")).img[0] : ""
            },
            mrzData: {
                mrzFirstLine: "",
                mrzSecondLine: ""
            },
            verifyData: {
                fileNumber: "",
                dob: "",
                name: "",
                fuzzy: "true"
            }
        }, a.fileUpload = function(e, t) {
            o.File.upload(a.data.passport_files[t]).then(function(e) {
                console.log("passport File Uploaded", e), a.data.passport_files[t] = e.directURL
            }, function() {
                i.debug("File submitted, starting worker call", a.data.passport_files)
            })
        }, a.extract = function() {
            a.loading = !0, delete a.data.error, localStorage.setItem("passportFiles", JSON.stringify({
                img: a.data.passport_files
            })), c.createIdentity("passport", a.data.passport_files).then(function(e) {
                c.createSnoop(e.id, e.accessToken, "autoRecognition", {}).then(function(e) {
                    console.log("snoopObj", e), a.data.passportExtractedResponse = e.response.result, a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.passportExtractedResponse, a.data.error = e, console.log("snoop error", e)
                })
            }, function(e) {
                a.loading = !1, delete a.data.passportExtractedResponse, a.data.error = e, console.log("identity error", e)
            })
        }, a.getFace = function() {
            a.loading = !0, delete a.data.error, c.createIdentity("passport", []).then(function(e) {
                c.createSnoop(e.id, e.accessToken, "faceExtraction", {
                    url: a.data.passport_files[0]
                }).then(function(e) {
                    console.log("snoopObj", e), a.data.passportFaceResponse = e.response.result, localStorage.setItem("passportFaceResponse", JSON.stringify(a.data.passportFaceResponse)), a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.passportFaceResponse, a.data.error = e, console.log("snoop error", e)
                })
            }, function(e) {
                a.loading = !1, delete a.data.passportFaceResponse, a.data.error = e, console.log("identity error", e)
            })
        }, a.mrzDecoder = function() {
            a.loading = !0, delete a.data.error, c.createIdentity("passport", []).then(function(e) {
                c.createSnoop(e.id, e.accessToken, "mrzDecoder", a.data.mrzData).then(function(e) {
                    console.log("snoopObj", e), a.data.passportMrzResponse = e.response.result, localStorage.setItem("passportMrzResponse", JSON.stringify(a.data.passportMrzResponse)), a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.passportMrzResponse, a.data.error = e, console.log("snoop error", e)
                })
            }, function(e) {
                a.loading = !1, delete a.data.passportMrzResponse, a.data.error = e, console.log("identity error", e)
            })
        }, a.verify = function() {
            a.loading = !0, delete a.data.error, c.createIdentity("passport", []).then(function(e) {
                c.createSnoop(e.id, e.accessToken, "verification", a.data.verifyData).then(function(e) {
                    console.log("snoopObj", e), a.data.passportVerifiedResponse = e.response.result, localStorage.setItem("passportVerifiedResponse", JSON.stringify(a.data.passportVerifiedResponse)), a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.passportVerifiedResponse, a.data.error = e, console.log("snoop error", e)
                })
            }, function(e) {
                a.loading = !1, delete a.data.passportVerifiedResponse, a.data.error = e, console.log("identity error", e)
            })
        }, a.fetch = function() {
            a.loading = !0, delete a.data.error, c.createIdentity("passport", []).then(function(e) {
                c.createSnoop(e.id, e.accessToken, "fetch", a.data.verifyData).then(function(e) {
                    console.log("snoopObj", e), a.data.passportVerifiedResponse = e.response.result, localStorage.setItem("passportVerifiedResponse", JSON.stringify(a.data.passportVerifiedResponse)), a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.passportVerifiedResponse, a.data.error = e, console.log("snoop error", e)
                })
            }, function(e) {
                a.loading = !1, delete a.data.passportVerifiedResponse, a.data.error = e, console.log("identity error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("PassportController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        a.loading = !1, a.consent = !1;
        a.data = {
            number: ""
        }, a.fetch = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error, console.log("Pan-->", a.data.number);
            var e = {
                task: "fetch",
                essentials: {
                    number: a.data.number
                }
            };
            c.createPlexus("panv2", e).then(function(e) {
                console.log("plexusObj", e), a.data.panFetchResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.panFetchResponse, a.data.error = e, console.log("identity error", e)
            })
        }, a.fetchV2 = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error, console.log("Pan-->", a.data.number);
            var e = {
                task: ["1"],
                essentials: {
                    number: a.data.number
                }
            };
            c.createPlexus("panv2", e).then(function(e) {
                console.log("plexusObj", e), a.data.panFetchResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.panFetchResponse, a.data.error = e, console.log("identity error", e)
            })
        }, a.compliance = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error, console.log("Pan-->", a.data.number);
            var e = {
                task: ["2"],
                essentials: {
                    number: a.data.number
                }
            };
            c.createPlexus("panv2", e).then(function(e) {
                console.log("plexusObj", e), a.data.panFetchResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.panFetchResponse, a.data.error = e, console.log("identity error", e)
            })
        }, a.fetchCompliance = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error, console.log("Pan-->", a.data.number);
            var e = {
                task: ["1", "2"],
                essentials: {
                    number: a.data.number
                }
            };
            c.createPlexus("panv2", e).then(function(e) {
                console.log("plexusObj", e), a.data.panFetchResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.panFetchResponse, a.data.error = e, console.log("identity error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("panV2Controller", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c, u) {
        a.loading = !1, a.consent = !1;
        a.data = {}, a.inputData = {
            manufacturerList: [],
            cityList: [],
            modelList: [],
            trimList: []
        }, a.trim = function() {
            var e = {
                task: "trimList",
                essentials: {
                    manufacturerName: a.data.manufacturerName,
                    modelName: a.data.modelName
                }
            };
            c.createPlexus("newcar", e).then(function(e) {
                console.log("plexusObj", e), a.inputData.trimList = e.result.trimList
            }, function(a) {
                console.log("plexusObj", e), u.error(a.error.message), console.log("identity error", a)
            })
        }, a.model = function() {
            var e = {
                task: "modelList",
                essentials: {
                    manufacturerName: a.data.manufacturerName
                }
            };
            c.createPlexus("newcar", e).then(function(e) {
                console.log("plexusObj", e), a.inputData.modelList = e.result.modelList
            }, function(a) {
                console.log("plexusObj", e), u.error(a.error.message), console.log("identity error", a)
            })
        }, a.manufacturer = function() {
            var e = {
                task: "manufacturerList",
                essentials: {}
            };
            c.createPlexus("newcar", e).then(function(e) {
                console.log("plexusObj", e), a.inputData.manufacturerList = e.result.manufacturerList
            }, function(a) {
                console.log("plexusObj", e), u.error(a.error.message), console.log("identity error", a)
            })
        }, a.city = function() {
            var e = {
                task: "cityList",
                essentials: {}
            };
            c.createPlexus("newcar", e).then(function(e) {
                a.inputData.cityList = e.result.cityList
            }, function(a) {
                console.log("plexusObj", e), u.error(a.error.message), console.log("identity error", a)
            })
        }, a.price = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "price",
                essentials: {
                    manufacturerName: a.data.manufacturerName,
                    modelName: a.data.modelName,
                    trimName: a.data.trimName,
                    transactionType: a.data.transactionType,
                    customerType: a.data.customerType,
                    city: a.data.city
                }
            };
            c.createPlexus("newcar", e).then(function(e) {
                console.log("plexusObj", e), a.data.newCarResponse = e, a.loading = !1
            }, function(t) {
                console.log("plexusObj", e), a.loading = !1, delete a.data.newCarResponse, a.data.error = t, console.log("identity error", t)
            })
        }, a.city(), setTimeout(function() {
            a.manufacturer()
        }, 500)
    }
    angular.module("signzySandbox").controller("NewCarController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv", "toastr"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        a.loading = !1, a.wrongInput = !1;
        var u = {};
        a.data = {
            pan_files: null != localStorage.getItem("panFile") ? [localStorage.getItem("panFile")] : [],
            pan: {},
            verifyData: {
                name: null != localStorage.getItem("panExtraction") ? JSON.parse(localStorage.getItem("panExtraction")).name : "",
                number: null != localStorage.getItem("panExtraction") ? JSON.parse(localStorage.getItem("panExtraction")).number : "",
                uid: null != localStorage.getItem("panExtraction") ? JSON.parse(localStorage.getItem("panExtraction")).uid : "",
                fuzzy: "true"
            },
            verifyData2: {
                name: {
                    first: "",
                    middle: "",
                    last: ""
                },
                dob: {
                    date: "",
                    month: "",
                    year: ""
                },
                number: null != localStorage.getItem("panExtraction") ? JSON.parse(localStorage.getItem("panExtraction")).number : "",
                fuzzy: "true"
            },
            faceExtraction: {
                image: null != localStorage.getItem("panFile") ? localStorage.getItem("panFile") : ""
            },
            fileType: "zip",
            password: ""
        }, a.isValid = function(e) {
            return is_valid("pan", e) ? !0 : !1
        }, a.fileUpload = function(e, t) {
            o.File.upload(a.data.pan_files[t]).then(function(e) {
                console.log("PAN File Uploaded", e), a.data.pan_files[t] = e.directURL, a.data.pan = s.appendObject(u, a.data.pan)
            }, function() {
                i.debug("File submitted, starting worker call", a.data.pan_files)
            })
        }, a.verifyGetData = function() {
            var e = localStorage.getItem("panExtraction");
            if (null != e) {
                var t = JSON.parse(localStorage.getItem("panExtraction")).name,
                    i = JSON.parse(localStorage.getItem("panExtraction")).dob,
                    n = t.split(" "),
                    s = i.split("/");
                1 == n.length && (a.data.verifyData2.name.first = n[0]), 2 == n.length && (a.data.verifyData2.name.first = n[0], a.data.verifyData2.name.last = n[1]), 3 == n.length && (a.data.verifyData2.name.first = n[0], a.data.verifyData2.name.middle = n[1], a.data.verifyData2.name.last = n[2]), 3 == s.length && (a.data.verifyData2.dob.date = s[0], a.data.verifyData2.dob.month = s[1], a.data.verifyData2.dob.year = s[2])
            }
        }, a.extract = function() {
            a.loading = !0, delete a.data.error, a.wrongInput = !1, localStorage.setItem("panFile", a.data.pan_files[0]), c.createIdentity("individualPan", a.data.pan_files).then(function(e) {
                c.createSnoop(e.id, e.accessToken, "autoRecognition", {}).then(function(e) {
                    console.log("snoopObj", e), a.data.panExtractedResponse = e.response.result, localStorage.setItem("panExtraction", JSON.stringify(a.data.panExtractedResponse)), a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.panExtractedResponse, a.data.error = e, console.log("snoop error", e)
                })
            }, function(e) {
                a.loading = !1, delete a.data.panExtractedResponse, a.data.error = e, console.log("identity error", e)
            })
        }, a.advanceExtract = function() {
            a.loading = !0, delete a.data.error, a.wrongInput = !1, localStorage.setItem("panFile", a.data.pan_files[0]), c.createIdentity("individualPan", a.data.pan_files).then(function(e) {
                c.createSnoop(e.id, e.accessToken, "advanceExtraction", {}).then(function(e) {
                    console.log("snoopObj", e), a.data.panExtractedResponse = e.response.result, localStorage.setItem("panExtraction", JSON.stringify(a.data.panExtractedResponse)), a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.panExtractedResponse, a.data.error = e, console.log("snoop error", e)
                })
            }, function(e) {
                a.loading = !1, delete a.data.panExtractedResponse, a.data.error = e, console.log("identity error", e)
            })
        }, a.verify = function() {
            a.loading = !0, delete a.data.error, a.wrongInput = !1, a.isValid(a.data.verifyData.number) ? c.createIdentity("individualPan", []).then(function(e) {
                c.createSnoop(e.id, e.accessToken, "verification", a.data.verifyData).then(function(e) {
                    console.log("snoopObj", e), a.data.panVerifiedResponse = e.response.result, localStorage.setItem("panVerifiedResponse", JSON.stringify(a.data.panVerifiedResponse)), a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.panVerifiedResponse, a.data.error = e, console.log("snoop error", e)
                })
            }, function(e) {
                a.loading = !1, delete a.data.panVerifiedResponse, a.data.error = e, console.log("identity error", e)
            }) : (a.wrongInput = !0, a.loading = !1)
        }, a.advanceVerification = function() {
            if (a.loading = !0, delete a.data.error, a.wrongInput = !1, a.isValid(a.data.verifyData.number)) {
                var e = {
                    essentials: {
                        number: a.data.verifyData.number
                    }
                };
                a.data.verifyData.name && a.data.verifyData.name.length > 0 && (e.essentials.name = a.data.verifyData.name), a.data.verifyData.fatherName && a.data.verifyData.fatherName.length > 0 && (e.essentials.fatherName = a.data.verifyData.fatherName), a.data.verifyData.dob && a.data.verifyData.dob.length > 0 && (e.essentials.dob = a.data.verifyData.dob), a.data.verifyData.fuzzy && a.data.verifyData.fuzzy.length > 0 && (e.essentials.fuzzy = a.data.verifyData.fuzzy), c.createIdentity("individualPan", []).then(function(e) {
                    c.createSnoop(e.id, e.accessToken, "advanceVerification", a.data.verifyData).then(function(e) {
                        console.log("snoopObj", e), a.data.panVerifiedResponse = e.response.result, localStorage.setItem("panVerifiedResponse", JSON.stringify(a.data.panVerifiedResponse)), a.loading = !1
                    }, function(e) {
                        a.loading = !1, delete a.data.panVerifiedResponse, a.data.error = e, console.log("snoop error", e)
                    })
                }, function(e) {
                    a.loading = !1, delete a.data.panVerifiedResponse,
                        a.data.error = e, console.log("identity error", e)
                })
            } else a.wrongInput = !0, a.loading = !1
        }, a.fetch = function() {
            a.loading = !0, delete a.data.error, a.wrongInput = !1, a.isValid(a.data.verifyData.number) ? c.createIdentity("individualPan", []).then(function(e) {
                c.createSnoop(e.id, e.accessToken, "fetch", a.data.verifyData).then(function(e) {
                    console.log("snoopObj", e), a.data.panFetchResponse = e.response.result, localStorage.setItem("panFetchResponse", JSON.stringify(a.data.panFetchResponse)), a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.panFetchResponse, a.data.error = e, console.log("snoop error", e)
                })
            }, function(e) {
                a.loading = !1, delete a.data.panFetchResponse, a.data.error = e, console.log("identity error", e)
            }) : (a.wrongInput = !0, a.loading = !1)
        }, a.panAadhaarLinkStatus = function() {
            a.loading = !0, delete a.data.error, a.wrongInput = !1, a.isValid(a.data.verifyData.number) ? c.createIdentity("individualPan", []).then(function(e) {
                c.createSnoop(e.id, e.accessToken, "panAadhaarLinkStatus", a.data.verifyData).then(function(e) {
                    console.log("snoopObj", e), a.data.panAadhaarLinkStatusResponse = e.response.result, localStorage.setItem("panAadhaarLinkStatusResponse", JSON.stringify(a.data.panAadhaarLinkStatusResponse)), a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.panAadhaarLinkStatusResponse, a.data.error = e, console.log("snoop error", e)
                })
            }, function(e) {
                a.loading = !1, delete a.data.panAadhaarLinkStatusResponse, a.data.error = e, console.log("identity error", e)
            }) : (a.wrongInput = !0, a.loading = !1)
        }, a.getFace = function() {
            a.loading = !0, delete a.data.error, a.wrongInput = !1, localStorage.setItem("panFile", a.data.pan_files[0]), c.createIdentity("individualPan", []).then(function(e) {
                c.createSnoop(e.id, e.accessToken, "faceExtraction", {
                    url: a.data.pan_files[0]
                }).then(function(e) {
                    console.log("snoopObj", e), a.data.panFaceResponse = e.response.result, localStorage.setItem("panFaceResponse", JSON.stringify(a.data.panFaceResponse)), a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.panFaceResponse, a.data.error = e, console.log("snoop error", e)
                })
            }, function(e) {
                a.loading = !1, delete a.data.panFaceResponse, a.data.error = e, console.log("identity error", e)
            })
        }, a.verify2 = function() {
            a.loading = !0, delete a.data.error, a.wrongInput = !1, a.isValid(a.data.verifyData2.number) ? c.createIdentity("individualPan", []).then(function(e) {
                c.createSnoop(e.id, e.accessToken, "verification-2", a.data.verifyData2).then(function(e) {
                    console.log("snoopObj", e), a.data.panVerifiedResponse = e.response.result, localStorage.setItem("panVerifiedResponse", JSON.stringify(a.data.panVerifiedResponse)), a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.panVerifiedResponse, a.data.error = e, console.log("snoop error", e)
                })
            }, function(e) {
                a.loading = !1, delete a.data.panVerifiedResponse, a.data.error = e, console.log("identity error", e)
            }) : (a.wrongInput = !0, a.loading = !1)
        }, a.onPremExtraction = function() {
            a.loading = !0, delete a.data.error, a.wrongInput = !1, localStorage.setItem("panFile", a.data.pan_files[0]);
            var e = {
                essentials: {
                    fileUrl: a.data.pan_files[0]
                },
                task: "pan"
            };
            c.createPlexus("onpremextractions", e).then(function(e) {
                a.data.panExtractedResponse = e.result, localStorage.setItem("onPremExtractionResponse", JSON.stringify(a.data.panExtractedResponse)), a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.panExtractedResponse, a.data.error = e, console.log("identity error", e)
            })
        }, a.ePANExtraction = function() {
            a.loading = !0, delete a.data.error, c.createIdentity("individualPan", []).then(function(e) {
                c.createSnoop(e.id, e.accessToken, "ePan", {
                    file: a.data.pan_files[0],
                    password: a.data.password,
                    type: "individualPan"
                }).then(function(e) {
                    console.log("snoopObj", e), a.data.ePanResponse = e.response.result, localStorage.setItem("ePanResponse", JSON.stringify(a.data.ePanResponse)), a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.ePanResponse, a.data.error = e, console.log("snoop error", e)
                })
            }, function(e) {
                a.loading = !1, delete a.data.ePanResponse, a.data.error = e, console.log("identity error", e)
            })
        }, a.signatureExtraction = function() {
            a.loading = !0, delete a.data.error, a.wrongInput = !1, localStorage.setItem("panFile", a.data.pan_files[0]), c.createIdentity("individualPan", a.data.pan_files).then(function(e) {
                c.createSnoop(e.id, e.accessToken, "signatureExtraction", {}).then(function(e) {
                    console.log("snoopObj", e), a.data.panExtractedResponse = e.response.result, localStorage.setItem("signatureExtraction", JSON.stringify(a.data.panExtractedResponse)), a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.panExtractedResponse, a.data.error = e, console.log("snoop error", e)
                })
            }, function(e) {
                a.loading = !1, delete a.data.panExtractedResponse, a.data.error = e, console.log("identity error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("IndividualPANController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c, u) {
        a.loading = !1, a.wrongInput = !1;
        a.countryList = c.getCountryCodes(), a.stddata = {
            identity: {},
            address: {}
        }, a.advData = {
            identity: {},
            address: {}
        }, a.standardSearch = function() {
            a.loading = !0, a.wrongInput = !1, delete a.stdData.error;
            var e = {
                task: "standardSearch",
                essentials: u.assignObject(a.stdData)
            };
            console.log(e), d.createPlexus("globalverifications", e).then(function(e) {
                console.log("plexusObj", e), a.stdData.globalVerificationStdData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.stdData.globalVerificationStdData, a.stdData.error = e, console.log("identity error", e)
            })
        }, a.advancedSearch = function() {
            a.loading = !0, a.wrongInput = !1, delete a.advData.error;
            var e = {
                task: "advancedSearch",
                essentials: u.assignObject(a.advData)
            };
            console.log("input is ", e), d.createPlexus("globalverifications", e).then(function(e) {
                console.log("plexusObj", e), a.advData.globalVerificationAdvData = e.result, a.loading = !1
            }, function(e) {
                console.log("inside error ", e), a.loading = !1, delete a.advData.globalVerificationAdvData, a.advData.error = e, console.log("identity error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("GlobalVerificationKYCController", e), e.$inject = ["$state", "$scope", "$http", "$log", "Upload", "URLService", "$cookies", "$timeout", "grantSrv", "httpSrv", "globalVerificationKYCFactory", "UtilsService"]
}(),
function() {
    "use strict";

    function e(e, a) {
        var t = [{
            countryName: "Australia",
            countryCode: "AU"
        }, {
            countryName: "Brazil",
            countryCode: "BR"
        }, {
            countryName: "Canada",
            countryCode: "CA"
        }, {
            countryName: "China",
            countryCode: "CN"
        }, {
            countryName: "Hong Kong",
            countryCode: "HK"
        }, {
            countryName: "Japan",
            countryCode: "JP"
        }, {
            countryName: "Mexico",
            countryCode: "MX"
        }, {
            countryName: "Malaysia",
            countryCode: "MY"
        }, {
            countryName: "New Zealand",
            countryCode: "NZ"
        }, {
            countryName: "Singapore",
            countryCode: "SG"
        }, {
            countryName: "Turkey",
            countryCode: "TR"
        }, {
            countryName: "United States",
            countryCode: "US"
        }, {
            countryName: "Denmark",
            countryCode: "DK"
        }, {
            countryName: "Cambodia",
            countryCode: "KH"
        }];
        return {
            getCountryCodes: function() {
                return t
            }
        }
    }
    angular.module("signzySandbox").service("globalVerificationKYCFactory", e), e.$inject = ["$http", "$timeout"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l) {
        a.loading = !1, a.wrongInput = !1;
        a.data = {
            email: ""
        }, a.isValid = function() {
            return a.data.email && is_valid("email", a.data.email) ? !0 : !1
        }, a.search = function() {
            if (a.loading = !0, delete a.data.error, a.wrongInput = !1, a.isValid()) {
                var e = {
                    essentials: {
                        emailId: a.data.email
                    }
                };
                l.createPlexus("emailverificationsv2", e).then(function(e) {
                    console.log("plexusObj", e), a.data.emailData = e.result, a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.emailData, a.data.error = e, console.log("plexus error", e)
                })
            } else console.log("here"), a.wrongInput = !0, a.loading = !1
        }
    }
    angular.module("signzySandbox").controller("EmailVerificationv2Controller", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "$cookies", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l) {
        a.loading = !1, a.wrongInput = !1;
        a.data = {
            email: ""
        }, a.isValid = function() {
            return a.data.email && is_valid("email", a.data.email) ? !0 : !1
        }, a.search = function() {
            if (a.loading = !0, delete a.data.error, a.wrongInput = !1, a.isValid()) {
                var e = {
                    essentials: {
                        emailId: a.data.email
                    }
                };
                l.createPlexus("emailverifications", e).then(function(e) {
                    console.log("plexusObj", e), a.data.emailData = e.result, a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.emailData, a.data.error = e, console.log("identity error", e)
                })
            } else a.wrongInput = !0, a.loading = !1
        }
    }
    angular.module("signzySandbox").controller("EmailVerificationController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "$cookies", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l) {
        a.loading = !1, a.wrongInput = !1;
        a.data = {
            email: ""
        }, a.isValid = function() {
            return a.data.email && is_valid("email", a.data.email) ? !0 : !1
        }, a.search = function() {
            a.loading = !0, delete a.data.error, a.wrongInput = !1;
            var e = {
                essentials: {
                    emailId: a.data.email
                }
            };
            l.createPlexus("emailvalidations", e).then(function(e) {
                console.log("plexusObj", e), a.data.emailverifyData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.emailverifyData, a.data.error = e, console.log("identity error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("EmailValidationController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "$cookies", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c, u) {
        a.loading = !1, a.consent = !1;
        a.data = {
            uid: "",
            token: "",
            callbackUrl: "http://callback.development.signzy.tech/api/posts"
        }, a.createUrl = function() {
            a.loading = !0, console.log("createUrl");
            var e = {
                    task: "url",
                    uid: a.data.uid,
                    callbackUrl: "http://callback.development.signzy.tech/api/posts"
                },
                i = {
                    method: "POST",
                    url: n.getURLs().ekyc.createUrl + r.get("ekycUserId") + "/aadhaarekycs",
                    headers: {
                        "Content-Type": "application/json",
                        Authorization: r.get("ekycAccessToken")
                    },
                    data: e
                };
            t(i).then(function(e) {
                console.log("Received Create URL Response:", e), console.log("response.result.url", e.data.result.url), a.data.token = e.data.result.token, console.log("$scope.data.token", a.data.token), c.open(e.data.result.url, "Signzy EKYC Module", "width=1280,height=1028"), a.loading = !1, o(function() {
                    a.getData()
                }, 18e3)
            }, function(e) {
                a.loading = !1, u.error("Request Limit Exceeded. Please contact sales for futher support")
            })
        };
        var p = 2e3;
        a.getData = function() {
            console.log("getData function"), a.loading = !0;
            var e = {
                    token: a.data.token,
                    customerId: r.get("ekycUserId")
                },
                i = {
                    method: "POST",
                    url: n.getURLs().ekyc.getData,
                    headers: {
                        "Content-Type": "application/json",
                        Authorization: r.get("ekycAccessToken")
                    },
                    data: e
                };
            t(i).then(function(e) {
                "undefined" == typeof e.data.result ? (console.log("not got data"), o(function() {
                    a.getData()
                }, p)) : (console.log("got data"), "undefined" != typeof e.data.result.result && "undefined" != typeof e.data.result.result.kycData ? (a.loading = !1, a.data.ekyc = e.data.result.result.kycData) : (a.loading = !1, a.data.ekycError = e.data.result.kycData))
            }, function(e) {
                o(function() {
                    a.getData()
                }, p)
            })
        }
    }
    angular.module("signzySandbox").controller("EKYCController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "$timeout", "grantSrv", "httpSrv", "$window", "toastr"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c, u) {
        a.loading = !1;
        var p = {};
        a.data = {
            dl_files: null != localStorage.getItem("dlFile") ? [localStorage.getItem("dlFile")] : [],
            dl: {},
            reviewFile: [],
            verifyData: {
                issueDate: null != localStorage.getItem("dlExtraction") ? JSON.parse(localStorage.getItem("dlExtraction")).issueDate : "",
                dob: null != localStorage.getItem("dlExtraction") ? JSON.parse(localStorage.getItem("dlExtraction")).dob : "",
                number: null != localStorage.getItem("dlExtraction") ? JSON.parse(localStorage.getItem("dlExtraction")).number : ""
            },
            fetchData: {
                dob: null != localStorage.getItem("dlExtraction") ? JSON.parse(localStorage.getItem("dlExtraction")).dob : "",
                number: null != localStorage.getItem("dlExtraction") ? JSON.parse(localStorage.getItem("dlExtraction")).number : ""
            },
            faceExtraction: {
                image: null != localStorage.getItem("dlFile") ? localStorage.getItem("dlFile") : ""
            }
        }, a.fileUpload = function(e, t) {
            a.data.reviewFile[t] = (u.URL || u.webkitURL).createObjectURL(e[0]), o.File.upload(a.data.dl_files[t]).then(function(e) {
                console.log("DL File Uploaded", e), a.data.dl_files[t] = e.directURL, a.data.dl = s.appendObject(p, a.data.pan)
            }, function() {
                i.debug("File submitted, starting worker call", a.data.dl_files)
            })
        }, a.extract = function() {
            a.loading = !0, delete a.data.error, localStorage.setItem("dlFile", a.data.dl_files[0]), localStorage.setItem("dlBackFile", a.data.dl_files[1]);
            var e = {
                task: "extraction",
                essentials: {
                    images: a.data.dl_files
                }
            };
            c.createPlexus("drivingLicenceV2", e).then(function(e) {
                console.log("plexusObj", e), a.data.dlExtractedResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.dlExtractedResponse, a.data.error = e, console.log("identity error", e)
            })
        }, a.verify = function() {
            a.loading = !0, a.wrongInput = !1;
            var e = {
                task: "verification",
                essentials: {
                    number: a.data.verifyData.number,
                    dob: a.data.verifyData.dob,
                    issueDate: a.data.verifyData.issueDate
                }
            };
            c.createPlexus("drivingLicenceV2", e).then(function(e) {
                console.log("plexusObj", e), a.data.dlVerifiedResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.dlVerifiedResponse, a.data.error = e, console.log("identity error", e)
            })
        }, a.fetch = function() {
            a.loading = !0, a.wrongInput = !1;
            var e = {
                task: "fetch",
                essentials: {
                    number: a.data.fetchData.number,
                    dob: a.data.fetchData.dob
                }
            };
            c.createPlexus("drivingLicenceV2", e).then(function(e) {
                console.log("plexusObj", e), a.data.dlFetchResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.dlFetchResponse, a.data.error = e, console.log("identity error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("drivingLicenceV2", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv", "$window"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        a.loading = !1;
        var u = {};
        a.data = {
            dl_files: null != localStorage.getItem("dlFile") ? [localStorage.getItem("dlFile")] : [],
            dl: {},
            verifyData: {
                issueDate: null != localStorage.getItem("dlExtraction") ? JSON.parse(localStorage.getItem("dlExtraction")).issueDate : "",
                dob: null != localStorage.getItem("dlExtraction") ? JSON.parse(localStorage.getItem("dlExtraction")).dob : "",
                number: null != localStorage.getItem("dlExtraction") ? JSON.parse(localStorage.getItem("dlExtraction")).number : ""
            },
            fetchData: {
                dob: null != localStorage.getItem("dlExtraction") ? JSON.parse(localStorage.getItem("dlExtraction")).dob : "",
                number: null != localStorage.getItem("dlExtraction") ? JSON.parse(localStorage.getItem("dlExtraction")).number : ""
            },
            faceExtraction: {
                image: null != localStorage.getItem("dlFile") ? localStorage.getItem("dlFile") : ""
            }
        }, a.fileUpload = function(e, t) {
            o.File.upload(a.data.dl_files[t]).then(function(e) {
                console.log("DL File Uploaded", e), a.data.dl_files[t] = e.directURL, a.data.dl = s.appendObject(u, a.data.pan)
            }, function() {
                i.debug("File submitted, starting worker call", a.data.dl_files)
            })
        }, a.extract = function() {
            a.loading = !0, delete a.data.error, localStorage.setItem("dlFile", a.data.dl_files[0]), localStorage.setItem("dlBackFile", a.data.dl_files[1]);
            for (var e = [], t = 0; t < a.data.dl_files.length; t++) a.data.dl_files[t] && e.push(a.data.dl_files[t]);
            c.createIdentity("drivingLicence", e).then(function(e) {
                c.createSnoop(e.id, e.accessToken, "autoRecognition", {}).then(function(e) {
                    console.log("snoopObj", e), a.data.dlExtractedResponse = e.response.result, localStorage.setItem("dlExtraction", JSON.stringify(a.data.dlExtractedResponse)), a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.dlExtractedResponse, a.data.error = e, console.log("snoop error", e)
                })
            }, function(e) {
                a.loading = !1, delete a.data.dlExtractedResponse, a.data.error = e, console.log("identity error", e)
            })
        }, a.extractBeta = function() {
            a.loading = !0, delete a.data.error, localStorage.setItem("dlFile", a.data.dl_files[0]), localStorage.setItem("dlBackFile", a.data.dl_files[1]);
            for (var e = [], t = 0; t < a.data.dl_files.length; t++) a.data.dl_files[t] && e.push(a.data.dl_files[t]);
            c.createIdentity("drivingLicence", e).then(function(e) {
                c.createSnoop(e.id, e.accessToken, "autoRecognitionBeta", {}).then(function(e) {
                    console.log("snoopObj", e), a.data.dlExtractedResponseBeta = e.response.result, localStorage.setItem("dlExtractionBeta", JSON.stringify(a.data.dlExtractedResponseBeta)), a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.dlExtractedResponse, a.data.error = e, console.log("snoop error", e)
                })
            }, function(e) {
                a.loading = !1, delete a.data.dlExtractedResponse, a.data.error = e, console.log("identity error", e)
            })
        }, a.advanceExtract = function() {
            a.loading = !0, delete a.data.error, localStorage.setItem("dlFile", a.data.dl_files[0]), c.createIdentity("drivingLicence", a.data.dl_files).then(function(e) {
                c.createSnoop(e.id, e.accessToken, "advanceExtraction", {}).then(function(e) {
                    console.log("snoopObj", e), a.data.dlExtractedResponse = e.response.result, localStorage.setItem("dlExtraction", JSON.stringify(a.data.dlExtractedResponse)), a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.dlExtractedResponse, a.data.error = e, console.log("snoop error", e)
                })
            }, function(e) {
                a.loading = !1, delete a.data.dlExtractedResponse, a.data.error = e, console.log("identity error", e)
            })
        }, a.verify = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error, c.createIdentity("drivingLicence", []).then(function(e) {
                c.createSnoop(e.id, e.accessToken, "verification", a.data.verifyData).then(function(e) {
                    console.log("snoopObj", e), a.data.dlVerifiedResponse = e.response.result, localStorage.setItem("dlVerifiedResponse", JSON.stringify(a.data.dlVerifiedResponse)), a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.dlVerifiedResponse, a.data.error = e, console.log("snoop error", e)
                })
            }, function(e) {
                a.loading = !1, delete a.data.dlVerifiedResponse, a.data.error = e, console.log("identity error", e)
            })
        }, a.fetch = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error, c.createIdentity("drivingLicence", []).then(function(e) {
                c.createSnoop(e.id, e.accessToken, "fetch", a.data.fetchData).then(function(e) {
                    console.log("snoopObj", e), a.data.dlFetchResponse = e.response.result, localStorage.setItem("dlFetchResponse", JSON.stringify(a.data.dlFetchResponse)), a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.dlFetchResponse, a.data.error = e, console.log("snoop error", e)
                })
            }, function(e) {
                a.loading = !1, delete a.data.dlVerifiedResponse, a.data.error = e, console.log("identity error", e)
            })
        }, a.getFace = function() {
            a.loading = !0, delete a.data.error, a.wrongInput = !1, c.createIdentity("drivingLicence", []).then(function(e) {
                c.createSnoop(e.id, e.accessToken, "faceExtraction", {
                    url: a.data.dl_files[0]
                }).then(function(e) {
                    console.log("snoopObj", e), a.data.dlFaceResponse = e.response.result, localStorage.setItem("dlFaceResponse", JSON.stringify(a.data.dlFaceResponse)), a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.dlFaceResponse, a.data.error = e, console.log("snoop error", e)
                })
            }, function(e) {
                a.loading = !1, delete a.data.dlFaceResponse, a.data.error = e, console.log("identity error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("DrivingLicenceController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l) {
        a.loading = !1, a.wrongInput = !1;
        a.data = {
            domain: ""
        }, a.search = function() {
            a.loading = !0, delete a.data.error, a.wrongInput = !1;
            var e = {
                essentials: {
                    webDomain: a.data.domain
                }
            };
            l.createPlexus("domainverificationlite", e).then(function(e) {
                console.log("plexusObj", e), a.data.webData = e.result, a.loading = !1
            }, function(t) {
                console.log("inputData", e), a.loading = !1, delete a.data.webData, a.data.error = t, console.log("identity error", t)
            })
        }
    }
    angular.module("signzySandbox").controller("DomainVerificationLiteController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "$cookies", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l) {
        a.loading = !1, a.wrongInput = !1;
        a.data = {
            webDomain: ""
        }, a.search = function() {
            a.loading = !0, delete a.data.error, a.wrongInput = !1;
            var e = {
                essentials: {
                    webDomain: a.data.webDomain
                }
            };
            l.createPlexus("domainverifications", e).then(function(e) {
                console.log("plexusObj", e), a.data.webData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.webData, a.data.error = e, console.log("identity error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("DomainVerificationController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "$cookies", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c, u, p, g) {
        a.loading = !1, a.consent = !1;
        a.digilockerWindow = "", a.data = {}, a.data.requestId = localStorage.getItem("digilockerRequestId"), a.data.selectedFiles = [], a.test = "https://staging-persist.signzy.tech/api/files/2553761/download/94bcbd826358426dbfc39692b833203b22723043bb684763a89b4bc0d8477f18.pdf", a.createUrl = function() {
            a.loading = !0, console.log("createUrl");
            var e = {
                    task: "url"
                },
                i = {
                    method: "POST",
                    url: n.getURLs().patron + r.get("userId") + "/digilockers",
                    headers: {
                        "Content-Type": "application/json",
                        Authorization: r.get("accessToken")
                    },
                    data: e
                };
            t(i).then(function(e) {
                console.log("Received Create URL Response:", e), console.log("response.result.url", e.data.result.webUrl), a.data.requestId = e.data.result.requestId, a.data.iframeUrl = e.data.result.url, a.data.windowRef = u.open(a.data.iframeUrl), localStorage.setItem("digilockerRequestId", e.data.result.requestId), a.loading = !1, l(function() {
                    a.getData()
                }, 1e4)
            }, function(e) {
                a.loading = !1, p.error("Request Limit Exceeded. Please contact sales for futher support")
            })
        };
        var m = 2e3;
        a.generateOtp = function() {
            a.loading = !0, delete a.data.error, delete a.data.otpResponse;
            var e = {
                    task: "generateOtp",
                    essentials: {
                        uid: a.data.uid
                    }
                },
                i = {
                    method: "POST",
                    url: n.getURLs().patron + r.get("userId") + "/digilockers",
                    headers: {
                        "Content-Type": "application/json",
                        Authorization: r.get("accessToken")
                    },
                    data: e
                };
            t(i).then(function(e) {
                console.log("Received Create URL Response:", e), console.log("response.result.url", e.data), a.data.otpResponse = e.data.result, a.data.requestId = e.data.result && e.data.result.requestId, localStorage.setItem("digilockerRequestId", e.data.result.requestId), a.loading = !1
            }, function(e) {
                a.loading = !1, a.data.error = e.data, p.error("Error from digilocker")
            })
        }, a.verifyOtp = function() {
            a.loading = !0, delete a.data.error, delete a.data.otpResponse;
            var e = {
                    task: "verifyOtp",
                    essentials: {
                        requestId: a.data.requestId,
                        otp: a.data.otp
                    }
                },
                i = {
                    method: "POST",
                    url: n.getURLs().patron + r.get("userId") + "/digilockers",
                    headers: {
                        "Content-Type": "application/json",
                        Authorization: r.get("accessToken")
                    },
                    data: e
                };
            t(i).then(function(e) {
                console.log("Received Create URL Response:", e), console.log("response.result.url", e.data), a.data.otpResponse = e.data.result, a.loading = !1
            }, function(e) {
                a.loading = !1, a.data.error = e.data, p.error("Error from digilocker")
            })
        }, a.fetchFiles = function() {
            a.loading = !0, delete a.data.error, delete a.data.otpResponse;
            var e = {
                task: "fetchFiles",
                essentials: {
                    isPublic: !0,
                    requestId: a.data.requestId,
                    docType: a.data.docType && a.data.docType.toUpperCase().split(",")
                }
            };
            console.log("input data ", e);
            var i = {
                method: "POST",
                url: n.getURLs().patron + r.get("userId") + "/digilockers",
                headers: {
                    "Content-Type": "application/json",
                    Authorization: r.get("accessToken")
                },
                data: e
            };
            t(i).then(function(e) {
                console.log("Received Create URL Response:", e), console.log("response.result.url", e.data), a.data.otpResponse = e.data.result, a.loading = !1
            }, function(e) {
                a.loading = !1, a.data.error = e.data, p.error("Error from digilocker")
            })
        }, a.getStatus = function() {
            a.loading = !0, delete a.data.error, delete a.data.otpResponse;
            var e = {
                task: "getStatus",
                essentials: {
                    requestId: a.data.requestId
                }
            };
            console.log("input data ", e);
            var i = {
                method: "POST",
                url: n.getURLs().patron + r.get("userId") + "/digilockers",
                headers: {
                    "Content-Type": "application/json",
                    Authorization: r.get("accessToken")
                },
                data: e
            };
            t(i).then(function(e) {
                console.log("Received Create URL Response:", e), console.log("response.result.url", e.data), a.data.otpResponse = e.data.result, a.loading = !1
            }, function(e) {
                a.loading = !1, a.data.error = e.data, p.error("Error from digilocker")
            })
        }, a.toggleId = function(e) {
            e.selected ? (e.selected = !1, a.data.selectedFiles.splice(a.data.selectedFiles.indexOf(e.id), 1)) : (a.data.selectedFiles.push(e.id), e.selected = !0, console.log(a.data.selectedFiles))
        }, a.getFiles = function() {
            a.loading = !0;
            var e = {
                    task: "getFiles",
                    essentials: {
                        requestId: a.data.requestId,
                        fileIds: a.data.selectedFiles
                    }
                },
                i = {
                    method: "POST",
                    url: n.getURLs().patron + r.get("userId") + "/digilockers",
                    headers: {
                        "Content-Type": "application/json",
                        Authorization: r.get("accessToken")
                    },
                    data: e
                };
            t(i).then(function(e) {
                "undefined" == typeof e.data.result || "undefined" == typeof e.data.result.files ? (console.log("not got data"), a.data.filesData = e && e.data && e.data.error ? e.data.error : "Error", a.loading = !1) : (console.log("got data"), a.loading = !1, a.data.filesData = e.data.result)
            }, function(e) {
                a.data.filesData = e.data, a.loading = !1
            })
        }, a.getDetails = function() {
            a.loading = !0;
            var e = {
                    task: "getDetails",
                    essentials: {
                        requestId: a.data.requestId
                    }
                },
                i = {
                    method: "POST",
                    url: n.getURLs().patron + r.get("userId") + "/digilockers",
                    headers: {
                        "Content-Type": "application/json",
                        Authorization: r.get("accessToken")
                    },
                    data: e
                };
            t(i).then(function(e) {
                e && "undefined" == typeof e.data.result || "undefined" == typeof e.data.result.files ? (console.log("not got data"), l(function() {
                    a.getData()
                }, m)) : (console.log("got data"), a.loading = !1, a.data.digiLockerData = e.data.result, console.log(a.data.digiLockerData), a.data.windowRef.close())
            }, function(e) {
                a.data.digiLockerData = e.data, a.loading = !1
            })
        }, a.getEAadhaar = function() {
            a.loading = !0;
            var e = {
                    task: "getEadhaar",
                    essentials: {
                        requestId: a.data.requestId
                    }
                },
                i = {
                    method: "POST",
                    url: n.getURLs().patron + r.get("userId") + "/digilockers",
                    headers: {
                        "Content-Type": "application/json",
                        Authorization: r.get("accessToken")
                    },
                    data: e
                };
            t(i).then(function(e) {
                console.log("result ", e), a.loading = !1, a.data.digiLockerData = e.data && e.data.result, a.data.filesData = e.data && e.data.result && e.data.result.photo
            }, function(e) {
                console.log("error ", e), a.data.digiLockerData = e.data, a.loading = !1
            })
        }, a.deleteToken = function() {
            a.loading = !0;
            var e = {
                    task: "deleteToken",
                    essentials: {
                        requestId: a.data.requestId
                    }
                },
                i = {
                    method: "POST",
                    url: n.getURLs().patron + r.get("userId") + "/digilockers",
                    headers: {
                        "Content-Type": "application/json",
                        Authorization: r.get("accessToken")
                    },
                    data: e
                };
            t(i).then(function(e) {
                console.log("result ", e), a.loading = !1, a.data.digiLockerData = e.data && e.data.result
            }, function(e) {
                console.log("error ", e), a.data.digiLockerData = e.data, a.loading = !1
            })
        }, a.pullDocuments = function() {
            a.loading = !0;
            var e = {
                    task: "pullDocuments",
                    essentials: {
                        requestId: a.data.requestId,
                        docType: a.data.docType,
                        name: a.data.name || "",
                        panNumber: a.data.panNumber || ""
                    }
                },
                i = {
                    method: "POST",
                    url: n.getURLs().patron + r.get("userId") + "/digilockers",
                    headers: {
                        "Content-Type": "application/json",
                        Authorization: r.get("accessToken")
                    },
                    data: e
                };
            t(i).then(function(e) {
                console.log("result ", e), a.loading = !1, a.data.digiLockerData = e.data && e.data.result
            }, function(e) {
                console.log("error ", e), a.data.digiLockerData = e.data, a.loading = !1
            })
        }, a.getListOfDocuments = function() {
            a.loading = !0;
            var e = {
                    task: "listofdocuments",
                    essentials: {}
                },
                i = {
                    method: "POST",
                    url: n.getURLs().patron + r.get("userId") + "/digilockers",
                    headers: {
                        "Content-Type": "application/json",
                        Authorization: r.get("accessToken")
                    },
                    data: e
                };
            t(i).then(function(e) {
                console.log("result ", e), a.loading = !1, a.data.digiLockerData = e.data && e.data.result
            }, function(e) {
                console.log("error ", e), a.data.digiLockerData = e.data, a.loading = !1
            })
        }, a.verifyAccount = function() {
            a.loading = !0;
            var e = {
                task: "verifyAccount",
                essentials: {}
            };
            "mobileNumber" == a.data.inputType ? e.essentials.mobileNumber = a.data.inputNumber : e.essentials.aadhaarNumber = a.data.inputNumber;
            var i = {
                method: "POST",
                url: n.getURLs().patron + r.get("userId") + "/digilockers",
                headers: {
                    "Content-Type": "application/json",
                    Authorization: r.get("accessToken")
                },
                data: e
            };
            t(i).then(function(e) {
                console.log("result ", e), a.data.digiLockerData = e.data && e.data.result
            })["catch"](function(e) {
                console.log("error ", e), a.data.digiLockerData = e.data
            })["finally"](function() {
                a.loading = !1
            })
        }
    }
    angular.module("signzySandbox").controller("DigilockerController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv", "$window", "toastr", "$sce"]
}(),
function() {
    "use strict";

    function e(e, a) {
        var t = [{
                idType: "A",
                description: "Aadhaar (Last 4 UDIN Number|NAME|DATE|GENDER)"
            }, {
                idType: "P",
                description: "Pan Number"
            }, {
                idType: "D",
                description: "Driving License"
            }, {
                idType: "V",
                description: "Voter ID"
            }, {
                idType: "F",
                description: "NREGA Job Card"
            }, {
                idType: "G",
                description: "National Population Register Letter"
            }, {
                idType: "Z",
                description: "CKYC Identifier"
            }, {
                idType: "I",
                description: "Certificate of Incorporation/Formation"
            }, {
                idType: "R",
                description: "Registration Certificate"
            }, {
                idType: "PP",
                description: "Passport Number"
            }],
            i = {
                "01": {
                    description: "DOB/DOI"
                },
                "02": {
                    description: "Pincode and Year of Birth (6 digit pincode + 4 digit year)"
                },
                "03": {
                    description: "Mobile Number"
                }
            };
        return {
            getAllowedIdTypes: function() {
                return t
            },
            getAllowedAuthFactorTypes: function() {
                var e = [];
                return Object.keys(i).forEach(function(a, t) {
                    e.push({
                        authFactorType: a,
                        description: i[a].description
                    })
                }), e
            }
        }
    }
    angular.module("signzySandbox").service("ckycFactory", e), e.$inject = ["$http", "$timeout"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c, u) {
        a.allowedIdTypes = u.getAllowedIdTypes(), a.allowedAuthFactorTypes = u.getAllowedAuthFactorTypes(), a.loading = !1, a.wrongInput = !1;
        a.data = {
            search: {
                idNumber: "",
                idType: ""
            },
            fetch: {
                ckycNumber: null != localStorage.getItem("ckycNumber") ? localStorage.getItem("ckycNumber") : "",
                authFactorType: "",
                authFactorValue: ""
            }
        }, a.CKYCSearch = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "search",
                essentials: a.data.search
            };
            c.createPlexus("ckyc", e).then(function(e) {
                console.log("plexusObj", e), a.data.responseData = e.result, e && e.result && e.result.ckycNumber && localStorage.setItem("ckycNumber", e.result.ckycNumber), a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.responseData, a.data.error = e, console.log("plexus error", e)
            })
        }, a.CKYCFetch = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "fetch",
                essentials: a.data.fetch
            };
            c.createPlexus("ckyc", e).then(function(e) {
                console.log("plexusObj", e), a.data.responseData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.responseData, a.data.error = e, console.log("plexus error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("CkycController", e), e.$inject = ["$state", "$scope", "$http", "$log", "Upload", "URLService", "UtilsService", "$cookies", "$timeout", "grantSrv", "httpSrv", "ckycFactory"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        a.loading = !1, a.wrongInput = !1;
        var u = {};
        a.data = {
            pan_files: null != localStorage.getItem("businessPanFile") ? [localStorage.getItem("businessPanFile")] : [],
            pan: {},
            verifyData: {
                name: null != localStorage.getItem("businessPanExtraction") ? JSON.parse(localStorage.getItem("businessPanExtraction")).name : "",
                number: null != localStorage.getItem("businessPanExtraction") ? JSON.parse(localStorage.getItem("businessPanExtraction")).number : "",
                fuzzy: "true"
            },
            fileType: "zip",
            password: ""
        }, a.isValid = function(e) {
            return is_valid("pan", e) ? !0 : !1
        }, a.fileUpload = function(e, t) {
            o.File.upload(a.data.pan_files[t]).then(function(e) {
                console.log("PAN File Uploaded", e), a.data.pan_files[t] = e.directURL, a.data.pan = s.appendObject(u, a.data.pan)
            }, function() {
                i.debug("File submitted, starting worker call", a.data.pan_files)
            })
        }, a.extract = function() {
            a.loading = !0, delete a.data.error, localStorage.setItem("businessPanFile", JSON.stringify({
                img: a.data.voterid_files
            }));
            var e = {
                task: "extraction",
                essentials: {
                    images: a.data.pan_files
                }
            };
            c.createPlexus("businessPanV2", e).then(function(e) {
                console.log("plexusObj", e), a.data.panExtractedResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.panExtractedResponse, a.data.error = e, console.log("identity error", e)
            })
        }, a.verify = function() {
            a.loading = !0, a.wrongInput = !1, a.loading = !0, a.wrongInput = !1, delete a.data.error, console.log("businessPanV2-->", a.data.epicNumber);
            var e = {
                task: "verification",
                essentials: {
                    name: a.data.verifyData.name,
                    number: a.data.verifyData.number
                }
            };
            c.createPlexus("businessPanV2", e).then(function(e) {
                console.log("plexusObj", e), a.data.panVerifiedResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.panVerifiedResponse, a.data.error = e, console.log("identity error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("businessPanV2", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        a.loading = !1, a.wrongInput = !1;
        var u = {};
        a.data = {
            pan_files: null != localStorage.getItem("businessPanFile") ? [localStorage.getItem("businessPanFile")] : [],
            pan: {},
            verifyData: {
                name: null != localStorage.getItem("businessPanExtraction") ? JSON.parse(localStorage.getItem("businessPanExtraction")).name : "",
                number: null != localStorage.getItem("businessPanExtraction") ? JSON.parse(localStorage.getItem("businessPanExtraction")).number : "",
                fuzzy: "true"
            },
            fileType: "zip",
            password: ""
        }, a.isValid = function(e) {
            return is_valid("pan", e) ? !0 : !1
        }, a.fileUpload = function(e, t) {
            o.File.upload(a.data.pan_files[t]).then(function(e) {
                console.log("PAN File Uploaded", e), a.data.pan_files[t] = e.directURL, a.data.pan = s.appendObject(u, a.data.pan)
            }, function() {
                i.debug("File submitted, starting worker call", a.data.pan_files)
            })
        }, a.extract = function() {
            a.loading = !0, delete a.data.error, localStorage.setItem("businessPanFile", a.data.pan_files[0]), c.createIdentity("businessPan", a.data.pan_files).then(function(e) {
                c.createSnoop(e.id, e.accessToken, "autoRecognition", {}).then(function(e) {
                    console.log("snoopObj", e), a.data.panExtractedResponse = e.response.result, localStorage.setItem("businessPanExtraction", JSON.stringify(a.data.panExtractedResponse)), a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.panExtractedResponse, a.data.error = e, console.log("snoop error", e)
                })
            }, function(e) {
                a.loading = !1, delete a.data.panExtractedResponse, a.data.error = e, console.log("identity error", e)
            })
        }, a.fetch = function() {
            a.loading = !0, delete a.data.error, a.wrongInput = !1, a.isValid(a.data.verifyData.number) ? c.createIdentity("businessPan", []).then(function(e) {
                c.createSnoop(e.id, e.accessToken, "fetch", a.data.verifyData).then(function(e) {
                    console.log("snoopObj", e), a.data.panFetchResponse = e.response.result, localStorage.setItem("panFetchResponse", JSON.stringify(a.data.panFetchResponse)), a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.panFetchResponse, a.data.error = e, console.log("snoop error", e)
                })
            }, function(e) {
                a.loading = !1, delete a.data.panFetchResponse, a.data.error = e, console.log("identity error", e)
            }) : (a.wrongInput = !0, a.loading = !1)
        }, a.advanceExtract = function() {
            a.loading = !0, delete a.data.error, localStorage.setItem("businessPanFile", a.data.pan_files[0]), c.createIdentity("businessPan", a.data.pan_files).then(function(e) {
                c.createSnoop(e.id, e.accessToken, "advanceExtraction", {}).then(function(e) {
                    console.log("snoopObj", e), a.data.panExtractedResponse = e.response.result, localStorage.setItem("businessPanExtraction", JSON.stringify(a.data.panExtractedResponse)), a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.panExtractedResponse, a.data.error = e, console.log("snoop error", e)
                })
            }, function(e) {
                a.loading = !1, delete a.data.panExtractedResponse, a.data.error = e, console.log("identity error", e)
            })
        }, a.verify = function() {
            a.loading = !0, delete a.data.error, a.wrongInput = !1, a.isValid(a.data.verifyData.number) ? c.createIdentity("businessPan", a.data.pan_files).then(function(e) {
                c.createSnoop(e.id, e.accessToken, "verification", a.data.verifyData).then(function(e) {
                    console.log("snoopObj", e), a.data.panVerifiedResponse = e.response.result, localStorage.setItem("panVerifiedResponse", JSON.stringify(a.data.panVerifiedResponse)), a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.panVerifiedResponse, a.data.error = e, console.log("snoop error", e)
                })
            }, function(e) {
                a.loading = !1, delete a.data.panVerifiedResponse, a.data.error = e, console.log("identity error", e)
            }) : (a.wrongInput = !0, a.loading = !1)
        }, a.advanceVerification = function() {
            if (a.loading = !0, delete a.data.error, a.wrongInput = !1, a.isValid(a.data.verifyData.number)) {
                var e = {
                    essentials: {
                        number: a.data.verifyData.number
                    }
                };
                a.data.verifyData.name && a.data.verifyData.name.length > 0 && (e.essentials.name = a.data.verifyData.name), a.data.verifyData.dateOfIssue && a.data.verifyData.dateOfIssue.length > 0 && (e.essentials.dateOfIssue = a.data.verifyData.dateOfIssue), a.data.verifyData.fuzzy && a.data.verifyData.fuzzy.length > 0 && (e.essentials.fuzzy = a.data.verifyData.fuzzy), c.createIdentity("businessPan", []).then(function(e) {
                    c.createSnoop(e.id, e.accessToken, "advanceVerification", a.data.verifyData).then(function(e) {
                        console.log("snoopObj", e), a.data.panVerifiedResponse = e.response.result, localStorage.setItem("panVerifiedResponse", JSON.stringify(a.data.panVerifiedResponse)), a.loading = !1
                    }, function(e) {
                        a.loading = !1, delete a.data.panVerifiedResponse, a.data.error = e, console.log("snoop error", e)
                    })
                }, function(e) {
                    a.loading = !1, delete a.data.panVerifiedResponse, a.data.error = e, console.log("identity error", e)
                })
            } else a.wrongInput = !0, a.loading = !1
        }, a.ePANExtraction = function() {
            a.loading = !0, delete a.data.error, c.createIdentity("businessPan", []).then(function(e) {
                c.createSnoop(e.id, e.accessToken, "ePan", {
                    file: a.data.pan_files[0],
                    password: a.data.password,
                    type: "businessPan"
                }).then(function(e) {
                    console.log("snoopObj", e), a.data.ePanResponse = e.response.result, localStorage.setItem("ePanResponse", JSON.stringify(a.data.ePanResponse)), a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.ePanResponse, a.data.error = e, console.log("snoop error", e)
                })
            }, function(e) {
                a.loading = !1, delete a.data.ePanResponse, a.data.error = e, console.log("identity error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("BusinessPANController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        a.loading = !1, a.consent = !1;
        a.supportedBanks = [], a.data = {
            details: {
                url: "",
                password: ""
            },
            analytics: {
                urls: [],
                type: "",
                bankCode: "",
                bankName: "",
                password: [],
                bankList: []
            }
        };
        var u = {
            task: "supportedBanks",
            essentials: {}
        };
        c.createPlexus("bankStatementv1", u).then(function(e) {
            console.log("plexusObj", e), a.supportedBanks = e.result
        }, function(e) {
            a.data.error = e, console.log("plexus error", e)
        }), a.fileUpload = function(e, t) {
            console.log("file ", e), console.log("option ", t), 0 === t ? o.File.upload(a.data.details.url).then(function(e) {
                console.log("File Uploaded", e), a.data.details.url = e.directURL
            }, function() {
                i.debug("File submitted, starting worker call", a.data.details.url)
            }) : o.File.upload(a.data.analytics.urls).then(function(e) {
                console.log("File Uploaded", e), a.data.analytics.urls = e.directURL
            }, function() {
                i.debug("File submitted, starting worker call", a.data.analytics.urls)
            })
        }, a.queryBankCode = function() {
            a.loading = !0, "" != a.data.analytics.bankName ? a.data.analytics.bankList = a.supportedBanks.filter(function(e) {
                return e.name.toLowerCase().includes(a.data.analytics.bankName.toLowerCase())
            }) : a.data.analytics.bankList = a.supportedBanks, a.loading = !1
        }, a.setCode = function(e) {
            a.data.analytics.bankList = [], a.data.analytics.bankCode = e.code, a.data.analytics.bankName = e.name
        }, a.details = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error, console.log("Basic Details--->", a.data.details);
            var e = {
                task: "details",
                essentials: {
                    url: a.data.details.url
                }
            };
            a.data.details.password.length > 0 && (e.essentials.password = a.data.details.password), console.log("inputData : ", e), c.createPlexus("bankStatementv1", e).then(function(e) {
                console.log("plexusObj", e), a.data.detailsResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.detailsResponse, a.data.error = e, console.log("plexus error", e)
            })
        }, a.analytics = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error, console.log("Basic Analytics--->", a.data.analytics);
            var e = {
                task: "analytics",
                essentials: {
                    urls: [a.data.analytics.urls],
                    type: a.data.analytics.type,
                    bankCode: a.data.analytics.bankCode
                }
            };
            a.data.analytics.password.length > 0 && (e.essentials.password = [a.data.analytics.password]), console.log("inputData : ", e), c.createPlexus("bankStatementv1", e).then(function(e) {
                console.log("plexusObj", e), a.data.analyticsResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.analyticsResponse, a.data.error = e, console.log("plexus error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("BankStatementController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c, u, p) {
        a.loading = !1, a.consent = !1;
        a.videoWindow = "", a.data = {
            files: [],
            response: {},
            uid: "",
            name: ""
        }, a.createUrl = function() {
            a.loading = !0, console.log("createUrl");
            var e = {
                    task: "url",
                    essentials: {
                        callbackUrl: "http://callback.development.signzy.tech/api/posts"
                    }
                },
                i = {
                    method: "POST",
                    url: n.getURLs().patron + r.get("userId") + "/aadhaarauths",
                    headers: {
                        "Content-Type": "application/json",
                        Authorization: r.get("accessToken")
                    },
                    data: e
                };
            t(i).then(function(e) {
                console.log("Received Create URL Response:", e), console.log("response.result.url", e.data.result.webUrl), a.data.token = e.data.result.token, a.videoWindow = u.open(e.data.result.webUrl, "Signzy Aadhaar Auth Module", "width=1280,height=1028"), a.loading = !1, l(function() {
                    a.getData()
                }, 15e3)
            }, function(e) {
                a.loading = !1, p.error("Request Limit Exceeded. Please contact sales for futher support")
            })
        };
        var g = 2e3;
        a.getData = function() {
            a.loading = !0;
            var e = {
                    task: "getData",
                    essentials: {
                        patronId: r.get("userId"),
                        token: a.data.token
                    }
                },
                i = {
                    method: "POST",
                    url: n.getURLs().patron + r.get("userId") + "/aadhaarauths",
                    headers: {
                        "Content-Type": "application/json",
                        Authorization: r.get("accessToken")
                    },
                    data: e
                };
            t(i).then(function(e) {
                "undefined" == typeof e.data.result.authVerification ? (console.log("not got data"), l(function() {
                    a.getData()
                }, g)) : (console.log("got data"), a.loading = !1, a.videoWindow.close(), a.data.aadhaarAuth = e.data.result)
            }, function(e) {
                l(function() {
                    a.getData()
                }, g)
            })
        }
    }
    angular.module("signzySandbox").controller("AadhaarauthController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv", "$window", "toastr"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        a.loading = !1, a.consent = !1;
        var u = {};
        a.data = {
            fileType: "zip",
            password: "",
            aadhaar_files: null != localStorage.getItem("aadhaarFiles") ? JSON.parse(localStorage.getItem("aadhaarFiles")).img : [],
            aadhaar: {},
            verifyData: {
                name: null != localStorage.getItem("aadhaarExtraction") ? JSON.parse(localStorage.getItem("aadhaarExtraction")).name : "",
                yob: null != localStorage.getItem("aadhaarExtraction") ? JSON.parse(localStorage.getItem("aadhaarExtraction")).yob : "",
                uid: null != localStorage.getItem("aadhaarExtraction") ? JSON.parse(localStorage.getItem("aadhaarExtraction")).uid : "",
                pincode: null != localStorage.getItem("aadhaarExtraction") ? JSON.parse(localStorage.getItem("aadhaarExtraction")).pincode : ""
            },
            faceExtraction: {
                image: null != localStorage.getItem("aadhaarFrontFile") ? localStorage.getItem("aadhaarFrontFile") : ""
            },
            qrExtraction: {
                image: null != localStorage.getItem("aadhaarFrontFile") ? localStorage.getItem("aadhaarFrontFile") : ""
            }
        }, a.fileUpload = function(e, t) {
            console.log("ASas", e), o.File.upload(a.data.aadhaar_files[t]).then(function(e) {
                console.log("Aadhaar File Uploaded", e), a.data.aadhaar_files[t] = e.directURL, a.data.aadhaar = s.appendObject(u, a.data.aadhaar)
            }, function() {
                i.debug("File submitted, starting worker call", a.data.aadhaar_files)
            })
        }, a.extract = function() {
            a.loading = !0, delete a.data.error, localStorage.setItem("aadhaarFiles", JSON.stringify({
                img: a.data.aadhaar_files
            })), localStorage.setItem("aadhaarFrontFile", a.data.aadhaar_files[0]), localStorage.setItem("aadhaarbackFile", a.data.aadhaar_files[1]), c.createIdentity("aadhaar", a.data.aadhaar_files).then(function(e) {
                c.createSnoop(e.id, e.accessToken, "autoRecognition", {}).then(function(e) {
                    console.log("snoopObj", e), a.data.aadhaarExtractedResponse = e.response.result, localStorage.setItem("aadhaarExtraction", JSON.stringify(a.data.aadhaarExtractedResponse)), a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.aadhaarExtractedResponse, a.data.error = e, console.log("snoop error", e)
                })
            }, function(e) {
                a.loading = !1, delete a.data.aadhaarExtractedResponse, a.data.error = e, console.log("identity error", e)
            })
        }, a.advanceExtract = function() {
            a.loading = !0, delete a.data.error, localStorage.setItem("aadhaarFiles", JSON.stringify({
                img: a.data.aadhaar_files
            })), localStorage.setItem("aadhaarFrontFile", a.data.aadhaar_files[0]), localStorage.setItem("aadhaarbackFile", a.data.aadhaar_files[1]), c.createIdentity("aadhaar", a.data.aadhaar_files).then(function(e) {
                c.createSnoop(e.id, e.accessToken, "advanceExtraction", {}).then(function(e) {
                    console.log("snoopObj", e), a.data.aadhaarExtractedResponse = e.response.result, localStorage.setItem("aadhaarExtraction", JSON.stringify(a.data.aadhaarExtractedResponse)), a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.aadhaarExtractedResponse, a.data.error = e, console.log("snoop error", e)
                })
            }, function(e) {
                a.loading = !1, delete a.data.aadhaarExtractedResponse, a.data.error = e, console.log("identity error", e)
            })
        }, a.verify = function() {
            a.loading = !0, delete a.data.error, c.createIdentity("aadhaar", []).then(function(e) {
                c.createSnoop(e.id, e.accessToken, "verification", a.data.verifyData).then(function(e) {
                    console.log("snoopObj", e), a.data.aadhaarVerifiedResponse = e.response.result, localStorage.setItem("aadhaarVerifiedResponse", JSON.stringify(a.data.aadhaarVerifiedResponse)), a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.aadhaarVerifiedResponse, a.data.error = e, console.log("snoop error", e)
                })
            }, function(e) {
                a.loading = !1, delete a.data.aadhaarVerifiedResponse, a.data.error = e, console.log("identity error", e)
            })
        }, a.getFace = function() {
            a.loading = !0, delete a.data.error, c.createIdentity("aadhaar", []).then(function(e) {
                c.createSnoop(e.id, e.accessToken, "faceExtraction", {
                    url: a.data.aadhaar_files[0]
                }).then(function(e) {
                    console.log("snoopObj", e), a.data.aadhaaFaceResponse = e.response.result, localStorage.setItem("aadhaaFaceResponse", JSON.stringify(a.data.aadhaaFaceResponse)), a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.aadhaaFaceResponse, a.data.error = e, console.log("snoop error", e)
                })
            }, function(e) {
                a.loading = !1, delete a.data.aadhaaFaceResponse, a.data.error = e, console.log("identity error", e)
            })
        }, a.getMaskedImage = function() {
            a.loading = !0, delete a.data.error, delete a.data.aadhaarMaskedResponse, c.createIdentity("aadhaar", []).then(function(e) {
                c.createSnoop(e.id, e.accessToken, "aadhaarMasker", {
                    url: a.data.aadhaar_files[0]
                }).then(function(e) {
                    console.log("snoopObj", e), a.data.aadhaarMaskedResponse = e.response.result, localStorage.setItem("aadhaarMaskedResponse", JSON.stringify(a.data.aadhaarMaskedResponse)), a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.aadhaarMaskedResponse, a.data.error = e, console.log("snoop error", e)
                })
            }, function(e) {
                a.loading = !1, delete a.data.aadhaarMaskedResponse, a.data.error = e, console.log("identity error", e)
            })
        }, a.decodeQR = function() {
            a.loading = !0, delete a.data.error, c.createIdentity("aadhaar", []).then(function(e) {
                c.createSnoop(e.id, e.accessToken, "decodeQR", {
                    url: a.data.aadhaar_files[0]
                }).then(function(e) {
                    console.log("snoopObj", e), a.data.aadhaarQRResponse = e.response.result, localStorage.setItem("aadhaarQRResponse", JSON.stringify(a.data.aadhaarQRResponse)), a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.aadhaarQRResponse, a.data.error = e, console.log("snoop error", e)
                })
            }, function(e) {
                a.loading = !1, delete a.data.aadhaarQRResponse, a.data.error = e, console.log("identity error", e)
            })
        }, a.offlineAadhaar = function() {
            a.loading = !0, delete a.data.error, c.createIdentity("aadhaar", []).then(function(e) {
                c.createSnoop(e.id, e.accessToken, "offlineAadhaar", {
                    url: a.data.aadhaar_files[0],
                    password: a.data.password,
                    email: a.data.email,
                    mobile: a.data.mobile
                }).then(function(e) {
                    console.log("snoopObj", e), a.data.offlineAadhaarResponse = e.response.result, localStorage.setItem("offlineAadhaarResponse", JSON.stringify(a.data.offlineAadhaarResponse)), a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.offlineAadhaarResponse, a.data.error = e, console.log("snoop error", e)
                })
            }, function(e) {
                a.loading = !1, delete a.data.offlineAadhaarResponse, a.data.error = e, console.log("identity error", e)
            })
        }, a.isValid = function(e) {
            return is_valid("aadhaar", e) ? !0 : !1
        }, a.verifyAadhaar = function() {
            a.loading = !0, delete a.data.error, a.wrongInput = !1, a.isValid(a.data.verifyData.uid) ? c.createIdentity("aadhaar", []).then(function(e) {
                c.createSnoop(e.id, e.accessToken, "verifyAadhaar", {
                    uid: a.data.verifyData.uid
                }).then(function(e) {
                    console.log("snoopObj", e), a.data.verifyAadhaarResponse = e.response.result, localStorage.setItem("verifyAadhaarResponse", JSON.stringify(a.data.verifyAadhaarResponse)), a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.verifyAadhaarResponse, a.data.error = e, console.log("snoop error", e)
                })
            }, function(e) {
                a.loading = !1, delete a.data.verifyAadhaarResponse, a.data.error = e, console.log("identity error", e)
            }) : (a.wrongInput = !0, a.loading = !1)
        }, a.basicVerifyAadhaar = function() {
            console.log("basic aadhaar hteed"), a.loading = !0, delete a.data.error, a.wrongInput = !1, a.isValid(a.data.verifyData.uid) ? c.createIdentity("aadhaar", []).then(function(e) {
                c.createSnoop(e.id, e.accessToken, "basicVerifyAadhaar", {
                    uid: a.data.verifyData.uid
                }).then(function(e) {
                    console.log("snoopObj", e), a.data.basicVerifyAadhaarResponse = e.response.result, localStorage.setItem("basicVerifyAadhaarResponse", JSON.stringify(a.data.basicVerifyAadhaarResponse)), console.log(" $scope.data.basicVerifyAadhaarResponse ", a.data.basicVerifyAadhaarResponse), a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.basicVerifyAadhaarResponse, a.data.error = e, console.log("snoop error", e)
                })
            }, function(e) {
                a.loading = !1, delete a.data.basicVerifyAadhaarResponse, a.data.error = e, console.log("identity error", e)
            }) : (a.wrongInput = !0, a.loading = !1)
        }, a.verifyAadhaarAsyncId = function() {
            console.log("Async aadhaar Verification Request Hit"), a.loading = !0, delete a.data.error, a.wrongInput = !1, a.isValid(a.data.verifyData.uid) ? c.createIdentity("aadhaar", []).then(function(e) {
                c.createSnoop(e.id, e.accessToken, "verifyAadhaarAsyncId", {
                    uid: a.data.verifyData.uid,
                    callbackUrl: a.data.verifyData.callbackUrl ? a.data.verifyData.callbackUrl : ""
                }).then(function(e) {
                    console.log("snoopObj", e), a.data.verifyAadhaarAsyncIdResponse = e.response.result, localStorage.setItem("verifyAadhaarAsyncIdResponse", JSON.stringify(a.data.verifyAadhaarAsyncIdResponse)), console.log(" $scope.data.verifyAadhaarAsyncIdResponse ", a.data.verifyAadhaarAsyncIdResponse), a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.verifyAadhaarAsyncIdResponse, a.data.error = e, console.log("snoop error", e)
                })
            }, function(e) {
                a.loading = !1, delete a.data.verifyAadhaarAsyncIdResponse, a.data.error = e, console.log("identity error", e)
            }) : (a.wrongInput = !0, a.loading = !1)
        }, a.verifyAadhaarAsyncData = function() {
            console.log("Async aadhaar Verification Request Hit"), a.loadingData = !0, delete a.data.errorData, a.wrongInput = !1, a.data.verifyData.requestId ? c.createIdentity("aadhaar", []).then(function(e) {
                c.createSnoop(e.id, e.accessToken, "verifyAadhaarAsyncData", {
                    requestId: a.data.verifyData.requestId
                }).then(function(e) {
                    console.log("snoopObj", e), a.data.verifyAadhaarAsyncDataResponse = e.response.result, localStorage.setItem("verifyAadhaarAsyncDataResponse", JSON.stringify(a.data.verifyAadhaarAsyncDataResponse)), console.log(" $scope.data.verifyAadhaarAsyncDataResponse ", a.data.verifyAadhaarAsyncDataResponse), a.loadingData = !1
                }, function(e) {
                    a.loadingData = !1, delete a.data.verifyAadhaarAsyncDataResponse, a.data.errorData = e, console.log("snoop error", e)
                })
            }, function(e) {
                a.loadingData = !1, delete a.data.verifyAadhaarAsyncDataResponse, a.data.errorData = e, console.log("identity error", e)
            }) : (a.wrongInputData = !0, a.loadingData = !1)
        }
    }
    angular.module("signzySandbox").controller("AadhaarController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d) {
        a.loading = !1, a.wrongInput = !1;
        a.data = {
            gst_extraction_files: []
        }, a.fileUpload = function(e, t) {
            n.File.upload(a.data.gst_extraction_files[t]).then(function(e) {
                console.log("GST certificate Uploaded", e), a.data.gst_extraction_files[t] = e.directURL
            }, function() {
                i.debug("File submitted, starting worker call", a.data.gst_extraction_files)
            })
        }, a.extract = function() {
            delete a.data.error, a.loading = !0;
            var e = {
                essentials: {
                    files: a.data.gst_extraction_files
                }
            };
            console.log("inputData", e), d.createPlexus("gstextractions", e).then(function(e) {
                console.log("plexusObj", e), a.data.gstExtractionData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.gstExtractionData, a.data.error = e, console.log("plexus error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("GstExtractionController", e), e.$inject = ["$state", "$scope", "$http", "$log", "uploadSrv", "URLService", "$cookies", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c, u, p) {
        a.loading = !1, a.consent = !1;
        a.enableResult = !1, a.enableStart = !0, a.data = {}, a.handleArray = function(e, t, i) {
            console.log("grantName", e), console.log("model", t), console.log("fieldName", i), a.data[i] = s.arrayHandler(a.data[i], e.toUpperCase(), t)
        }, a.fileUpload = function(e, t) {
            o.File.upload(a.data.files[t]).then(function(e) {
                console.log("Video Liveliness File Uploaded", e), a.data.files[t] = e.directURL
            }, function() {
                i.debug("File submitted, starting worker call", a.data.files)
            })
        }, a.videoLivelinessHandler = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "videoLiveliness",
                essentials: {
                    url: a.data.files[0]
                }
            };
            c.createPlexus("videoverifications", e).then(function(e) {
                console.log("plexusObj", e), a.data.videoLivelinessData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.videoLivelinessData, a.data.error = e, console.log("identity error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("VideoLivelinessController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv", "$window", "toastr"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c, u, p) {
        a.loading = !1, a.consent = !1;
        a.enableResult = !1, a.enableStart = !0, a.data = {
            files: [],
            customVideoRecordTime: "",
            response: {},
            uid: "",
            name: "",
            videoUrl: "",
            imageUrl: ""
        }, a.customVideoRecordTimeArr = [], a.fileUpload = function(e, t) {
            o.File.upload(a.data.files[t]).then(function(e) {
                console.log("Forgery File Uploaded", e), a.data.files[t] = e.directURL
            }, function() {
                i.debug("File submitted, starting worker call", a.data.files)
            })
        }, a.fileUploadForVideo = function(e, t) {
            o.File.upload(a.data.videoUrl, "", 31457280).then(function(e) {
                console.log("Forgery File Uploaded", e), a.data.videoUrl = e.directURL
            }, function() {
                i.debug("File submitted, starting worker call", a.data.videoUrl)
            })
        }, a.fileUploadForImage = function(e, t) {
            o.File.upload(a.data.imageUrl).then(function(e) {
                console.log("Forgery File Uploaded", e), a.data.imageUrl = e.directURL
            }, function() {
                i.debug("File submitted, starting worker call", a.data.imageUrl)
            })
        }, a.videoApiMode = function() {
            a.loading = !0, console.log("createUrl");
            var e = {
                    task: "videoApiMode",
                    essentials: {
                        toMatchImage: a.data.imageUrl,
                        videoUrl: a.data.videoUrl
                    }
                },
                i = {
                    method: "POST",
                    url: n.getURLs().patron + r.get("userId") + "/videoforensics",
                    headers: {
                        "Content-Type": "application/json",
                        Authorization: r.get("accessToken")
                    },
                    data: e
                };
            t(i).then(function(e) {
                console.log("Received Create URL Response:", e), a.data.result = e.data, a.loading = !1
            }, function(e) {
                a.loading = !1, p.error("Request Limit Exceeded. Please contact sales for futher support")
            })
        }
    }
    angular.module("signzySandbox").controller("VideoForensicsController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv", "$window", "toastr"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c, u, p) {
        a.loading = !1, a.consent = !1;
        a.enableResult = !1, a.enableStart = !0, a.data = {
            files: [],
            customVideoRecordTime: "",
            response: {},
            uid: "",
            name: "",
            videoUrl: "",
            gestureSequenceLength: "5",
            validGestures: ["BLINK", "SMILE", "YAWN", "LEFT", "RIGHT"],
            imageUrl: ""
        }, a.customVideoRecordTimeArr = [], a.gestureNumberArr = [];
        for (var g = 5; 30 >= g; g++) a.customVideoRecordTimeArr.push(g);
        for (var g = 1; 9 >= g; g++) a.gestureNumberArr.push(g);
        a.data.validGestures.indexOf("BLINK") > -1 && (a.blink = !0), a.data.validGestures.indexOf("SMILE") > -1 && (a.smile = !0), a.data.validGestures.indexOf("YAWN") > -1 && (a.yawn = !0), a.data.validGestures.indexOf("LEFT") > -1 && (a.left = !0), a.data.validGestures.indexOf("RIGHT") > -1 && (a.right = !0), a.handleArray = function(e, t, i) {
            console.log("grantName", e), console.log("model", t), console.log("fieldName", i), a.data[i] = s.arrayHandler(a.data[i], e.toUpperCase(), t)
        }, a.fileUpload = function(e, t) {
            o.File.upload(a.data.files[t]).then(function(e) {
                console.log("Forgery File Uploaded", e), a.data.files[t] = e.directURL
            }, function() {
                i.debug("File submitted, starting worker call", a.data.files)
            })
        }, a.createGestureUrl = function() {
            a.loading = !0, console.log("createUrl");
            var e = {
                    task: "gestureUrl",
                    essentials: {
                        matchImage: [a.data.files[0]],
                        customVideoRecordTime: a.data.customVideoRecordTime.toString(),
                        callbackUrl: "http://callback.development.signzy.tech/api/posts",
                        gestureSequenceLength: a.data.gestureSequenceLength,
                        validGestures: a.data.validGestures,
                        customizations: {
                            isThankYouRequired: !0
                        }
                    }
                },
                i = {
                    method: "POST",
                    url: n.getURLs().patron + r.get("userId") + "/videoiframes",
                    headers: {
                        "Content-Type": "application/json",
                        Authorization: r.get("accessToken")
                    },
                    data: e
                };
            t(i).then(function(e) {
                console.log("Received Create URL Response:", e), console.log("response.result.url", e.data.result.url), a.data.token = e.data.result.token, u.open(e.data.result.videoUrl, "Signzy Video Verification Module", "width=1280,height=1028"), a.loading = !1, l(function() {
                    console.log("calling getData blocked"), a.enableStart = !1, a.enableResult = !0
                }, 75e3)
            }, function(e) {
                a.loading = !1, p.error("Request Limit Exceeded. Please contact sales for futher support")
            })
        }, a.createUrl = function() {
            a.loading = !0, console.log("createUrl");
            var e = {
                    task: "url",
                    essentials: {
                        matchImage: [a.data.files[0]],
                        customVideoRecordTime: a.data.customVideoRecordTime.toString(),
                        callbackUrl: "http://callback.development.signzy.tech/api/posts"
                    }
                },
                i = {
                    method: "POST",
                    url: n.getURLs().patron + r.get("userId") + "/videoiframes",
                    headers: {
                        "Content-Type": "application/json",
                        Authorization: r.get("accessToken")
                    },
                    data: e
                };
            t(i).then(function(e) {
                console.log("Received Create URL Response:", e), console.log("response.result.url", e.data.result.url), a.data.token = e.data.result.token, u.open(e.data.result.videoUrl, "Signzy Video Verification Module", "width=1280,height=1028"), a.loading = !1, l(function() {
                    console.log("calling getData blocked"), a.enableStart = !1, a.enableResult = !0
                }, 5e4)
            }, function(e) {
                a.loading = !1, p.error("Request Limit Exceeded. Please contact sales for futher support")
            })
        };
        var m = 2e3;
        a.getData = function() {
            a.loading1 = !0;
            var e = {
                    task: "getData",
                    essentials: {
                        patronId: r.get("userId"),
                        token: a.data.token
                    }
                },
                i = {
                    method: "POST",
                    url: n.getURLs().patron + r.get("userId") + "/videoiframes",
                    headers: {
                        "Content-Type": "application/json",
                        Authorization: r.get("accessToken")
                    },
                    data: e
                };
            t(i).then(function(e) {
                "undefined" == typeof e.data.result.videoVerification ? (console.log("not got data"), l(function() {
                    a.getData()
                }, m)) : (console.log("got data"), a.loading1 = !1, a.data.video = e.data.result, a.enableResult = !1, a.enableStart = !0)
            }, function(e) {
                l(function() {
                    a.getData()
                }, m)
            })
        }
    }
    angular.module("signzySandbox").controller("VideoController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv", "$window", "toastr"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c, u, p, g) {
        a.loading = !1, a.startLoading = !1, a.aadhaarLoading = !1, a.consent = !1;
        a.enableResult = !1, a.enableStart = !0;
        var m = 2e3;
        a.data = {
            files: [],
            modeRequired: "name",
            name: "",
            finalName: "",
            fileType: "xml",
            sessionId: "",
            stopGetDataButton: !0
        }, a.confObj = {
            meetingName: "signzy ekyc conf",
            backopsName: "",
            backopsEmail: "",
            emailRequired: "true",
            configuration: {
                advideo: "https://www.youtube.com/embed/3louCp0pc-s",
                consentText: "I here by giving my consent to record and save the video for the purpose of Video based customer verification process and save it following the privacy guidelines."
            },
            languagesRequired: ["HINDI", "KANNADA", "BENGALI", "GUJARATI"],
            users: [{
                documents: [{
                    image: "",
                    data: {
                        dob: "",
                        name: ""
                    },
                    documentName: "OFFLINE AADHAAR"
                }],
                instructions: [{
                    text: "Could you please show your PAN Card",
                    isScreenshotRequired: !0,
                    isIDCardBoxRequired: !0,
                    isSideNavRequired: !0
                }, {
                    text: "Could you please state your name",
                    isScreenshotRequired: !0,
                    isIDCardBoxRequired: !1,
                    isSideNavRequired: !1
                }, {
                    text: "Could you please state your DOB",
                    isScreenshotRequired: !0,
                    isIDCardBoxRequired: !1,
                    isSideNavRequired: !1
                }],
                randomizeInstructions: !1,
                name: "",
                email: ""
            }],
            fields: [{
                elementType: "inputField",
                variable: "message",
                placeHolder: "Message",
                conditionalRendering: !1,
                isRequired: !0
            }, {
                elementType: "dropdown",
                variable: "applicationStatus",
                placeHolder: "Application Status",
                conditionalRendering: !1,
                isRequired: !0,
                options: ["Accept", "Reject", "Redo"]
            }, {
                elementType: "multiSelectDropdown",
                variable: "rejectionReason",
                placeHolder: "Application Rejection Criteria",
                isRequired: !1,
                options: ["POI NOT CLEAR", "FACE NOT MATCH", "INVALID USER"],
                conditionalRendering: !0,
                conditionalRenderingConditions: {
                    variable: "applicationStatus",
                    data: "Reject"
                }
            }],
            callbackSystem: {
                eventCallbackUrl: "https://www.w3schools.com/",
                eventCallbackParameters: {
                    requestId: "121212"
                },
                dataCallbackUrl: "https://www.w3schools.com/",
                dataCallbackParameters: {
                    requestId: "121212"
                }
            }
        };
        a.fileUpload = function(e, t) {
            o.File.upload(a.data.files[t]).then(function(e) {
                console.log("Forgery File Uploaded", e), a.data.files[t] = e.directURL
            }, function() {
                i.debug("File submitted, starting worker call", a.data.files)
            })
        }, a.trustedUrl = function(e) {
            return u.trustAsResourceUrl(e)
        }, a.extractOfflineAadhaar = function() {
            a.aadhaarLoading = !0, delete a.data.error, c.createIdentity("aadhaar", []).then(function(e) {
                c.createSnoop(e.id, e.accessToken, "offlineAadhaar", {
                    url: a.data.files[0],
                    password: a.data.password
                }).then(function(e) {
                    console.log("snoopObj", e), a.data.offlineAadhaarResponse = e.response.result, a.confObj.users[0].documents[0].data.name = e.response.result.name, a.confObj.users[0].documents[0].data.dob = e.response.result.dob, a.confObj.users[0].documents[0].image = e.response.result.photo, a.confObj.users[0].name = e.response.result.name, a.aadhaarLoading = !1
                }, function(e) {
                    a.aadhaarLoading = !1, delete a.data.offlineAadhaarResponse, a.data.error = e, console.log("snoop error", e)
                })
            }, function(e) {
                a.aadhaarLoading = !1, delete a.data.offlineAadhaarResponse, a.data.error = e, console.log("identity error", e)
            })
        }, a.createVideoKycRoom = function() {
            delete a.confObj.videoObj, a.startLoading = !0, console.log("createUrl"), a.confObj["in"];
            var e = {
                method: "POST",
                url: n.getURLs().videoConf.sessionStart,
                headers: {
                    "Content-Type": "application/json",
                    Authorization: r.get("accessToken")
                },
                data: a.confObj
            };
            t(e).then(function(e) {
                console.log("Received Create URL Response:", e), a.confObj.videoObj = e.data.result, a.startLoading = !1, a.confObj.videoObj.adminConfUrl && p.open(a.confObj.videoObj.adminConfUrl, "Signzy Video Conf Module", "width=1280,height=1028"), a.data.sessionId = e.data.result.sessionId, l(function() {
                    a.data.stopGetDataButton = !1
                }, 3e4)
            }, function(e) {
                a.startLoading = !1, g.error("Request Limit Exceeded. Please contact sales for futher support")
            })
        }, a.createVideoConfRoom = function() {
            delete a.confObj.videoObj, a.startLoading = !0, console.log("createUrl"), a.confObj.fields = [], a.confObj.users[0].instructions = [{
                text: "Hey, How are you|",
                isScreenshotRequired: !0,
                isIDCardBoxRequired: !1,
                isSideNavRequired: !1
            }];
            var e = {
                method: "POST",
                url: n.getURLs().videoConf.sessionStart,
                headers: {
                    "Content-Type": "application/json",
                    Authorization: r.get("accessToken")
                },
                data: a.confObj
            };
            t(e).then(function(e) {
                console.log("Received Create URL Response:", e), a.confObj.videoObj = e.data.result, a.startLoading = !1, a.confObj.videoObj.adminConfUrl && p.open(a.confObj.videoObj.adminConfUrl, "Signzy Video Conf Module", "width=1280,height=1028"), a.data.sessionId = e.data.result.sessionId, l(function() {
                    a.data.stopGetDataButton = !1
                }, 3e4)
            }, function(e) {
                a.startLoading = !1, g.error("Request Limit Exceeded. Please contact sales for futher support")
            })
        }, a.getData = function() {
            delete a.confObj.videoObj, a.loading = !0;
            var e = {
                method: "GET",
                url: n.getURLs().videoConf.sessionData + "/" + a.data.sessionId,
                headers: {
                    "Content-Type": "application/json",
                    Authorization: r.get("accessToken")
                },
                data: a.confObj
            };
            t(e).then(function(e) {
                e.data && e.data.users && e.data.users[0] && e.data.users[0].recordedVideoData && e.data.users[0].recordedVideoData.videoThumbnail && e.data.users[0].recordedVideoData.videoUrl ? (console.log("Received Get Data Response:", e), a.confObj.videoConfResponse = e.data, a.loading = !1) : (console.log("not got data"), l(function() {
                    a.getData()
                }, m))
            }, function(e) {
                a.loading = !1, g.error("Request Limit Exceeded. Please contact sales for futher support")
            })
        }
    }
    angular.module("signzySandbox").controller("VideoConfController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv", "$sce", "$window", "toastr"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        a.loading = !1, a.consent = !1;
        a.data = {
            url: "",
            response: {},
            firstImage: "",
            secondImage: "",
            verifyData: {
                identityCard: {
                    type: "aadhaar"
                },
                textMatch: {
                    fields: {}
                }
            }
        }, a.fileUpload = function(e, t) {
            o.File.upload(a.data.url).then(function(e) {
                console.log("Forgery File Uploaded", e), a.data.url = e.directURL
            }, function() {
                i.debug("File submitted, starting worker call")
            })
        }, a.runImageForgery = function(e) {
            a.loading = !0, delete a.data.error;
            var t = {
                task: e,
                essentials: {
                    url: a.data.url
                }
            };
            c.createPlexus("forgeries ", t).then(function(e) {
                console.log("plexusObj", e), a.data.forgeryData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.forgeryData, a.data.error = e, console.log("identity error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("imageForgeryController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        a.loading = !1, a.consent = !1;
        a.data = {
            files: [],
            qualityParameter: "all",
            response: {},
            idType: ""
        }, a.fileUpload = function(e, t) {
            o.File.upload(a.data.files[t]).then(function(e) {
                console.log("Forgery File Uploaded", e), a.data.files[t] = e.directURL
            }, function() {
                i.debug("File submitted, starting worker call", a.data.files)
            })
        }, a.getQuality = function() {
            console.log("Awomesom"), a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                essentials: {
                    files: a.data.files,
                    qualityParameter: a.data.qualityParameter,
                    acceptanceThreshold: a.data.acceptanceThreshold
                }
            };
            c.createPlexus("imagequality", e).then(function(e) {
                console.log("plexusObj", e), a.data.qualityCheckData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.qualityCheckData, a.data.error = e, console.log("identity error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("ImageQualityController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        a.loading = !1, a.consent = !1;
        a.data = {
            files: [],
            response: {},
            idType: ""
        }, a.fileUpload = function(e, t) {
            o.File.upload(a.data.files[t]).then(function(e) {
                console.log("Forgery File Uploaded", e), a.data.files[t] = e.directURL
            }, function() {
                i.debug("File submitted, starting worker call", a.data.files)
            })
        }, a.idClassify = function() {
            console.log("Awomesom"), a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "indianIdCard",
                essentials: {
                    files: a.data.files
                }
            };
            c.createPlexus("idclassifications", e).then(function(e) {
                console.log("plexusObj", e), a.data.idClassificationData = e.result[0], a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.idClassificationData, a.data.error = e, console.log("identity error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("IdClassificationController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        a.loading = !1, a.consent = !1;
        a.data = {
            files: [],
            response: {}
        }, a.fileUpload = function(e, t) {
            o.File.upload(a.data.files[t]).then(function(e) {
                console.log("Aadhaar File Uploaded", e), a.data.files[t] = e.directURL
            }, function() {
                i.debug("File submitted, starting worker call", a.data.files)
            })
        }, a.callForgery = function(e) {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var t = {
                task: "forgeryWithExtraction",
                essentials: {
                    images: a.data.files,
                    idType: e
                }
            };
            c.createPlexus("forgeries", t).then(function(e) {
                console.log("plexusObj", e), a.data.forgeryData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.forgeryData, a.data.error = e, console.log("identity error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("ForgeryExController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        a.loading = !1, a.consent = !1, a.threshold, a.rotate = "no", a.valuesArray = ["yes", "no"];
        a.data = {
            files: [],
            detectMask: [],
            maskFlag: [!1, !1],
            response: {},
            firstImage: "",
            secondImage: ""
        }, a.fileUpload = function(e, t, n) {
            n = n || "files", console.log("type is ", n), o.File.upload(a.data[n][t]).then(function(e) {
                console.log("Forgery File Uploaded", e), a.data[n][t] = e.directURL
            }, function() {
                i.debug("File submitted, starting worker call", a.data[n])
            })
        }, a.selfieLiveliness = function() {
            console.log("selfie liveliness"), window.open("https://visualizer-ai-staging.signzy.app")
        }, a.faceMatch = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                essentials: {
                    firstImage: a.data.files[0],
                    secondImage: a.data.files[1],
                    threshold: a.threshold,
                    alignHorizontally: a.rotate.toString(),
                    detectMask: a.data.files.filter(function(e, t) {
                        return 1 == a.data.maskFlag[t]
                    })
                }
            };
            c.createPlexus("facematches", e).then(function(e) {
                console.log("plexusObj", e), a.data.faceMatchData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.faceMatchData, a.data.error = e, console.log("identity error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("FaceMatchController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        a.loading = !1, a.consent = !1;
        a.data = {
            files: [],
            response: {},
            firstImage: "",
            secondImage: "",
            verifyData: {
                identityCard: {
                    type: "aadhaar"
                },
                textMatch: {
                    fields: {}
                }
            }
        }, a.fileUpload = function(e, t) {
            o.File.upload(a.data.files[t]).then(function(e) {
                console.log("Forgery File Uploaded", e), a.data.files[t] = e.directURL
            }, function() {
                i.debug("File submitted, starting worker call", a.data.files)
            })
        }, a.inputsFields = [
            ["", ""]
        ], a.runBasicForgery = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            for (var e = {
                    task: "basicForgery",
                    essentials: {
                        images: a.data.files,
                        verifyData: {
                            identityCard: {
                                type: a.data.verifyData.identityCard.type
                            },
                            textMatch: {
                                fields: {}
                            }
                        }
                    }
                }, t = 0, i = a.inputsFields.length; i > t; t++) e.essentials.verifyData.textMatch.fields[a.inputsFields[t][0]] = a.inputsFields[t][1];
            c.createPlexus("forgeries ", e).then(function(e) {
                console.log("plexusObj", e), a.data.matchData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.matchData, a.data.error = e, console.log("identity error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("BasicForgeryController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c, u, p) {
        a.loading = !1, a.consent = !1;
        a.data = {
            reviewFile: [],
            files: []
        }, a.getKeys = function(e) {
            return Object.keys(e)
        }, a.reload = function() {
            //window.location.reload()
        }, a.fileUpload = function(e, t) {
            a.data.reviewFile[t] = (p.URL || p.webkitURL).createObjectURL(e), o.File.upload(a.data.files[t]).then(function(e) {
                console.log("Forgery File Uploaded", e), a.data.files[t] = e.directURL
            }, function() {
                i.debug("File submitted, starting worker call", a.data.files)
            })
        }, a.threshold = 60, a.trackingId = !1, a.documentType = "", a.textfields = {}, a.inputsFields = [
            ["", ""]
        ], a.fetchData = function() {
            return new Promise(function(e, t) {
                var i = {
                    task: "advanceForgeryFetch",
                    essentials: {
                        trackingId: a.trackingId
                    }
                };
                c.createPlexus("forgeries ", i).then(function(a) {
                    e(a)
                }, function(e) {
                    if (403 === e.status) throw Error("Not a Number");
                    t(e)
                })
            })
        }, a.runAdvanceForgery = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = a.data.files;
            !a.data.files[0] && a.data.files[1] && (e = [a.data.files[1]]);
            for (var t = {
                    task: "advanceForgery",
                    essentials: {
                        urls: e,
                        documentType: a.documentType,
                        threshold: a.threshold,
                        callBackUrl: "https://qa.signzy.xyz/callback/signzyforgerycallbacks",
                        textfields: {}
                    }
                }, i = 0, n = a.inputsFields.length; n > i; i++) t.essentials.textfields[a.inputsFields[i][0]] = a.inputsFields[i][1];
            console.log("inputData", t), c.createPlexus("forgeries ", t).then(function(e) {
                console.log("plexusObj", e), a.trackingId = e.result.trackingId, a.advanceForgeryInterval = !1, a.advanceForgeryInterval = u(function() {
                    a.fetchData().then(function(e) {
                        console.log(e.result), e.result.processingComplete && (a.data.forgeryData = e.result, a.loading = !1, a.$apply(), u.cancel(a.advanceForgeryInterval))
                    })["catch"](function(e) {
                        console.log(e), a.loading = !1, delete a.data.data.forgeryData, a.data.error = e, console.log("identity error", e)
                    })
                }, 2e3)
            }, function(e) {
                console.log(e), a.loading = !1, 403 === e.error.status && notie.alert({
                    position: "bottom",
                    type: "error",
                    text: "Request Limit Exceeded. Please contact sales for futher support"
                }), delete a.data.data.forgeryData, a.data.error = e, console.log("identity error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("AdvanceForgeryController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv", "$interval", "$window"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        function u(e) {
            var a = e.getDate();
            String(a).length <= 1 && (a = "0" + a);
            var t = e.getMonth() + 1;
            String(t).length <= 1 && (t = "0" + t);
            var i = e.getFullYear();
            return a + "/" + t + "/" + i
        }
        t.loading = !1, t.wrongInput = !1, t.copied = !1, t.data = {
            transactionId: "",
            startDate: "",
            endDate: ""
        }, t.generateTransactionId = function() {
            t.loading = !0, t.wrongInput = !1, t.copied = !1, delete t.data.error;
            var e = {
                task: "authorizeUsBank",
                essentials: {}
            };
            c.createPlexus("foreignbankverifications", e).then(function(e) {
                console.log("plexusObj", e), t.data.usBankData = e.result, t.data.transactionId = e.result.transactionId, t.data.URL = e.result.url, t.loading = !1
            }, function(e) {
                t.loading = !1, delete t.data.usBankData, t.data.error = e, console.log("identity error", e)
            })
        }, t.invalidateToken = function() {
            t.loading = !0, t.wrongInput = !1, delete t.data.error;
            var e = {
                task: "usBankInvalidateToken",
                essentials: {
                    transactionId: t.data.transactionId
                }
            };
            c.createPlexus("foreignbankverifications", e).then(function(e) {
                console.log("plexusObj", e), t.data.usBankData = e.result, t.loading = !1
            }, function(e) {
                t.loading = !1, delete t.data.usBankData, t.data.error = e, console.log("identity error", e)
            })
        }, t.getAccountDetails = function() {
            t.loading = !0, t.wrongInput = !1, delete t.data.error;
            var e = {
                task: "usBankAccountDetails",
                essentials: {
                    transactionId: t.data.transactionId
                }
            };
            c.createPlexus("foreignbankverifications", e).then(function(e) {
                console.log("plexusObj", e), t.data.usBankData = e.result, t.loading = !1
            }, function(e) {
                t.loading = !1, delete t.data.usBankData, t.data.error = e, console.log("identity error", e)
            })
        }, t.getAccountOwnerDetails = function() {
            t.loading = !0, t.wrongInput = !1, delete t.data.error;
            var e = {
                task: "usBankAccountOwnerDetails",
                essentials: {
                    transactionId: t.data.transactionId
                }
            };
            c.createPlexus("foreignbankverifications", e).then(function(e) {
                console.log("plexusObj", e), t.data.usBankData = e.result, t.loading = !1
            }, function(e) {
                t.loading = !1, delete t.data.usBankData, t.data.error = e, console.log("identity error", e)
            })
        }, t.getIncomeDetails = function() {
            t.loading = !0, t.wrongInput = !1, delete t.data.error;
            var e = {
                task: "usBankincomeDetails",
                essentials: {
                    transactionId: t.data.transactionId
                }
            };
            c.createPlexus("foreignbankverifications", e).then(function(e) {
                console.log("plexusObj", e), t.data.usBankData = e.result, t.loading = !1
            }, function(e) {
                t.loading = !1, delete t.data.usBankData, t.data.error = e, console.log("identity error", e)
            })
        }, t.getAccountTransactionDetails = function() {
            t.loading = !0, t.wrongInput = !1, delete t.data.error;
            var e = {
                task: "usBanktransactionDetails",
                essentials: {
                    transactionId: t.data.transactionId,
                    startDate: u(t.data.startDate),
                    endDate: u(t.data.endDate)
                }
            };
            c.createPlexus("foreignbankverifications", e).then(function(e) {
                console.log("plexusObj", e), t.data.usBankData = e.result, t.loading = !1
            }, function(e) {
                t.loading = !1, delete t.data.usBankData, t.data.error = e, console.log("identity error", e)
            })
        }, t.copyTransactionId = function() {
            t.copied = !1;
            var e = document.createElement("textarea");
            e.style.position = "fixed", e.style.opacity = "0", e.textContent = t.data.transactionId;
            var a = document.getElementsByTagName("body")[0];
            a.appendChild(e), e.select(), e.setSelectionRange(0, 99999), document.execCommand("copy"), a.removeChild(e), t.copied = !0
        }, t.openURL = function() {
            e.open(t.data.URL, "_blank")
        }
    }
    angular.module("signzySandbox").controller("USBankController", e), e.$inject = ["$window", "$state", "$scope", "$http", "$log", "Upload", "URLService", "$cookies", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        a.loading = !1, a.consent = !1;
        a.data = {
            files: [],
            response: {}
        }, a.fileUpload = function(e, t) {
            o.File.upload(a.data.files[t]).then(function(e) {
                console.log("Forgery File Uploaded", e), a.data.files[t] = e.directURL
            }, function() {
                i.debug("File submitted, starting worker call", a.data.files)
            })
        }, a.uenExtraction = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "uenExtraction",
                essentials: {
                    files: a.data.files
                }
            };
            c.createPlexus("foreignidentitiesextractions", e).then(function(e) {
                console.log("plexusObj", e), a.data.uenExtractionData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.uenExtractionData, a.data.error = e, console.log("identity error", e)
            })
        }, a.uenExtractionFetch = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "uenExtractionAndFetch",
                essentials: {
                    files: a.data.files
                }
            };
            c.createPlexus("foreignidentitiesextractions", e).then(function(e) {
                console.log("plexusObj", e), a.data.uenExtractionData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.uenExtractionData, a.data.error = e, console.log("identity error", e)
            })
        }, a.uenFetch = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "uenFetch",
                essentials: {
                    uen: a.data.uen
                }
            };
            c.createPlexus("foreignidentitiesextractions", e).then(function(e) {
                console.log("plexusObj", e), a.data.uenFetchData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.uenFetchData, a.data.error = e, console.log("identity error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("UenController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        a.loading = !1;
        a.data = {
            files: []
        }, a.fileUpload = function(e, t) {
            o.File.upload(a.data.files[t]).then(function(e) {
                console.log("Generic Passport File Uploaded", e), a.data.files[t] = e.directURL
            }, function() {
                i.debug("File submitted, starting worker call", a.data.files)
            })
        }, a.aepCardExtract = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "aepCard",
                essentials: {
                    files: a.data.files
                }
            };
            c.createPlexus("foreignidentitiesextractions", e).then(function(e) {
                console.log("plexusObj", e), a.data.extractedResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.extractedResponse, a.data.error = e, console.log("plexus error", e)
            })
        }, a.acrCardExtract = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            for (var e = [], t = 0; t < a.data.files.length; t++) "" !== a.data.files[t] && a.data.files[t] && e.push(a.data.files[t]);
            var i = {
                task: "acrCard",
                essentials: {
                    files: e
                }
            };
            c.createPlexus("foreignidentitiesextractions", i).then(function(e) {
                console.log("plexusObj", e), a.data.extractedResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.extractedResponse, a.data.error = e, console.log("plexus error", e)
            })
        }, a.emiratesIdExtract = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "emiratesId",
                essentials: {
                    files: a.data.files
                }
            };
            c.createPlexus("foreignidentitiesextractions", e).then(function(e) {
                console.log("plexusObj", e), a.data.extractedResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.extractedResponse, a.data.error = e, console.log("plexus error", e)
            })
        }, a.polandIdExtract = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "polandId",
                essentials: {
                    files: a.data.files
                }
            };
            c.createPlexus("foreignidentitiesextractions", e).then(function(e) {
                console.log("plexusObj", e), a.data.extractedResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.extractedResponse, a.data.error = e, console.log("plexus error", e)
            })
        }, a.qatarIdExtract = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "qatarId",
                essentials: {
                    files: a.data.files
                }
            };
            c.createPlexus("foreignidentitiesextractions", e).then(function(e) {
                console.log("plexusObj", e), a.data.extractedResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.extractedResponse, a.data.error = e, console.log("plexus error", e)
            })
        }, a.omanIdExtract = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "omanId",
                essentials: {
                    files: a.data.files
                }
            };
            c.createPlexus("foreignidentitiesextractions", e).then(function(e) {
                console.log("plexusObj", e), a.data.extractedResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.extractedResponse, a.data.error = e, console.log("plexus error", e)
            })
        }, a.kuwaitIdExtract = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "kuwaitId",
                essentials: {
                    files: a.data.files
                }
            };
            c.createPlexus("foreignidentitiesextractions", e).then(function(e) {
                console.log("plexusObj", e), a.data.extractedResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.extractedResponse, a.data.error = e, console.log("plexus error", e)
            })
        }, a.egyptIdExtract = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "egyptId",
                essentials: {
                    files: a.data.files
                }
            };
            c.createPlexus("foreignidentitiesextractions", e).then(function(e) {
                console.log("plexusObj", e), a.data.extractedResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.extractedResponse, a.data.error = e, console.log("plexus error", e)
            })
        }, a.mykadIdExtraction = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "myKad",
                essentials: {
                    files: a.data.files
                }
            };
            c.createPlexus("foreignidentitiesextractions", e).then(function(e) {
                console.log("plexusObj", e), a.data.extractedResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.extractedResponse, a.data.error = e, console.log("plexus error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("PersonalIdController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        a.loading = !1, a.consent = !1;
        a.data = {
            files: [],
            response: {},
            name: "",
            yob: "",
            uid: "",
            pincode: "",
            birthDate: "",
            number: "",
            dob: "",
            doi: ""
        }, a.fileUpload = function(e, t) {
            o.File.upload(a.data.files[t]).then(function(e) {
                console.log("Forgery File Uploaded", e), a.data.files[t] = e.directURL
            }, function() {
                i.debug("File submitted, starting worker call", a.data.files)
            })
        }, a.usPassport = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "usPassport",
                essentials: {
                    files: a.data.files
                }
            };
            c.createPlexus("foreignidentitiesextractions", e).then(function(e) {
                console.log("plexusObj", e), a.data.forgeryData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.forgeryData, a.data.error = e, console.log("identity error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("InternationalPassport", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c, u, p) {
        a.loading = !1, a.wrongInput = !1;
        a.countryList = d.getCountryCodes(), a.usaStateList = u.getStateCodes(), a.data = {
            name: "",
            idNumber: "",
            dob: "",
            phoneNumber: "",
            postalCode: "",
            country: ""
        }, a.ssnData = {}, a.setDefaultGdc = function() {
            a.data = d.getSample()
        }, a.setDefaultSsn = function() {
            a.ssnData = u.getSample()
        }, a.basicSearch = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "basicSearch",
                essentials: {
                    name: a.data.name,
                    idNumber: a.data.idNumber,
                    dob: a.data.dob,
                    phoneNumber: a.data.phoneNumber,
                    postalCode: a.data.postalCode,
                    country: a.data.country
                }
            };
            c.createPlexus("globalverifications", e).then(function(e) {
                console.log("plexusObj", e), a.data.globalVerificationData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.globalVerificationData, a.data.error = e, console.log("identity error", e)
            })
        }, a.ssnVerification = function() {
            a.loading = !0, a.wrongInput = !1, delete a.ssnData.error;
            var e = {
                task: "ssnVerification",
                essentials: p.assignObject(a.ssnData)
            };
            console.log("input is ", e), c.createPlexus("globalverifications", e).then(function(e) {
                console.log("plexusObj", e), a.ssnData.ssnData = e.result, a.loading = !1
            }, function(e) {
                console.log("inside error ", e), a.loading = !1, delete a.ssnData.ssnData, a.ssnData.error = e, console.log("identity error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("GlobalVerificationController", e), e.$inject = ["$state", "$scope", "$http", "$log", "Upload", "URLService", "$cookies", "$timeout", "grantSrv", "gdcFactory", "httpSrv", "globalVerificationSsnFactory", "UtilsService"]
}(),
function() {
    "use strict";

    function e(e, a) {
        var t = [{
                stateCode: "AL",
                stateName: "Alabama"
            }, {
                stateCode: "AK",
                stateName: "Alaska"
            }, {
                stateCode: "AS",
                stateName: "American Samoa"
            }, {
                stateCode: "AZ",
                stateName: "Arizona"
            }, {
                stateCode: "AR",
                stateName: "Arkansas"
            }, {
                stateCode: "CA",
                stateName: "California"
            }, {
                stateCode: "CO",
                stateName: "Colorado"
            }, {
                stateCode: "CT",
                stateName: "Connecticut"
            }, {
                stateCode: "DE",
                stateName: "Delaware"
            }, {
                stateCode: "DC",
                stateName: "District of Columbia"
            }, {
                stateCode: "FM",
                stateName: "Federated States of Micronesia"
            }, {
                stateCode: "FL",
                stateName: "Florida"
            }, {
                stateCode: "GA",
                stateName: "Georgia"
            }, {
                stateCode: "GU",
                stateName: "Guam"
            }, {
                stateCode: "HI",
                stateName: "Hawaii"
            }, {
                stateCode: "ID",
                stateName: "Idaho"
            }, {
                stateCode: "IL",
                stateName: "Illinois"
            }, {
                stateCode: "IN",
                stateName: "Indiana"
            }, {
                stateCode: "IA",
                stateName: "Iowa"
            }, {
                stateCode: "KS",
                stateName: "Kansas"
            }, {
                stateCode: "KY",
                stateName: "Kentucky"
            }, {
                stateCode: "LA",
                stateName: "Louisiana"
            }, {
                stateCode: "ME",
                stateName: "Maine"
            }, {
                stateCode: "MH",
                stateName: "Marshall Islands"
            }, {
                stateCode: "MD",
                stateName: "Maryland"
            }, {
                stateCode: "MA",
                stateName: "Massachusetts"
            }, {
                stateCode: "MI",
                stateName: "Michigan"
            }, {
                stateCode: "MN",
                stateName: "Minnesota"
            }, {
                stateCode: "MS",
                stateName: "Mississippi"
            }, {
                stateCode: "MO",
                stateName: "Missouri"
            }, {
                stateCode: "MT",
                stateName: "Montana"
            }, {
                stateCode: "NE",
                stateName: "Nebraska"
            }, {
                stateCode: "NV",
                stateName: "Nevada"
            }, {
                stateCode: "NH",
                stateName: "New Hampshire"
            }, {
                stateCode: "NJ",
                stateName: "New Jersey"
            }, {
                stateCode: "NM",
                stateName: "New Mexico"
            }, {
                stateCode: "NY",
                stateName: "New York"
            }, {
                stateCode: "NC",
                stateName: "North Carolina"
            }, {
                stateCode: "ND",
                stateName: "North Dakota"
            }, {
                stateCode: "MP",
                stateName: "Northern Mariana Islands"
            }, {
                stateCode: "OH",
                stateName: "Ohio"
            }, {
                stateCode: "OK",
                stateName: "Oklahoma"
            }, {
                stateCode: "OR",
                stateName: "Oregon"
            }, {
                stateCode: "PW",
                stateName: "Palau"
            }, {
                stateCode: "PA",
                stateName: "Pennsylvania"
            }, {
                stateCode: "PR",
                stateName: "Puerto Rico"
            }, {
                stateCode: "RI",
                stateName: "Rhode Island"
            }, {
                stateCode: "SC",
                stateName: "South Carolina"
            }, {
                stateCode: "SD",
                stateName: "South Dakota"
            }, {
                stateCode: "TN",
                stateName: "Tennessee"
            }, {
                stateCode: "TX",
                stateName: "Texas"
            }, {
                stateCode: "UT",
                stateName: "Utah"
            }, {
                stateCode: "VT",
                stateName: "Vermont"
            }, {
                stateCode: "VI",
                stateName: "Virgin Islands"
            }, {
                stateCode: "VA",
                stateName: "Virginia"
            }, {
                stateCode: "WA",
                stateName: "Washington"
            }, {
                stateCode: "WV",
                stateName: "West Virginia"
            }, {
                stateCode: "WI",
                stateName: "Wisconsin"
            }, {
                stateCode: "WY",
                stateName: "Wyoming"
            }],
            i = {
                givenName: "James",
                familyName: " Bradley",
                address: "123 EASTWWOOD DRIVE",
                city: "Moorhead",
                ssn: "123456789",
                dob: "17/02/1993",
                zipcode: "26140",
                state: "MN"
            };
        return {
            getStateCodes: function() {
                return t
            },
            getSample: function() {
                return i
            }
        }
    }
    angular.module("signzySandbox").service("globalVerificationSsnFactory", e), e.$inject = ["$http", "$timeout"]
}(),
function() {
    "use strict";

    function e(e, a) {
        var t = [{
                countryName: "Australia",
                isoCode: "AU",
                isoCode3: "AUS",
                isoNumeric: 36
            }, {
                countryName: "United States of America",
                isoCode: "US",
                isoCode3: "USA",
                isoNumeric: 840
            }, {
                countryName: "Canada",
                isoCode: "CA",
                isoCode3: "CAN",
                isoNumeric: 124
            }, {
                countryName: "South Africa",
                isoCode: "ZA",
                isoCode3: "ZAF",
                isoNumeric: 710
            }],
            i = {
                name: "James Bradley",
                idNumber: "",
                dob: "17/02/1993",
                phoneNumber: "",
                postalCode: "2614",
                country: "Australia"
            };
        return {
            getSample: function() {
                return i
            },
            getCountryCodes: function() {
                return t
            }
        }
    }
    angular.module("signzySandbox").service("gdcFactory", e), e.$inject = ["$http", "$timeout"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d) {
        a.loading = !1, a.wrongInput = !1;
        a.data = {
            name: "",
            idNumber: "",
            dob: "",
            phoneNumber: "",
            postalCode: "",
            country: ""
        }, a.basicSearch = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "basicSearch",
                essentials: {
                    name: a.data.name,
                    idNumber: a.data.idNumber,
                    dob: a.data.dob,
                    phoneNumber: a.data.phoneNumber,
                    postalCode: a.data.postalCode,
                    country: a.data.country
                }
            };
            d.createPlexus("globalverifications", e).then(function(e) {
                console.log("plexusObj", e), a.data.globalVerificationData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.globalVerificationData, a.data.error = e, console.log("identity error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("GlobalUtilityController", e), e.$inject = ["$state", "$scope", "$http", "$log", "Upload", "URLService", "$cookies", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a) {
        var t = [{
            countryCode: "AL",
            countryName: "Albania"
        }, {
            countryCode: "AW",
            countryName: "Aruba"
        }, {
            countryCode: "AU",
            countryName: "Australia"
        }, {
            countryCode: "BS",
            countryName: "Bahamas"
        }, {
            countryCode: "BH",
            countryName: "Bahrain"
        }, {
            countryCode: "BD",
            countryName: "Bangladesh"
        }, {
            countryCode: "BB",
            countryName: "Barbados"
        }, {
            countryCode: "BY",
            countryName: "Belarus"
        }, {
            countryCode: "BE",
            countryName: "Belgium"
        }, {
            countryCode: "BZ",
            countryName: "Belize"
        }, {
            countryCode: "BM",
            countryName: "Bermuda"
        }, {
            countryCode: "BO",
            countryName: "Bolivia"
        }, {
            countryCode: "BR",
            countryName: "Brazil"
        }, {
            countryCode: "BG",
            countryName: "Bulgaria"
        }, {
            countryCode: "KH",
            countryName: "Cambodia"
        }, {
            countryCode: "CA",
            countryName: "Canada",
            states: [{
                stateCode: "NB",
                stateName: "New Brunswick"
            }, {
                stateCode: "NL",
                stateName: "Newfoundland and Labrador"
            }, {
                stateCode: "NS",
                stateName: "Nova Scotia"
            }, {
                stateCode: "PE",
                stateName: "Prince Edward Island"
            }, {
                stateCode: "QC",
                stateName: "Quebec"
            }]
        }, {
            countryCode: "HR",
            countryName: "Croatia"
        }, {
            countryCode: "CW",
            countryName: "Curacao"
        }, {
            countryCode: "CY",
            countryName: "Cyprus"
        }, {
            countryCode: "CZ",
            countryName: "Czech Republic"
        }, {
            countryCode: "DK",
            countryName: "Denmark"
        }, {
            countryCode: "DO",
            countryName: "Dominican Republic"
        }, {
            countryCode: "FI",
            countryName: "Finland"
        }, {
            countryCode: "FR",
            countryName: "France",
            states: [{
                stateCode: "RE",
                stateName: "Reunion"
            }, {
                stateCode: "",
                stateName: "NULL"
            }]
        }, {
            countryCode: "GF",
            countryName: "French Guiana"
        }, {
            countryCode: "DE",
            countryName: "Germany"
        }, {
            countryCode: "GI",
            countryName: "Gibraltar"
        }, {
            countryCode: "GR",
            countryName: "Greece"
        }, {
            countryCode: "GL",
            countryName: "Greenland"
        }, {
            countryCode: "GP",
            countryName: "Guadeloupe"
        }, {
            countryCode: "GG",
            countryName: "Guernsey"
        }, {
            countryCode: "HK",
            countryName: "Hong Kong"
        }, {
            countryCode: "IS",
            countryName: "Iceland"
        }, {
            countryCode: "IN",
            countryName: "India"
        }, {
            countryCode: "IR",
            countryName: "Iran"
        }, {
            countryCode: "IE",
            countryName: "Ireland"
        }, {
            countryCode: "IM",
            countryName: "Isle of Man"
        }, {
            countryCode: "IL",
            countryName: "Israel"
        }, {
            countryCode: "JM",
            countryName: "Jamaica"
        }, {
            countryCode: "JP",
            countryName: "Japan"
        }, {
            countryCode: "JE",
            countryName: "Jersey"
        }, {
            countryCode: "LV",
            countryName: "Latvia"
        }, {
            countryCode: "LI",
            countryName: "Liechtenstein"
        }, {
            countryCode: "LU",
            countryName: "Luxembourg"
        }, {
            countryCode: "MY",
            countryName: "Malaysia"
        }, {
            countryCode: "MT",
            countryName: "Malta"
        }, {
            countryCode: "MQ",
            countryName: "Martinique"
        }, {
            countryCode: "MU",
            countryName: "Mauritius"
        }, {
            countryCode: "YT",
            countryName: "Mayotte"
        }, {
            countryCode: "MX",
            countryName: "Mexico"
        }, {
            countryCode: "MD",
            countryName: "Moldova"
        }, {
            countryCode: "ME",
            countryName: "Montenegro"
        }, {
            countryCode: "MM",
            countryName: "Myanmar"
        }, {
            countryCode: "NL",
            countryName: "Netherlands"
        }, {
            countryCode: "NZ",
            countryName: "New Zealand"
        }, {
            countryCode: "NO",
            countryName: "Norway"
        }, {
            countryCode: "PK",
            countryName: "Pakistan"
        }, {
            countryCode: "PA",
            countryName: "Panama"
        }, {
            countryCode: "PL",
            countryName: "Poland"
        }, {
            countryCode: "PT",
            countryName: "Portugal"
        }, {
            countryCode: "PR",
            countryName: "Puerto Rico"
        }, {
            countryCode: "RO",
            countryName: "Romania"
        }, {
            countryCode: "RW",
            countryName: "Rwanda"
        }, {
            countryCode: "FR",
            countryName: "RÃ©union"
        }, {
            countryCode: "BL",
            countryName: "Saint BarthÃ©lemy"
        }, {
            countryCode: "MF",
            countryName: "Saint Martin"
        }, {
            countryCode: "PM",
            countryName: "Saint Pierre and Miquelon"
        }, {
            countryCode: "SG",
            countryName: "Singapore"
        }, {
            countryCode: "SK",
            countryName: "Slovakia"
        }, {
            countryCode: "SI",
            countryName: "Slovenia"
        }, {
            countryCode: "ZA",
            countryName: "South Africa"
        }, {
            countryCode: "ES",
            countryName: "Spain"
        }, {
            countryCode: "SE",
            countryName: "Sweden"
        }, {
            countryCode: "CH",
            countryName: "Switzerland"
        }, {
            countryCode: "TJ",
            countryName: "Tajikistan"
        }, {
            countryCode: "TZ",
            countryName: "Tanzania"
        }, {
            countryCode: "TH",
            countryName: "Thailand"
        }, {
            countryCode: "TO",
            countryName: "Tonga"
        }, {
            countryCode: "TN",
            countryName: "Tunisia"
        }, {
            countryCode: "UG",
            countryName: "Uganda"
        }, {
            countryCode: "UA",
            countryName: "Ukraine"
        }, {
            countryCode: "AE",
            countryName: "United Arab Emirates",
            states: [{
                stateCode: "AZ",
                stateName: "Abu Dhabi (UAE)"
            }, {
                stateCode: "DU",
                stateName: "Dubai (UAE)"
            }]
        }, {
            countryCode: "GB",
            countryName: "United Kingdom"
        }, {
            countryCode: "US",
            countryName: "United States of America",
            states: [{
                stateName: "Alabama",
                stateCode: "AL"
            }, {
                stateName: "Alaska",
                stateCode: "AK"
            }, {
                stateName: "Arizona",
                stateCode: "AZ"
            }, {
                stateName: "Arkansas",
                stateCode: "AR"
            }, {
                stateName: "California",
                stateCode: "CA"
            }, {
                stateName: "Colorado",
                stateCode: "CO"
            }, {
                stateName: "Connecticut",
                stateCode: "CT"
            }, {
                stateName: "Delaware",
                stateCode: "DE"
            }, {
                stateName: "District of Columbia",
                stateCode: "DC"
            }, {
                stateName: "Florida",
                stateCode: "FL"
            }, {
                stateName: "Georgia",
                stateCode: "GA"
            }, {
                stateName: "Hawaii",
                stateCode: "HI"
            }, {
                stateName: "Idaho",
                stateCode: "ID"
            }, {
                stateName: "Indiana",
                stateCode: "IN"
            }, {
                stateName: "Iowa",
                stateCode: "IA"
            }, {
                stateName: "Kansas",
                stateCode: "KS"
            }, {
                stateName: "Kentucky",
                stateCode: "KY"
            }, {
                stateName: "Louisiana",
                stateCode: "LA"
            }, {
                stateName: "Maine",
                stateCode: "ME"
            }, {
                stateName: "Maryland",
                stateCode: "MD"
            }, {
                stateName: "Massachusetts",
                stateCode: "MA"
            }, {
                stateName: "Minnesota",
                stateCode: "MN"
            }, {
                stateName: "Mississippi",
                stateCode: "MS"
            }, {
                stateName: "Missouri",
                stateCode: "MO"
            }, {
                stateName: "Montana",
                stateCode: "MT"
            }, {
                stateName: "Nebraska",
                stateCode: "NE"
            }, {
                stateName: "Nevada",
                stateCode: "NV"
            }, {
                stateName: "New Hampshire",
                stateCode: "NH"
            }, {
                stateName: "New Jersey",
                stateCode: "NJ"
            }, {
                stateName: "New Mexico",
                stateCode: "NM"
            }, {
                stateName: "New York",
                stateCode: "NY"
            }, {
                stateName: "North Carolina",
                stateCode: "NC"
            }, {
                stateName: "North Dakota",
                stateCode: "ND"
            }, {
                stateName: "Ohio",
                stateCode: "OH"
            }, {
                stateName: "Oklahoma",
                stateCode: "OK"
            }, {
                stateName: "Oregon",
                stateCode: "OR"
            }, {
                stateName: "Pennsylvania",
                stateCode: "PA"
            }, {
                stateName: "Rhode Island",
                stateCode: "RI"
            }, {
                stateName: "South Carolina",
                stateCode: "SC"
            }, {
                stateName: "South Dakota",
                stateCode: "SD"
            }, {
                stateName: "Tennessee",
                stateCode: "TN"
            }, {
                stateName: "Texas",
                stateCode: "TX"
            }, {
                stateName: "Utah",
                stateCode: "UT"
            }, {
                stateName: "Vermont",
                stateCode: "VT"
            }, {
                stateName: "Virginia",
                stateCode: "VA"
            }, {
                stateName: "Washington",
                stateCode: "WA"
            }, {
                stateName: "West Virginia",
                stateCode: "WV"
            }, {
                stateName: "Wisconsin",
                stateCode: "WI"
            }, {
                stateName: "Wyoming",
                stateCode: "WY"
            }]
        }, {
            countryCode: "VU",
            countryName: "Vanuatu"
        }, {
            countryCode: "VN",
            countryName: "Viet Nam"
        }];
        return {
            getCodes: function() {
                return t.sort(function(e, a) {
                    return e.countryName < a.countryName ? -1 : 1
                }), t.forEach(function(e) {
                    e.states && e.states.sort(function(e, a) {
                        return e.stateName < a.stateName ? -1 : 1
                    })
                }), t
            }
        }
    }
    angular.module("signzySandbox").service("globalBusinessV2Factory", e), e.$inject = ["$http", "$timeout"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        a.loading = !1, a.wrongInput = !1;
        var u = [{
            stateName: "Not Applicable",
            stateCode: ""
        }];
        a.data = {
            entityName: "",
            entityId: "",
            countryCode: l.getCodes()[0].countryCode,
            stateCode: l.getCodes()[0].states ? l.getCodes()[0].states[0].stateCode : u.stateCode
        }, a.codeList = l.getCodes(), a.stateList = l.getCodes()[0].states ? l.getCodes()[0].states : u, a.countrySelectChangeHandler = function() {
            var e = a.data.countryCode;
            a.stateList = u, a.data.stateCode = "";
            var t = a.codeList.findIndex(function(a) {
                return a.countryCode === e
            }); - 1 !== t && a.codeList[t] && a.codeList[t].states && (a.stateList = a.codeList[t].states, a.data.stateCode = a.stateList[0].stateCode)
        }, a.companyNameSearch = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "fetchEntitybyName",
                essentials: {
                    entityName: a.data.entityName,
                    country: a.data.countryCode || "",
                    state: a.data.stateCode || "",
                    entityStatus: a.data.entityStatus || "",
                    incorporationDate: a.data.incorporationDate || "",
                    inactiveFlag: a.data.inactiveFlag || ""
                }
            };
            console.log(e), c.createPlexus("globalbusinessesv2", e).then(function(e) {
                console.log("plexusObj", e), a.data.globalBusinessData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.globalBusinessData, a.data.error = e, console.log("identity error", e)
            })
        }, a.companyIdSearch = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "fetchEntitybyId",
                essentials: {
                    entityId: a.data.entityId,
                    country: a.data.countryCode,
                    state: a.data.stateCode
                }
            };
            c.createPlexus("globalbusinessesv2", e).then(function(e) {
                console.log("plexusObj", e), a.data.globalBusinessData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.globalBusinessData, a.data.error = e, console.log("identity error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("GlobalBusinessV2Controller", e), e.$inject = ["$state", "$scope", "$http", "$log", "Upload", "URLService", "$cookies", "$timeout", "globalBusinessV2Factory", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a) {
        var t = [{
                countryName: "United States",
                countryCode: "US",
                states: [{
                    stateCode: "AL",
                    stateName: "Alabama"
                }, {
                    stateCode: "AK",
                    stateName: "Alaska"
                }, {
                    stateCode: "AR",
                    stateName: "Arkansas"
                }, {
                    stateCode: "AZ",
                    stateName: "Arizona"
                }, {
                    stateCode: "CA",
                    stateName: "California"
                }, {
                    stateCode: "CO",
                    stateName: "Colorado"
                }, {
                    stateCode: "CT",
                    stateName: "Connecticut"
                }, {
                    stateCode: "DC",
                    stateName: "Washington DC"
                }, {
                    stateCode: "DE",
                    stateName: "Delaware"
                }, {
                    stateCode: "FL",
                    stateName: "Florida"
                }, {
                    stateCode: "GA",
                    stateName: "Georgia"
                }, {
                    stateCode: "HI",
                    stateName: "Hawaii"
                }, {
                    stateCode: "ID",
                    stateName: "Idaho"
                }, {
                    stateCode: "IL",
                    stateName: "Illinois"
                }, {
                    stateCode: "IN",
                    stateName: "Indiana"
                }, {
                    stateCode: "IA",
                    stateName: "Iowa"
                }, {
                    stateCode: "KS",
                    stateName: "Kansas"
                }, {
                    stateCode: "KY",
                    stateName: "Kentucky"
                }, {
                    stateCode: "LA",
                    stateName: "Louisiana"
                }, {
                    stateCode: "MA",
                    stateName: "Massachusetts"
                }, {
                    stateCode: "MD",
                    stateName: "Maryland"
                }, {
                    stateCode: "ME",
                    stateName: "Maine"
                }, {
                    stateCode: "MI",
                    stateName: "Michigan"
                }, {
                    stateCode: "MN",
                    stateName: "Minnesota"
                }, {
                    stateCode: "MO",
                    stateName: "Missouri"
                }, {
                    stateCode: "MS",
                    stateName: "Mississippi"
                }, {
                    stateCode: "MT",
                    stateName: "Montana"
                }, {
                    stateCode: "NC",
                    stateName: "North Carolina"
                }, {
                    stateCode: "ND",
                    stateName: "North Dakota"
                }, {
                    stateCode: "NH",
                    stateName: "New Hampshire"
                }, {
                    stateCode: "NJ",
                    stateName: "New Jersey"
                }, {
                    stateCode: "NM",
                    stateName: "New Mexico"
                }, {
                    stateCode: "NV",
                    stateName: "Nevada"
                }, {
                    stateCode: "NY",
                    stateName: "New York"
                }, {
                    stateCode: "OH",
                    stateName: "Ohio"
                }, {
                    stateCode: "OK",
                    stateName: "Oklahoma"
                }, {
                    stateCode: "OR",
                    stateName: "Oregon"
                }, {
                    stateCode: "PA",
                    stateName: "Pennsylvania"
                }, {
                    stateCode: "RI",
                    stateName: "Rhode Island"
                }, {
                    stateCode: "SC",
                    stateName: "South Carolina"
                }, {
                    stateCode: "SD",
                    stateName: "South Dakota"
                }, {
                    stateCode: "TX",
                    stateName: "Texas"
                }, {
                    stateCode: "UT",
                    stateName: "Utah"
                }, {
                    stateCode: "VA",
                    stateName: "Virginia"
                }, {
                    stateCode: "WA",
                    stateName: "Washington"
                }, {
                    stateCode: "WI",
                    stateName: "Wisconsin"
                }, {
                    stateCode: "WV",
                    stateName: "West Virginia"
                }, {
                    stateCode: "WY",
                    stateName: "Wyoming"
                }]
            }, {
                countryCode: "AT",
                countryName: "Austria"
            }, {
                countryCode: "AU",
                countryName: "Australia"
            }, {
                countryCode: "BE",
                countryName: "Belgium"
            }, {
                countryCode: "BG",
                countryName: "Bulgaria"
            }, {
                countryCode: "BY",
                countryName: "Belarus"
            }, {
                countryCode: "CA",
                countryName: "Canada"
            }, {
                countryCode: "CH",
                countryName: "Switzerland"
            }, {
                countryCode: "CN",
                countryName: "China"
            }, {
                countryCode: "CZ",
                countryName: "Czech Republic"
            }, {
                countryCode: "CY",
                countryName: "Cyprus"
            }, {
                countryCode: "DE",
                countryName: "Germany"
            }, {
                countryCode: "DK",
                countryName: "Denmark"
            }, {
                countryCode: "EE",
                countryName: "Estonia"
            }, {
                countryCode: "ES",
                countryName: "Spain"
            }, {
                countryCode: "FI",
                countryName: "Finland"
            }, {
                countryCode: "FR",
                countryName: "France"
            }, {
                countryCode: "GG",
                countryName: "Guernsey"
            }, {
                countryCode: "GI",
                countryName: "Gibraltar"
            }, {
                countryCode: "GL",
                countryName: "Greenland"
            }, {
                countryCode: "GR",
                countryName: "Greece"
            }, {
                countryCode: "HK",
                countryName: "Hongkong"
            }, {
                countryCode: "HR",
                countryName: "Croatia"
            }, {
                countryCode: "HU",
                countryName: "Hungary"
            }, {
                countryCode: "ID",
                countryName: "Indonesia"
            }, {
                countryCode: "IN",
                countryName: "India"
            }, {
                countryCode: "IE",
                countryName: "Ireland"
            }, {
                countryCode: "IT",
                countryName: "Italy"
            }, {
                countryCode: "JE",
                countryName: "Jersey"
            }, {
                countryCode: "JP",
                countryName: "Japan"
            }, {
                countryCode: "KG",
                countryName: "Kyrgyzstan"
            }, {
                countryCode: "LT",
                countryName: "Lithuania"
            }, {
                countryCode: "LU",
                countryName: "Luxembourg"
            }, {
                countryCode: "LV",
                countryName: "Latvia"
            }, {
                countryCode: "ME",
                countryName: "Montenegro"
            }, {
                countryCode: "MK",
                countryName: "Macedonia"
            }, {
                countryCode: "MT",
                countryName: "Malta"
            }, {
                countryCode: "NL",
                countryName: "Netherlands"
            }, {
                countryCode: "NO",
                countryName: "Norway"
            }, {
                countryCode: "NZ",
                countryName: "New Zealand"
            }, {
                countryCode: "PL",
                countryName: "Poland"
            }, {
                countryCode: "SE",
                countryName: "Sweden"
            }, {
                countryCode: "SG",
                countryName: "Singapore"
            }, {
                countryCode: "SI",
                countryName: "Slovenia"
            }, {
                countryCode: "SK",
                countryName: "Slovakia"
            }, {
                countryCode: "TW",
                countryName: "Taiwan"
            }, {
                countryCode: "UA",
                countryName: "Ukraine"
            }, {
                countryCode: "UK",
                countryName: "United Kingdom"
            }, {
                countryCode: "RU",
                countryName: "Russia"
            }, {
                countryCode: "RO",
                countryName: "Romania"
            }, {
                countryCode: "RS",
                countryName: "Serbia"
            }, {
                countryCode: "KH",
                countryName: "Cambodia"
            }, {
                countryCode: "XK",
                countryName: "Kosovo"
            }],
            i = {
                DZ: {
                    countryCode: "5",
                    countryName: "Algeria"
                },
                BH: {
                    countryCode: "16",
                    countryName: "Bahrain"
                },
                EG: {
                    countryCode: "48",
                    countryName: "Egypt"
                },
                IR: {
                    countryCode: "81",
                    countryName: "Iran"
                },
                IQ: {
                    countryCode: "80",
                    countryName: "Iraq"
                },
                IL: {
                    countryCode: "84",
                    countryName: "Israel"
                },
                JO: {
                    countryCode: "79",
                    countryName: "Jordan"
                },
                KW: {
                    countryCode: "90",
                    countryName: "Kuwait"
                },
                LB: {
                    countryCode: "93",
                    countryName: "Lebanon"
                },
                LY: {
                    countryCode: "438",
                    countryName: "Libya"
                },
                MA: {
                    countryCode: "106",
                    countryName: "Morocco"
                },
                OM: {
                    countryCode: "119",
                    countryName: "Oman"
                },
                PS: {
                    countryCode: "440",
                    countryName: "Palestine"
                },
                QA: {
                    countryCode: "128",
                    countryName: "Qatar"
                },
                SA: {
                    countryCode: "9",
                    countryName: "Saudi Arabia"
                },
                SY: {
                    countryCode: "446",
                    countryName: "Syria"
                },
                TN: {
                    countryCode: "156",
                    countryName: "Tunisia"
                },
                AE: {
                    countryCode: "49",
                    countryName: "United Arab Emirates"
                },
                YE: {
                    countryCode: "165",
                    countryName: "Yemen"
                }
            };
        return {
            getCodes: function() {
                return t.sort(function(e, a) {
                    return e.countryName < a.countryName ? -1 : 1
                }), t.forEach(function(e) {
                    e.states && e.states.sort(function(e, a) {
                        return e.stateName < a.stateName ? -1 : 1
                    })
                }), t
            },
            getMENACountryCodes: function() {
                var e = [];
                return Object.keys(i).forEach(function(a) {
                    e.push({
                        countryCode: a,
                        countryName: i[a].countryName
                    })
                }), e.sort(function(e, a) {
                    return e.countryName < a.countryName ? -1 : 1
                }), e
            }
        }
    }
    angular.module("signzySandbox").service("globalBusinessFactory", e), e.$inject = ["$http", "$timeout"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        a.loading = !1, a.wrongInput = !1;
        var u = [{
            stateName: "Not Applicable",
            stateCode: ""
        }];
        a.data = {
            entityName: "",
            entityId: "",
            countryCode: l.getCodes()[0].countryCode,
            stateCode: l.getCodes()[0].states ? l.getCodes()[0].states[0].stateCode : u.stateCode,
            mena: {
                companyName: "",
                companyNumber: "",
                countryID: ""
            }
        }, a.codeList = l.getCodes(), a.stateList = l.getCodes()[0].states ? l.getCodes()[0].states : u, a.menaCountryCodeList = l.getMENACountryCodes(), a.countrySelectChangeHandler = function() {
            var e = a.data.countryCode;
            a.stateList = u, a.data.stateCode = "";
            var t = a.codeList.findIndex(function(a) {
                return a.countryCode === e
            }); - 1 !== t && a.codeList[t] && a.codeList[t].states && (a.stateList = a.codeList[t].states, a.data.stateCode = a.stateList[0].stateCode)
        }, a.entityNameSearch = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "fetchbyName",
                essentials: {
                    entityName: a.data.entityName,
                    country: a.data.countryCode,
                    state: a.data.stateCode
                }
            };
            c.createPlexus("globalbusinesses", e).then(function(e) {
                console.log("plexusObj", e), a.data.globalBusinessData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.globalBusinessData, a.data.error = e, console.log("identity error", e)
            })
        }, a.entityIdSearch = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "fetchbyId",
                essentials: {
                    entityId: a.data.entityId,
                    country: a.data.countryCode,
                    state: a.data.stateCode
                }
            };
            c.createPlexus("globalbusinesses", e).then(function(e) {
                console.log("plexusObj", e), a.data.globalBusinessData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.globalBusinessData, a.data.error = e, console.log("identity error", e)
            })
        }, a.liveEntityNameSearch = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "liveSearchbyName",
                essentials: {
                    entityName: a.data.entityName,
                    country: a.data.countryCode,
                    state: a.data.stateCode
                }
            };
            c.createPlexus("globalbusinesses", e).then(function(e) {
                console.log("plexusObj", e), a.data.globalBusinessData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.globalBusinessData, a.data.error = e, console.log("identity error", e)
            })
        }, a.liveEntityIdSearch = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "liveSearchbyId",
                essentials: {
                    entityId: a.data.entityId,
                    country: a.data.countryCode,
                    state: a.data.stateCode
                }
            };
            c.createPlexus("globalbusinesses", e).then(function(e) {
                console.log("plexusObj", e), a.data.globalBusinessData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.globalBusinessData, a.data.error = e, console.log("identity error", e)
            })
        }, a.menaCompanySearch = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "menaCompanySearch",
                essentials: a.data.mena
            };
            c.createPlexus("globalbusinesses", e).then(function(e) {
                console.log("plexusObj", e), a.data.menaCompanySearchData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.menaCompanySearchData, a.data.error = e, console.log("error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("GlobalBusinessController", e), e.$inject = ["$state", "$scope", "$http", "$log", "Upload", "URLService", "$cookies", "$timeout", "globalBusinessFactory", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        a.loading = !1;
        a.data = {
            gp_files: null != localStorage.getItem("gpFile") ? [localStorage.getItem("gpFile")] : []
        }, a.fileUpload = function(e, t) {
            o.File.upload(a.data.gp_files[t]).then(function(e) {
                console.log("Generic Passport File Uploaded", e), a.data.gp_files[t] = e.directURL
            }, function() {
                i.debug("File submitted, starting worker call", a.data.gp_files)
            })
        }, a.extract = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "genericPassport",
                essentials: {
                    files: a.data.gp_files
                }
            };
            c.createPlexus("foreignidentitiesextractions", e).then(function(e) {
                console.log("plexusObj", e), a.data.gpExtractedResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.gpExtractedResponse, a.data.error = e, console.log("plexus error", e)
            })
        }, a.extractv2 = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "genericPassportv2",
                essentials: {
                    files: a.data.gp_files
                }
            };
            c.createPlexus("foreignidentitiesextractions", e).then(function(e) {
                console.log("plexusObj", e), a.data.gpExtractedResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.gpExtractedResponse, a.data.error = e, console.log("plexus error", e)
            })
        }, a.extractmrzbased = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "genericPassportMRZBased",
                essentials: {
                    files: a.data.gp_files
                }
            };
            c.createPlexus("foreignidentitiesextractions", e).then(function(e) {
                console.log("plexusObj", e), a.data.gpExtractedResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.gpExtractedResponse, a.data.error = e, console.log("plexus error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("GenericPassportController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        a.loading = !1, a.consent = !1;
        a.data = {
            files: [],
            response: {},
            name: "",
            yob: "",
            uid: "",
            pincode: "",
            birthDate: "",
            number: "",
            dob: "",
            doi: ""
        }, a.fileUpload = function(e, t) {
            o.File.upload(a.data.files[t]).then(function(e) {
                console.log("Forgery File Uploaded", e), a.data.files[t] = e.directURL
            }, function() {
                i.debug("File submitted, starting worker call", a.data.files)
            })
        }, a.usDl = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "usDrivingLicence",
                essentials: {
                    files: a.data.files
                }
            };
            c.createPlexus("foreignidentitiesextractions", e).then(function(e) {
                console.log("plexusObj", e), a.data.forgeryData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.forgeryData, a.data.error = e, console.log("identity error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("usDrivingLicence", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a) {
        var t = [{
            code: "ARE",
            name: "United Arab Emirates"
        }, {
            code: "KWT",
            name: "Kuwait"
        }];
        return {
            getCountryCodes: function() {
                return t
            }
        }
    }
    angular.module("signzySandbox").service("foreignIdFactory", e), e.$inject = ["$http", "$timeout"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c, u) {
        a.loading = !1;
        a.data = {
            files: [],
            country: ""
        }, a.countryList = u.getCountryCodes(), a.fileUpload = function(e, t) {
            o.File.upload(a.data.files[t]).then(function(e) {
                console.log("Generic Passport File Uploaded", e), a.data.files[t] = e.directURL
            }, function() {
                i.debug("File submitted, starting worker call", a.data.files)
            })
        }, a.foreignIdClassify = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "classification",
                essentials: {
                    files: a.data.files,
                    country: a.data.country
                }
            };
            c.createPlexus("foreignidentitiesextractions", e).then(function(e) {
                console.log("plexusObj", e), a.data.extractedResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.extractedResponse, a.data.error = e, console.log("plexus error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("foreignIdClassificationController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv", "foreignIdFactory"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c, u, p) {
        a.loading = !1, a.consent = !1, a.countries = p.getCountryData(), a.ids = [];
        a.data = {
            reviewFile: [],
            files: [],
            response: {},
            country: "",
            idType: "",
            imageQualityThreshold: .5,
            performImageQualityAnalysis: !0,
            performIdClassification: !0,
            performFaceExtraction: !0,
            performIdExtraction: !0
        }, console.log("checks window", a.data.country, a.data.idType), a.fileUpload = function(e, t) {
            console.log("check"), "image/tiff" === e.type ? (a.data.reviewFile[t] = (u.URL || u.webkitURL).createObjectURL(e), o.File.upload(a.data.files[t]).then(function(e) {
                console.log("File Uploaded", e);
                var i = {
                    task: "tifftojpg",
                    essentials: {
                        urls: [e.directURL],
                        ttl: "10 mins"
                    }
                };
                c.createPlexus("converters", i).then(function(i) {
                    console.log("plexusObj", i), a.data.reviewFile[t] = i.result.tifftoJpgs[0], a.data.files[t] = e.directURL, a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.converterData, a.data.error = e, console.log("plexus error", e)
                })
            }, function() {
                i.debug("File submitted, starting worker call", a.data.files)
            })) : (a.data.reviewFile[t] = (u.URL || u.webkitURL).createObjectURL(e), o.File.upload(a.data.files[t]).then(function(e) {
                console.log("File Uploaded", e), a.data.files[t] = e.directURL
            }, function() {
                i.debug("File submitted, starting worker call", a.data.files)
            }))
        }, a.inputsFields = [
            ["", ""]
        ], a.idChange = function() {
            console.log("checks", a.data.country, a.ids, p.getIdData("Global")), a.ids = p.getIdData(a.data.country), console.log("checks 2", a.data.country, a.ids)
        }, a.runGlobalIDCheck = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "idIntelligence",
                essentials: {
                    images: a.data.files,
                    frontUrl: a.data.files[0] ? a.data.files[0] : "",
                    backUrl: a.data.files[1] ? a.data.files[1] : "",
                    country: a.data.country,
                    idType: a.data.idType,
                    performImageQualityAnalysis: a.data.performImageQualityAnalysis,
                    performIdClassification: a.data.performIdClassification,
                    performIdExtraction: a.data.performIdExtraction,
                    performFaceExtraction: a.data.performFaceExtraction,
                    imageQualityThreshold: a.data.imageQualityThreshold ? a.data.imageQualityThreshold : .5
                }
            };
            c.createPlexus("documentIntelligence ", e).then(function(e) {
                console.log("plexusObj", e), a.data.matchData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.matchData, a.data.error = e, console.log("identity error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("IdIntelligenceController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv", "$window", "idIntelligenceFactory"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        a.loading = !1;
        a.data = {
            vpa: "",
            name: "",
            nameRequired: "false",
            fuzzy: "true"
        }, a.vpaFetch = function() {
            delete a.data.error, a.loading = !0, a.wrongInput = !1;
            var e = {
                task: "vpaFetch",
                essentials: {
                    vpa: a.data.vpa
                }
            };
            "true" == a.data.nameRequired.toLowerCase() && (e.essentials.name = a.data.name, e.essentials.fuzzy = a.data.fuzzy), c.createPlexus("upis", e).then(function(e) {
                console.log("plexusObj", e), a.data.upi = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.upi, a.data.error = e, console.log("plexus error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("UpiController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        a.loading = !1, a.data = {
            transferData: {
                pan: "",
                vpa: ""
            }
        }, a.transfer = function() {
            delete a.data.error, a.loading = !0, a.wrongInput = !1;
            var e = {
                task: "fetchAccountDetails",
                essentials: a.data.transferData
            };
            c.createPlexus("bankaccountverifications", e).then(function(e) {
                console.log("plexusObj", e), a.data.transferOutputData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.transferOutputData, a.data.error = e, console.log("plexus error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("PanValidationController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l) {
        a.loading = !1, a.wrongInput = !1;
        a.data = {
            username: "",
            password: "",
            panNumber: "",
            referenceId: ""
        }, a.getReferenceId = function() {
            if (a.loading = !0, a.wrongInput = !1, delete a.data.error, a.data) {
                var e = {
                    task: "getReferenceId",
                    essentials: {
                        username: a.data.username,
                        password: a.data.password
                    }
                };
                l.createPlexus("itranalytics", e).then(function(e) {
                    console.log("plexusObj", e), a.data.itranalyticsData = e.result, a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.itranalyticsData, a.data.error = e, console.log("identity error", e)
                })
            } else a.wrongInput = !0, a.loading = !1
        }, a.getAnalytics = function() {
            if (a.loading = !0, a.wrongInput = !1, delete a.data.error, a.data) {
                var e = {
                    task: "getAnalytics",
                    essentials: {
                        referenceId: a.data.referenceId
                    }
                };
                l.createPlexus("itranalytics", e).then(function(e) {
                    console.log("plexusObj", e), a.data.itranalyticsData = e.result, a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.itranalyticsData, a.data.error = e, console.log("identity error", e)
                })
            } else a.wrongInput = !0, a.loading = !1
        }
    }
    angular.module("signzySandbox").controller("ItrController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "$cookies", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d) {
        a.loading = !1, a.wrongInput = !1;
        a.data = {
            itr_files: [],
            dob: ""
        }, a.fileUpload = function(e, t) {
            n.File.upload(a.data.itr_files[t]).then(function(e) {
                console.log("ITR File Uploaded", e), a.data.itr_files[t] = e.directURL
            }, function() {
                i.debug("File submitted, starting worker call", a.data.itr_files)
            })
        }, a.extractForm26s = function() {
            delete a.data.error, a.loading = !0;
            var e = {
                type: "form26",
                essentials: {
                    url: a.data.itr_files[0],
                    dob: a.data.dob.replace(/\//g, "")
                }
            };
            console.log("inputData", e), d.createPlexus("itrs", e).then(function(e) {
                console.log("plexusObj", e), a.data.itrData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.itrData, a.data.error = e, console.log("plexus error", e)
            })
        }, a.extractForm16 = function() {
            delete a.data.error, a.loading = !0;
            var e = {
                type: "form16",
                essentials: {
                    url: a.data.itr_files[0]
                }
            };
            console.log("inputData", e), d.createPlexus("itrs", e).then(function(e) {
                console.log("plexusObj", e), a.data.itrData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.itrData, a.data.error = e, console.log("plexus error", e)
            })
        }, a.extractForm26AS = function() {
            delete a.data.error, a.loading = !0;
            var e = {
                type: "form26as",
                essentials: {
                    url: a.data.itr_files[0]
                }
            };
            console.log("inputData", e), d.createPlexus("itrs", e).then(function(e) {
                console.log("plexusObj", e), a.data.itrData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.itrData, a.data.error = e, console.log("plexus error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("ITRController", e), e.$inject = ["$state", "$scope", "$http", "$log", "uploadSrv", "URLService", "$cookies", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        a.loading = !1;
        var u = {};
        a.data = {
            cheque_files: [],
            cheque: {}
        }, a.fileUpload = function(e, t) {
            o.File.upload(a.data.cheque_files[t]).then(function(e) {
                console.log("DL File Uploaded", e), a.data.cheque_files[t] = e.directURL, a.data.dl = s.appendObject(u, a.data.pan)
            }, function() {
                i.debug("File submitted, starting worker call", a.data.cheque_files)
            })
        }, a.extract = function() {
            delete a.data.error, a.loading = !0, c.createIdentity("cheque", a.data.cheque_files).then(function(e) {
                c.createSnoop(e.id, e.accessToken, "autoRecognition", {}).then(function(e) {
                    console.log("snoopObj", e), a.data.chequeExtractedResponse = e.response.result, a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.chequeExtractedResponse, a.data.error = e, console.log("snoop error", e)
                })
            }, function(e) {
                a.loading = !1, delete a.data.chequeExtractedResponse, a.data.error = e, console.log("identity error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("ChequeController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        a.loading = !1;
        a.data = {
            files: []
        }, a.fileUpload = function(e, t) {
            o.File.upload(a.data.files[t]).then(function(e) {
                console.log("DL File Uploaded", e), a.data.files[t] = e.directURL
            }, function() {
                i.debug("File submitted, starting worker call", a.data.files)
            })
        }, a.creditcardExtract = function() {
            a.loading = !0, delete a.data.error;
            var e = {
                task: "creditcard",
                essentials: {
                    urls: a.data.files
                }
            };
            console.log("inputData", e), c.createPlexus("cardextractions", e).then(function(e) {
                console.log("plexusObj", e), a.data.creditCardData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.creditCardData, a.data.error = e, console.log("plexus error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("CardController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l) {
        a.loading = !1, a.wrongInput = !1;
        a.data = {
            ifscCode: "",
            micrCode: ""
        }, a.ifscCodeSearch = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "ifscCode",
                essentials: {
                    ifscCode: a.data.ifscCode
                }
            };
            l.createPlexus("banksearchs", e).then(function(e) {
                console.log("plexusObj", e), a.data.bankData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.bankData, a.data.error = e, console.log("identity error", e)
            })
        }, a.micrCodeSearch = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "micrCode",
                essentials: {
                    micrCode: a.data.micrCode
                }
            };
            l.createPlexus("banksearchs", e).then(function(e) {
                console.log("plexusObj", e), a.data.bankData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.bankData, a.data.error = e, console.log("identity error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("BanksearchController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "$cookies", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d) {
        a.loading = !1, a.wrongInput = !1;
        a.data = {
            bs_files: [],
            bank: "",
            allowedBanks: ["ICICI", "SBI", "KOTAK", "YES", "HDFC", "AXIS", "SYNDICATE", "CORPORATION", "PNB", "UNITED_BANK", "INDUSIND", "CENTRAL_BANK", "CITI", "DBS", "CANARA", "STANDARD_CHARTERED", "RBL", "UNION_BANK", "ALLAHABAD", "BANK_OF_BARODA", "STATE_BANK_PATIALA", "STATE_BANK_MYSORE", "STATE_BANK_TRAVANCORE", "TAMILNAD_MERCANTILE", "STATE_BANK_BIKANER_JAIPUR", "STATE_BANK_HYDERABAD", "BANK_OF_INDIA", "BANK_OF_MAHARASHTRA", "DENA_BANK", "INDIAN_BANK", "INDIAN_OVERSEAS", "ORIENTAL_BANK", "PUNJAB_SIND", "UCO", "VIJAYA", "IDBI", "BANDHAN", "CATHOLIC_SYRIAN", "CITY_UNION", "DHANLAXMI", "DCB", "FEDERAL", "IDFC", "KARNATAKA", "JAMMU_KASHMIR", "KARUR_VYASA", "LAKSHMI_VILAS", "NAINITAL", "SOUTH_INDIAN", "RBS", "SARASWAT_BANK", "TJSB", "DNB", "DNS", "DEUTSCHE_BANK", "GREATER_BOMBAY", "APNA_SAHAKARI_BANK", "AKHAND_ANAND", "ADARSH_CO_OPERATIVE_URBAN_BANK", "BASSEIN_CATHOLIC", "ANDHRA_BANK", "AMBERNATH_JAI_HIND_CO_OP_BANK", "PUNJAB_MAHARASHTRA_CO_OP_BANK", "HSBC", "BHARAT", "SVC_BANK", "SDC", "SREENIDHI_SOUHARDA_SAHAKARI_BANK", "OCEAN_FIRST", "CAPITAL_SMALL_FINANCE_BANK_LTD", "KALUPUR_COMMERCIAL_CO_OP_BANK", "KANGRA_CO_OP_BANK", "BHARTIYA_MAHILA_BANK", "SARDAR_BHILADWALA_PARDI_PEOPLES_CO_OP_BANK", "MODEL_CO_OPERATIVE_BANK", "MEHSANA_URBAN_CO_OP_BANK", "NEW_INDIA_CO_OP_BANK", "THE_NARODA_NAGRIK_CO_OP_BANK", "COSMOS_BANK", "JANAKALYAN_SAHAKARI_BANK", "JANATA_SAHAKARI_BANK", "MJALGAON_JANATA_SAHAKARI_BANK", "MANVI_PATTANA_SOUHARADA_SAHAKARI_BANK", "CENTRAL_CO_OPERATIVE_BANK", "NUTAN_NAGARIK_SAHAKARI_BANK", "KALYAN_JANATA_SAHAKARI_BANK", "ABHYUDAYA_CO_OP_BANK", "AIRTEL_BANK", "EQUITAS_SMALL_FINANCE_BANK", "AU_SMALL_FINANCE_BANK", "NAGPUR_NAGARIK_SAHAKARI_BANK", "TEXTILE_CO_OPERATIVE_BANK", "JANASEVA_SAHAKARI_BANK", "SARASPUR_NAGARIK_CO_OP_BANK", "GP_PARSIK_BANK", "TGMC_BANK", "SARVODAYA_SAHAKARI_BANK", "SHREE_KADI_NAGARIK_SAHAKARI_BANK", "SAURASHTRA_GRAMIN_BANK", "ASSOCIATE_CO_OP_BANK", "SOLAPUR_JANATA_SAHAKARI_BANK", "INDRAPRASTHA_SEHKARI_BANK", "MAHESH_SAHAKARI_BANK_LTD", "PUNE_PEOPLES_CO_OP_BANK", "VASAI_VIKAS_SAH_BANK_LTD", "MAHESH_BANK", "UNION_CO_OP_BANK_LTD", "JANATHA_SEVA_CO_OP_BANK", "The_Wai_Urban_Co_Operative_Bank_Limited", "The_Vallabh_VidyaNagar_Commercial_Co_Operative_Bank_Ltd", "THE_VIJAY_CO_OP_BANK", "ZOROASTRIAN_CO_OP_BANK", "VAIJAPUR_MARCHANTS_CO_OP_BANK", "NKGSB_CO_OP_BANK", "THE_SUTEX_CO_OP_BANK", "THE_SURAT_PEOPLE_CO_OP_BANK_LTD", "GUJARAT_AMBUJA_CO_OP_BANK_LTD", "KANKARIAA_MANINAGAR_NAG_SAH_BANK_LTD", "UJJIVAN_SMALL_FINANCE_BANK", "CITIZEN_CREDIT_CO_OP_BANK", "PADMAVATHI_CO_OP_URBAN_BANK", "THE_SATARA_SAHAKARI_BANK_LTD", "MAHANAGAR_CO_OP_BANK_LTD", "SURYODAY_SMALL_FINANCE_BANK_LTD", "SHREE_CO_OP_BANK_LTD", "MANINAGAR_CO_OP_BANK_LTD", "THE_VARACHHA_CO_OP_BANK_LTD", "SURAT_NATIONAL_CO_OP_BANK_LTD", "VIDYA_SAHKARI_BANK_LTD", "THE_KARAD_URBAN_CO_OP_BANK_LTD", "THE_PANCHSHEEL_MERCANTILE_CO_OP_BANK_LTD", "MAGAVEERA_CO_OP_BANK_LTD", "THANE_BHARAT_SAHAKARI_BANK_LTD", "SREE_MAHAYOGI_LAKSHMAMMA_CO_OP_BANK_LTD", "VIDARBHA_MERCHANTS_URBAN_CO_OP_BANK_LTD", "PRATHAMA_BANK", "PRIME_BANK", "DR_BABASAHEB_AMBEDKAR_MULTISTATE_CO_OP_BANK", "The_Hindusthan_Co_Op_Bank_Ltd", "KARNAVATI_CO_OP_BANK", "The_Ahmednagar_Merchant_Co_Op_Bank_Ltd", "THE_KANAKAMAHALAKSHMI_CO_OP_BANK_LTD", "KURMANCHAL_BANK", "The_Gandhidham_CoOperative_Bank_Ltd", "SHRI_ARIHANT_COOP_BANK", "Kallappanna_Awade_Bank", "Shivalik_Mercantile_Bank", "SAHYDRI_SAHAKARI_BANK", "Bihar_Gramin_Bank", "The_Vishweshwar_Sahakari_Bank_Ltd", "PURVANCHAL_BANK", "THE_RAJKOT_COMMERCIAL_COOP_BANK", "The_Jalgaon_Peoples_CoOp_Bank", "AHMEDABAD_DISTRICT_CO_OP_BANK", "SHIVALIK_MERCANTILE_BANK", "The_Akola_District_Central_Co_Op_Bank", "The_Panipat_Urban_Co_Op_Bank", "SHRI_RAJKOT_DISTRICT_CO_OP_BANK", "NEELKANT_CO_OP_BANK", "The_Eenadu_Co_Op_Urban_Bank", "The_Ahmedabad_Mercantile_Co_Op_Bank", "Adarsh_Co_Operative_Bank_Ltd", "Noida_Commercial_Co_Op_Bank", "Jai_Tuljabhavani_Urban_Co_Op_Bank", "The_Bardoli_Nagarik_Sahakari_Bank", "RMGB", "Sterling_Urban_Co_Op_Bank", "Smriti_Nagrik_Sahakari_Bank", "Fino_Payments_Bank", "Vaishya_Nagari_Sahakari_Bank", "Vananchal_Gramin_Bank", "Utkarsh_Small_Finance_Bank", "Maharashtra_Gramin_Bank", "Uttarakhand_Gramin_Bank", "Bhagyodaya_Co_Op_Bank", "SANGOLA_URBAN_CO_OPERATIVE_BANK_LTD", "Gujarat_State_Co_Op_Bank"],
            allowedTypes: ["SAVING", "CURRENT", "CREDIT_CARD"]
        }, a.fileUpload = function(e, t) {
            n.File.upload(a.data.bs_files[t]).then(function(e) {
                console.log("Bank Statement File Uploaded", e), a.data.bs_files[t] = e.directURL
            }, function() {
                i.debug("File submitted, starting worker call", a.data.bs_files)
            })
        }, a.extract = function() {
            a.loading = !0, delete a.data.error;
            var e = {
                essentials: {
                    url: a.data.bs_files[0],
                    bankName: a.data.bank,
                    accountType: a.data.accountType
                }
            };
            console.log("inputData", e), d.createPlexus("bankStatements", e).then(function(e) {
                console.log("plexusObj", e), a.data.bankStatementData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.bankStatementData, a.data.error = e, console.log("plexus error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("BankstatementController", e), e.$inject = ["$state", "$scope", "$http", "$log", "uploadSrv", "URLService", "$cookies", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        a.loading = !1;
        a.data = {
            voter: {},
            transferData: {
                beneficiaryMobile: "",
                beneficiaryAccount: "",
                beneficiaryName: "",
                beneficiaryIFSC: "",
                remarks: "",
                nameMatchScore: "",
                nameFuzzy: "true",
                emailID: ""
            },
            verifyData: {
                signzyId: null != localStorage.getItem("bankData") ? JSON.parse(localStorage.getItem("bankData")).signzyReferenceId : "",
                amount: ""
            }
        }, a.verify = function() {
            delete a.data.error, a.loading = !0, a.wrongInput = !1;
            var e = {
                task: "verifyAmount",
                essentials: {
                    amount: a.data.verifyData.amount,
                    signzyId: a.data.verifyData.signzyId
                }
            };
            c.createPlexus("bankaccountverifications", e).then(function(e) {
                console.log("plexusObj", e), a.data.verifyOutputData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.verifyOutputData, a.data.error = e, console.log("plexus error", e)
            })
        }, a.transfer = function() {
            delete a.data.error, a.loading = !0, a.wrongInput = !1;
            var e = {
                task: "bankTransfer",
                essentials: {
                    beneficiaryAccount: a.data.transferData.beneficiaryAccount,
                    beneficiaryIFSC: a.data.transferData.beneficiaryIFSC
                }
            };
            a.data.transferData.beneficiaryMobile.length > 0 && (e.essentials.beneficiaryMobile = a.data.transferData.beneficiaryMobile), a.data.transferData.beneficiaryName.length > 0 && (e.essentials.beneficiaryName = a.data.transferData.beneficiaryName), a.data.transferData.remarks.length > 0 && (e.essentials.remarks = a.data.transferData.remarks), a.data.transferData.nameMatchScore.length > 0 && (e.essentials.nameMatchScore = a.data.transferData.nameMatchScore), a.data.transferData.nameFuzzy.length > 0 && (e.essentials.nameFuzzy = a.data.transferData.nameFuzzy), a.data.transferData.emailID.length > 0 && (e.essentials.email = a.data.transferData.emailID), c.createPlexus("bankaccountverifications", e).then(function(e) {
                console.log("plexusObj", e), a.data.transferOutputData = e, localStorage.setItem("bankData", JSON.stringify(a.data.transferOutputData)), a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.transferOutputData, a.data.error = e, console.log("plexus error", e)
            })
        }, a.transferLite = function() {
            delete a.data.error, a.loading = !0, a.wrongInput = !1;
            var e = {
                task: "bankTransferLite",
                essentials: {
                    beneficiaryAccount: a.data.transferData.beneficiaryAccount,
                    beneficiaryIFSC: a.data.transferData.beneficiaryIFSC
                }
            };
            a.data.transferData.beneficiaryMobile.length > 0 && (e.essentials.beneficiaryMobile = a.data.transferData.beneficiaryMobile), a.data.transferData.beneficiaryName.length > 0 && (e.essentials.beneficiaryName = a.data.transferData.beneficiaryName), a.data.transferData.remarks.length > 0 && (e.essentials.remarks = a.data.transferData.remarks), a.data.transferData.nameMatchScore.length > 0 && (e.essentials.nameMatchScore = a.data.transferData.nameMatchScore), a.data.transferData.nameFuzzy.length > 0 && (e.essentials.nameFuzzy = a.data.transferData.nameFuzzy), a.data.transferData.emailID.length > 0 && (e.essentials.email = a.data.transferData.emailID), c.createPlexus("bankaccountverifications", e).then(function(e) {
                console.log("plexusObj", e), a.data.transferOutputData = e, localStorage.setItem("bankData", JSON.stringify(a.data.transferOutputData)), a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.transferOutputData, a.data.error = e, console.log("plexus error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("BankAccountController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e() {
        function e() {
            return a
        }
        var a = [{
            title: "AngularJS",
            url: "https://angularjs.org/",
            description: "HTML enhanced for web apps!",
            logo: "angular.png"
        }, {
            title: "BrowserSync",
            url: "http://browsersync.io/",
            description: "Time-saving synchronised browser testing.",
            logo: "browsersync.png"
        }, {
            title: "GulpJS",
            url: "http://gulpjs.com/",
            description: "The streaming build system.",
            logo: "gulp.png"
        }, {
            title: "Jasmine",
            url: "http://jasmine.github.io/",
            description: "Behavior-Driven JavaScript.",
            logo: "jasmine.png"
        }, {
            title: "Karma",
            url: "http://karma-runner.github.io/",
            description: "Spectacular Test Runner for JavaScript.",
            logo: "karma.png"
        }, {
            title: "Protractor",
            url: "https://github.com/angular/protractor",
            description: "End to end test framework for AngularJS applications built on top of WebDriverJS.",
            logo: "protractor.png"
        }];
        this.getTec = e
    }
    angular.module("signzySandbox").service("webDevTec", e)
}(),
function() {
    "use strict";

    function e() {
        function e(e) {
            var a = this;
            a.relativeDate = e(a.creationDate).fromNow()
        }
        e.$inject = ["moment"];
        var a = {
            restrict: "E",
            templateUrl: "app/components/navbar/navbar.html",
            scope: {
                creationDate: "="
            },
            controller: e,
            controllerAs: "vm",
            bindToController: !0
        };
        return a
    }
    angular.module("signzySandbox").directive("acmeNavbar", e)
}(),
function() {
    "use strict";

    function e(e) {
        function a(a, t, i, n) {
            var s, r = e(t[0], {
                typeSpeed: 40,
                deleteSpeed: 40,
                pauseDelay: 800,
                loop: !0,
                postfix: " "
            });
            t.addClass("acme-malarkey"), angular.forEach(a.extraValues, function(e) {
                r.type(e).pause()["delete"]()
            }), s = a.$watch("vm.contributors", function() {
                angular.forEach(n.contributors, function(e) {
                    r.type(e.login).pause()["delete"]()
                })
            }), a.$on("$destroy", function() {
                s()
            })
        }

        function t(e, a) {
            function t() {
                return i().then(function() {
                    e.info("Activated Contributors View")
                })
            }

            function i() {
                return a.getContributors(10).then(function(e) {
                    return n.contributors = e, n.contributors
                })
            }
            var n = this;
            n.contributors = [], t()
        }
        t.$inject = ["$log", "githubContributor"];
        var i = {
            restrict: "E",
            scope: {
                extraValues: "="
            },
            template: "&nbsp;",
            link: a,
            controller: t,
            controllerAs: "vm"
        };
        return i
    }
    e.$inject = ["malarkey"], angular.module("signzySandbox").directive("acmeMalarkey", e)
}(),
function() {
    "use strict";

    function e(e, a) {
        function t(t) {
            function n(e) {
                return e.data
            }

            function s(a) {
                e.error("XHR Failed for getContributors.\n" + angular.toJson(a.data, !0))
            }
            return t || (t = 30), a.get(i + "/contributors?per_page=" + t).then(n)["catch"](s)
        }
        var i = "https://api.github.com/repos/Swiip/generator-gulp-angular",
            n = {
                apiHost: i,
                getContributors: t
            };
        return n
    }
    e.$inject = ["$log", "$http"], angular.module("signzySandbox").factory("githubContributor", e)
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        function u() {
            var e = {
                message: "",
                allow: !0
            };
            return angular.isDefined(a.data.acquirerId) && a.data.acquirerId.length > 0 ? angular.isDefined(a.data.merchantName) && a.data.merchantName.length > 0 ? angular.isDefined(a.data.merchantAddress.Line1) && a.data.merchantAddress.Line1.length > 0 ? angular.isDefined(a.data.merchantAddress.City) && a.data.merchantAddress.City.length > 0 ? angular.isDefined(a.data.merchantAddress.Country) && a.data.merchantAddress.Country.length > 0 ? angular.isDefined(a.data.principalFirstName) && a.data.principalFirstName.length > 0 ? angular.isDefined(a.data.principalLastName) && a.data.principalLastName.length > 0 ? angular.isDefined(a.data.principalAddress.Line1) && a.data.principalAddress.Line1.length > 0 ? angular.isDefined(a.data.principalAddress.City) && a.data.principalAddress.City.length > 0 ? angular.isDefined(a.data.principalAddress.PostalCode) && a.data.principalAddress.PostalCode.length > 0 ? angular.isDefined(a.data.principalAddress.Country) && a.data.principalAddress.Country.length > 0 ? e : (e.allow = !1, e.message = "Please enter principal country", e) : (e.allow = !1, e.message = "Please enter principal postal code", e) : (e.allow = !1, e.message = "Please enter principal city", e) : (e.allow = !1, e.message = "Please enter principal line1", e) : (e.allow = !1, e.message = "Please enter principal last name", e) : (e.allow = !1, e.message = "Please enter principal first name", e) : (e.allow = !1, e.message = "Please enter merchant country", e) : (e.allow = !1, e.message = "Please enter merchant city", e) : (e.allow = !1, e.message = "Please enter merchant line1", e) : (e.allow = !1, e.message = "Please enter merchant name", e) : (e.allow = !1, e.message = "Please enter acquirer Id", e)
        }
        a.loading = !1, a.wrongInput = !1;
        a.intialList = function() {
            for (var e = [], a = .01; 1 >= a; a += .01) e.push(a.toFixed(2));
            return e.push(1), console.log("arr", e), e
        }, a.aml = !0, a.cft = !0, a.lending = !0, a.noncompliance = !0, a.allDatabases = !0, a.data = {
            name: "",
            type: "entity",
            matchScoreRange: a.intialList(),
            matchScoreThreshold: a.intialList()[49],
            category: ["aml", "cft", "noncompliance", "lending"],
            databaseList: [],
            acquirerId: "",
            merchantName: "",
            merchantDoingBusinessAsName: "",
            merchantAltPhoneNumber: "",
            merchantAddress: {
                Line1: "",
                Line2: "",
                City: "",
                CountrySubdivision: "",
                PostalCode: "",
                Country: ""
            },
            merchantURL: "",
            principalMiddleInitial: "",
            principalFirstName: "",
            principalLastName: "",
            principalPhoneNumber: "",
            principalAddress: {
                Line1: "",
                City: "",
                CountrySubdivision: "",
                PostalCode: "",
                Country: ""
            }
        }, a.mcInputShowFlag = !1, a.showMcMatchInput = function() {
            console.log("mc input flag\n", a.mcInputShowFlag), a.mcInputShowFlag = !a.mcInputShowFlag
        }, a.changeType = function() {
            a.data.databaseList = []
        }, a.handleArray = function(e, t, i, n) {
            a.data[n] = r.arrayHandler(a.data[n], e, t)
        }, a.basicSearch = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "negativeCheck",
                essentials: {
                    matchScoreThreshold: a.data.matchScoreThreshold + "",
                    name: a.data.name,
                    type: a.data.type
                }
            };
            if (angular.isDefined(a.data.identificationNumber) && a.data.identificationNumber.length > 0 && (e.essentials.identificationNumber = a.data.identificationNumber), angular.isDefined(a.data.zipcode) && a.data.zipcode.length > 0 && (e.essentials.zipcode = a.data.zipcode), angular.isDefined(a.data.country) && a.data.country.length > 0 && (e.essentials.country = a.data.country), angular.isDefined(a.data.matchScoreThreshold) && a.data.matchScoreThreshold.length > 0 && (e.essentials.matchScoreThreshold = a.data.matchScoreThreshold), angular.isDefined(a.data.category) && a.data.category.length > 0) {
                e.essentials.category = [];
                for (var t = 0; t < a.data.category.length; t++) e.essentials.category.push(a.data.category[t].toUpperCase())
            }
            if (angular.isDefined(a.data.databaseList) && a.data.databaseList.length > 0) {
                e.essentials.databaseList = [];
                for (var t = 0; t < a.data.databaseList.length; t++) e.essentials.databaseList.push(a.data.databaseList[t].toUpperCase())
            }
            if (angular.isDefined(a.data.dateOfBirthOrIncorporation) && a.data.dateOfBirthOrIncorporation.length > 0 && (e.essentials.dateOfBirthOrIncorporation = a.data.dateOfBirthOrIncorporation), angular.isDefined(a.data.searchText) && a.data.searchText.length > 0 && (e.essentials.searchText = a.data.searchText.split(",")), angular.isDefined(a.data.aliasArray) && a.data.aliasArray.length > 0 && (e.essentials.aliasArray = a.data.aliasArray.split(",")), a.mcInputShowFlag) {
                angular.isDefined(a.data.merchantName) && a.data.merchantName.length > 0 && (e.essentials.merchantName = a.data.merchantName), angular.isDefined(a.data.acquirerId) && a.data.acquirerId.length > 0 && (e.essentials.acquirerId = a.data.acquirerId), angular.isDefined(a.data.merchantDoingBusinessAsName) && a.data.merchantDoingBusinessAsName.length > 0 && (e.essentials.merchantDoingBusinessAsName = a.data.merchantDoingBusinessAsName), angular.isDefined(a.data.merchantAltPhoneNumber) && a.data.merchantAltPhoneNumber.length > 0 && (e.essentials.merchantAltPhoneNumber = a.data.merchantAltPhoneNumber), angular.isDefined(a.data.merchantAddress) && (e.essentials.merchantAddress = {}, angular.isDefined(a.data.merchantAddress.Line1) && (e.essentials.merchantAddress.Line1 = a.data.merchantAddress.Line1), angular.isDefined(a.data.merchantAddress.Line2) && (e.essentials.merchantAddress.Line2 = a.data.merchantAddress.Line2), angular.isDefined(a.data.merchantAddress.City) && (e.essentials.merchantAddress.City = a.data.merchantAddress.City), angular.isDefined(a.data.merchantAddress.CountrySubdivision) && (e.essentials.merchantAddress.CountrySubdivision = a.data.merchantAddress.CountrySubdivision), angular.isDefined(a.data.merchantAddress.PostalCode) && (e.essentials.merchantAddress.PostalCode = a.data.merchantAddress.PostalCode), angular.isDefined(a.data.merchantAddress.Country) && (e.essentials.merchantAddress.Country = a.data.merchantAddress.Country)), angular.isDefined(a.data.principalFirstName) && a.data.principalFirstName.length > 0 && (e.essentials.principalFirstName = a.data.principalFirstName), angular.isDefined(a.data.principalLastName) && a.data.principalLastName.length > 0 && (e.essentials.principalLastName = a.data.principalLastName), angular.isDefined(a.data.principalPhoneNumber) && a.data.principalPhoneNumber.length > 0 && (e.essentials.principalPhoneNumber = a.data.principalPhoneNumber), angular.isDefined(a.data.principalMiddleInitial) && a.data.principalMiddleInitial.length > 0 && (e.essentials.principalMiddleInitial = a.data.principalMiddleInitial), angular.isDefined(a.data.principalAddress) && (e.essentials.principalAddress = {}, angular.isDefined(a.data.principalAddress.Line1) && (e.essentials.principalAddress.Line1 = a.data.principalAddress.Line1), angular.isDefined(a.data.principalAddress.Line2) && (e.essentials.principalAddress.Line2 = a.data.principalAddress.Line2), angular.isDefined(a.data.principalAddress.City) && (e.essentials.principalAddress.City = a.data.principalAddress.City), angular.isDefined(a.data.principalAddress.CountrySubdivision) && (e.essentials.principalAddress.CountrySubdivision = a.data.principalAddress.CountrySubdivision), angular.isDefined(a.data.principalAddress.PostalCode) && (e.essentials.principalAddress.PostalCode = a.data.principalAddress.PostalCode), angular.isDefined(a.data.principalAddress.Country) && (e.essentials.principalAddress.Country = a.data.principalAddress.Country));
                var i = u();
                if (i.allow === !1) return a.loading = !1, void window.alert(i.message)
            }
            c.createPlexus("negativeduediligences", e).then(function(e) {
                console.log("plexusObj", e), a.data.negativeData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.negativeData, a.data.error = e, console.log("plexus error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("negativeDueDiligenceController", e), e.$inject = ["$state", "$scope", "$http", "$log", "Upload", "URLService", "UtilsService", "$cookies", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d) {
        a.loading = !1, a.wrongInput = !1;
        a.today = (new Date).toDateString(), a.data = {
            name: "",
            pep: "",
            stateOwnCompany: "",
            country: "",
            sanctionsList: [],
            description: []
        }, a.personData = {
            description: {},
            sanctionsList: {}
        }, a.entityData = {
            description: {},
            sanctionsList: {}
        }, a.personSearch = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            for (var e = Object.keys(a.personData.description), t = 0; t < e.length; t++) 1 == a.personData.description[e[t]] && a.data.description.push(e[t]);
            for (var e = Object.keys(a.personData.sanctionsList), t = 0; t < e.length; t++) 1 == a.personData.sanctionsList[e[t]] && a.data.sanctionsList.push(e[t]);
            console.log("data is ", a.data);
            var i = {
                task: "personSearch",
                essentials: a.data
            };
            d.createPlexus("amlcfts", i).then(function(e) {
                console.log("plexusObj", e), a.data.personResult = e.result, a.loading = !1
            }, function(e) {
                console.log("inputData", i), a.loading = !1, delete a.data.personResult, a.data.error = e, console.log("plexus error", e)
            })
        }, a.entitySearch = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error, console.log("inside entity", a.entityData.description), console.log("inside entity", a.entityData.sanctionsList);
            for (var e = Object.keys(a.entityData.description), t = 0; t < e.length; t++) 1 == a.entityData.description[e[t]] && a.data.description.push(e[t]);
            for (var e = Object.keys(a.entityData.sanctionsList), t = 0; t < e.length; t++) 1 == a.entityData.sanctionsList[e[t]] && a.data.sanctionsList.push(e[t]);
            console.log("data is ", a.data);
            var i = {
                task: "entitySearch",
                essentials: a.data
            };
            d.createPlexus("amlcfts", i).then(function(e) {
                console.log("plexusObj", e), a.data.entityResult = e.result, a.loading = !1
            }, function(e) {
                console.log("inputData", i), a.loading = !1, delete a.data.entityResult, a.data.error = e, console.log("plexus error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("dowJonesController", e), e.$inject = ["$state", "$scope", "$http", "$log", "Upload", "URLService", "$cookies", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a) {
        var t = {
                "": {
                    stateCode: "",
                    stateName: "ALL STATES"
                },
                MH: {
                    stateCode: "MH",
                    stateName: "MAHARASHTRA"
                },
                AP: {
                    stateCode: "AP",
                    stateName: "ANDHRA PRADESH"
                },
                KA: {
                    stateCode: "KA",
                    stateName: "KARNATAKA"
                },
                KL: {
                    stateCode: "KL",
                    stateName: "KERALA"
                },
                HP: {
                    stateCode: "HP",
                    stateName: "HIMACHAL PRADESH"
                },
                AS: {
                    stateCode: "AS",
                    stateName: "ASSAM"
                },
                JH: {
                    stateCode: "JH",
                    stateName: "JHARKHAND"
                },
                BR: {
                    stateCode: "BR",
                    stateName: "BIHAR"
                },
                RJ: {
                    stateCode: "RJ",
                    stateName: "RAJASTHAN"
                },
                TN: {
                    stateCode: "TN",
                    stateName: "TAMIL NADU"
                },
                OR: {
                    stateCode: "OR",
                    stateName: "ORISSA"
                },
                JK: {
                    stateCode: "JK",
                    stateName: "JAMMU AND KASHMIR"
                },
                UP: {
                    stateCode: "UP",
                    stateName: "UTTAR PRADESH"
                },
                HR: {
                    stateCode: "HR",
                    stateName: "HARYANA"
                },
                UT: {
                    stateCode: "UT",
                    stateName: "UTTARAKHAND"
                },
                WB: {
                    stateCode: "WB",
                    stateName: "WEST BENGAL"
                },
                GJ: {
                    stateCode: "GJ",
                    stateName: "GUJARAT"
                },
                CT: {
                    stateCode: "CT",
                    stateName: "CHATTISGARH"
                },
                MZ: {
                    stateCode: "MZ",
                    stateName: "MIZORAM"
                },
                TR: {
                    stateCode: "TR",
                    stateName: "TRIPURA"
                },
                ML: {
                    stateCode: "ML",
                    stateName: "MEGHALAYA"
                },
                PB: {
                    stateCode: "PB",
                    stateName: "PUNJAB"
                },
                MP: {
                    stateCode: "MP",
                    stateName: "MADHYA PRADESH"
                },
                SK: {
                    stateCode: "SK",
                    stateName: "SIKKIM"
                },
                MN: {
                    stateCode: "MN",
                    stateName: "MANIPUR"
                },
                DL: {
                    stateCode: "DL",
                    stateName: "DELHI"
                },
                CH: {
                    stateCode: "CH",
                    stateName: "CHANDIGARH"
                },
                AN: {
                    stateCode: "AN",
                    stateName: "ANDAMAN AND NICOBAR"
                },
                TG: {
                    stateCode: "TG",
                    stateName: "TELANGANA"
                },
                GA: {
                    stateCode: "GA",
                    stateName: "GOA"
                },
                DD: {
                    stateCode: "DD",
                    stateName: "DIU AND DAMAN"
                },
                DH: {
                    stateCode: "DH",
                    stateName: "DNH AT SILVASA"
                }
            },
            i = ["entity", "individual"],
            n = ["ipap", "women safety", "pmla", "police", "motor"],
            s = ["ecourt", "high court", "supreme court", "consumer court", "tribunals", "arrested", "fir", "ministry of corporate affairs", "ibc", "defaulters"],
            r = ["petitioner", "respondent"],
            o = ["criminal", "civil"];
        return {
            getCourtCaseSearchStateList: function() {
                var e = [];
                return Object.keys(t).forEach(function(a) {
                    e.push(t[a])
                }), e.sort(function(e, a) {
                    return e.stateName < a.stateName ? -1 : 1
                }), e
            },
            getcourtCaseListTypeList: function() {
                return i
            },
            getcourtCaseListCaseFilterList: function() {
                return n
            },
            getcourtCaseListSourceList: function() {
                return s
            },
            getcourtCaseListCaseTypeList: function() {
                return r
            },
            getcourtCaseListCaseCategoryList: function() {
                return o
            }
        }
    }
    angular.module("signzySandbox").service("courtCaseFactory", e), e.$inject = ["$http", "$timeout"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c, u) {
        a.loading = !1, a.wrongInput = !1;
        a.validCourtCaseListSourceList = u.getcourtCaseListSourceList(), a.validCourtCaseListTypeList = u.getcourtCaseListTypeList(), a.validCourtCaseListStateList = u.getCourtCaseSearchStateList(), a.validCourtCaseListCaseFilterList = u.getcourtCaseListCaseFilterList(), a.validCourtCaseListCaseCategoryList = u.getcourtCaseListCaseCategoryList(), a.validCourtCaseListCaseTypeList = u.getcourtCaseListCaseTypeList(), a.data = {
            name: null != localStorage.getItem("caseSearchName") ? localStorage.getItem("caseSearchName") : "",
            caseReferenceId: "",
            filterType: "state",
            stateList: JSON.parse(localStorage.getItem("state")),
            cityList: JSON.parse(localStorage.getItem("city")),
            cityId: "",
            stateId: "",
            additionalFiltersRequired: "no",
            caseList: {
                name: "",
                address: "",
                type: "",
                fatherName: "",
                state: "",
                caseFilter: "",
                caseCategory: "",
                caseType: "",
                caseYear: ""
            }
        }, a.getData = function(e) {
            console.log("type", e), d.grant.handleData("state").then(function(e) {
                a.data.stateList = JSON.parse(localStorage.getItem("state")), a.data.stateId = a.data.stateList[0].stateId
            }), d.grant.handleData("city").then(function(e) {
                a.data.cityList = JSON.parse(localStorage.getItem("city")), a.data.cityId = a.data.cityList[0].cityId
            })
        }, a.caseCountSearch = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "caseCount",
                essentials: {
                    name: a.data.name
                }
            };
            "yes" == a.data.additionalFiltersRequired && ("state" == a.data.filterType && (e.essentials.stateId = a.data.stateId), "city" == a.data.filterType && (e.essentials.cityId = a.data.cityId)), localStorage.setItem("caseSearchName", a.data.name), c.createPlexus("courtcases", e).then(function(e) {
                console.log("plexusObj", e), a.data.countData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.countData, a.data.error = e, console.log("plexus error", e)
            })
        }, a.caseListSearch = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "caseList",
                essentials: a.data.caseList
            };
            c.createPlexus("courtcases", e).then(function(e) {
                console.log("plexusObj", e), a.data.listData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.listData, a.data.error = e, console.log("plexus error", e)
            })
        }, a.caseDetailSearch = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "caseDetail",
                essentials: {
                    caseReferenceId: a.data.caseReferenceId
                }
            };
            localStorage.setItem("caseSearchName", a.data.name), c.createPlexus("courtcases", e).then(function(e) {
                console.log("plexusObj", e), a.data.listData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.listData, a.data.error = e, console.log("plexus error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("CourtCaseController", e), e.$inject = ["$state", "$scope", "$http", "$log", "Upload", "URLService", "UtilsService", "$cookies", "$timeout", "grantSrv", "httpSrv", "courtCaseFactory"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d) {
        a.loading = !1, a.wrongInput = !1;
        a.data = {
            name: "",
            type: "entity"
        }, a.basicSearch = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "basicSearch",
                essentials: {
                    name: a.data.name,
                    type: a.data.type
                }
            };
            angular.isDefined(a.data.yob) && a.data.yob.length > 0 && (e.essentials.yob = a.data.yob), angular.isDefined(a.data.age) && a.data.age.length > 0 && (e.essentials.age = a.data.age), angular.isDefined(a.data.country) && a.data.country.length > 0 && (e.essentials.country = a.data.country), angular.isDefined(a.data.aliasArray) && a.data.aliasArray.length > 0 && (e.essentials.aliasArray = a.data.aliasArray.split(",")), d.createPlexus("amlcfts", e).then(function(e) {
                console.log("plexusObj", e), a.data.amlcftData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.amlcftData, a.data.error = e, console.log("plexus error", e)
            })
        }, a.entityNegativeDataSearch = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "entityNegativeList",
                essentials: {
                    cin: a.data.cin
                }
            };
            d.createPlexus("amlcfts", e).then(function(e) {
                console.log("plexusObj", e), a.data.entityNegativeData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.entityNegativeData, a.data.error = e, console.log("plexus error", e)
            })
        }, a.directorNegativeDataSearch = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "directorNegativeList",
                essentials: {
                    din: a.data.din
                }
            };
            d.createPlexus("amlcfts", e).then(function(e) {
                console.log("plexusObj", e), a.data.directorNegativeData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.directorNegativeData, a.data.error = e, console.log("plexus error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("AmlcftController", e), e.$inject = ["$state", "$scope", "$http", "$log", "Upload", "URLService", "$cookies", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        a.loading = !1, a.loading2 = !1;
        a.phoneProviders = [{
            name: "BSNL",
            value: "BSNL"
        }, {
            id: 2,
            name: "MTNL",
            value: "MTNL"
        }, {
            id: 3,
            name: "AIRTEL",
            value: "AIRTEL"
        }], a.data = {
            landlineNumber: "",
            stdCode: ""
        }, a.countryCodes = [{
            name: "+91 (India)",
            value: "91"
        }], a.otpCountryCodes = [{
            name: "+91 (India)",
            value: "91"
        }], a.data = {
            landlineNumber: "",
            stdCode: ""
        }, a.mobileData = {
            countryCode: "",
            mobileNumber: "",
            extraFields: "false"
        }, a.otpData = {
            countryCode: "",
            mobileNumber: ""
        }, a.search = function() {
            delete a.data.error, a.loading = !0, a.wrongInput = !1;
            var e = {
                task: "landline",
                essentials: {
                    landlineNumber: a.data.landlineNumber,
                    providerName: a.data.providerName,
                    stdCode: a.data.stdCode
                }
            };
            c.createPlexus("phones", e).then(function(e) {
                console.log("plexusObj", e), a.data.landlineReponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.landlineReponse, a.data.error = e, console.log("plexus error", e)
            })
        }, a.generateOtp = function() {
            delete a.otpData.error, delete a.otpData.otpResponse, a.loading2 = !0, a.wrongInput = !1;
            var e = {
                task: "mobile",
                essentials: {
                    task: "generateOtp",
                    mobileNumber: a.otpData.mobileNumber,
                    countryCode: a.otpData.countryCode
                }
            };
            c.createPlexus("phones", e).then(function(e) {
                console.log("plexusObj", e), a.otpData.otpResponse = e.result, a.mobileData.mobileNumber = a.otpData.mobileNumber, a.mobileData.referenceId = e.result.referenceId, a.loading2 = !1
            }, function(e) {
                a.loading2 = !1, delete a.otpData.otpResponse, a.otpData.error = e, console.log("plexus error", e)
            })
        }, a.mobileSearch = function() {
            delete a.mobileData.error, delete a.mobileData.mobileResponse, a.loading = !0, a.wrongInput = !1;
            var e = {
                task: "mobile",
                essentials: {
                    task: "submitOtp",
                    countryCode: a.mobileData.countryCode,
                    mobileNumber: a.mobileData.mobileNumber,
                    otp: a.mobileData.otp,
                    referenceId: a.mobileData.referenceId,
                    extraFields: a.mobileData.extraFields
                }
            };
            console.log("om[inputData ", e), c.createPlexus("phones", e).then(function(e) {
                console.log("plexusObj", e), a.mobileData.mobileResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.mobileData.mobileResponse, a.mobileData.error = e, console.log("plexus error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("PhoneController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        a.loading = !1;
        a.lpgProviders = [{
            id: 1,
            name: "HP GAS",
            value: "HPGAS"
        }, {
            id: 1,
            name: "BHARAT GAS",
            value: "BHARATGAS"
        }, {
            id: 1,
            name: "INDANE",
            value: "INDANEGAS"
        }], a.data = {
            lpgId: "",
            mobile: ""
        }, a.lpgIdSearch = function() {
            delete a.data.error, a.loading = !0, a.wrongInput = !1;
            var e = {
                task: "lpgidsearch",
                essentials: {
                    lpgId: a.data.lpgId
                }
            };
            c.createPlexus("lpgs", e).then(function(e) {
                console.log("plexusObj", e), a.data.lpgIdResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.lpgIdResponse, a.data.error = e, console.log("plexus error", e)
            })
        }, a.lpgIdVerification = function() {
            delete a.data.error, a.loading = !0, a.wrongInput = !1;
            var e = {
                task: "lpgidverification",
                essentials: {
                    lpgId: a.data.lpgId
                }
            };
            c.createPlexus("lpgs", e).then(function(e) {
                console.log("plexusObj", e), a.data.lpgIdResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.lpgIdResponse, a.data.error = e, console.log("plexus error", e)
            })
        }, a.mobileSearch = function() {
            delete a.data.error, a.loading = !0, a.wrongInput = !1;
            var e = {
                task: "mobilesearch",
                essentials: {
                    mobile: a.data.mobile,
                    lpgProvider: a.data.lpgProvider
                }
            };
            c.createPlexus("lpgs", e).then(function(e) {
                console.log("plexusObj", e), a.data.mobileResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.mobileResponse, a.data.error = e, console.log("plexus error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("LpgController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a) {
        var t = [{
                electricityProvider: "APEPDCL",
                area: "ANDHRA PRADESH",
                name: "EASTERN POWER DISTRIBUTION COMPANY OF ANDHRA PRADESH LIMITED",
                code: "42"
            }, {
                electricityProvider: "APSPDCL",
                area: "ANDHRA PRADESH",
                name: "SOUTHERN POWER DISTRIBUTION COMPANY OF ANDHRA PRADESH LIMITED",
                code: "1"
            }, {
                electricityProvider: "APDCL",
                area: "ASSAM",
                name: "ASSAM POWER DISTRIBUTION COMPANY LIMITED",
                code: "2"
            }, {
                electricityProvider: "NBPDCL",
                area: "BIHAR",
                name: "NORTH BIHAR POWER DISTRIBUTION COMPANY LIMITED",
                code: "3"
            }, {
                electricityProvider: "SBPDCL",
                area: "BIHAR",
                name: "SOUTH BIHAR POWER DISTRIBUTION COMPANY LIMITED",
                code: "4"
            }, {
                electricityProvider: "CH_ELEC",
                area: "CHANDIGARH",
                name: "CHANDIGARH STATE POWER DISTRIBUTION COMPANY LTD",
                code: "44"
            }, {
                electricityProvider: "CSPDCL",
                area: "CHHATTISGARH",
                name: "CHHATTISGARH STATE POWER DISTRIBUTION COMPANY LIMITED",
                code: "22"
            }, {
                electricityProvider: "DNH",
                area: "DADRA & NAGAR HAVELI",
                name: "DNH POWER DISTRIBUTION CORPORATION LTD",
                code: "45"
            }, {
                electricityProvider: "BSES_DL",
                area: "DELHI",
                name: "BSES YAMUNA POWER LTD / BSES RAJDHANI POWER LTD",
                code: "5"
            }, {
                electricityProvider: "MUNCIPAL_DL",
                area: "DELHI",
                name: "DELHI MUNCIPAL COUNCIL",
                code: "39"
            }, {
                electricityProvider: "TATA_DL",
                area: "DELHI",
                name: "NORTH - TATA POWER DELHI DISTRIBUTION LIMITED",
                code: "6"
            }, {
                electricityProvider: "UPAY_GOA",
                area: "GOA",
                name: "GOA ELECTRICITY- FOR OTHERS",
                code: "34"
            }, {
                electricityProvider: "GOA_ELEC",
                area: "GOA",
                name: "GOA ELECTRICITY- FOR TISVADI, PONDA & VERNA",
                code: "34"
            }, {
                electricityProvider: "MGVCL",
                area: "GUJARAT",
                name: "MADHYA GUJARAT VIJ COMPANY LIMITED",
                code: "29"
            }, {
                electricityProvider: "PGVCL",
                area: "GUJARAT",
                name: "PASHCHIM GUJARAT VIJ COMPANY LTD.",
                code: "32"
            }, {
                electricityProvider: "UGVCL",
                area: "GUJARAT",
                name: "UTTAR GUJARAT VIJ COMPANY LTD.",
                code: "27"
            }, {
                electricityProvider: "DGVCL",
                area: "GUJARAT",
                name: "DAKSHIN GUJARAT VIJ COMPANY LIMITED",
                code: "28"
            }, {
                electricityProvider: "DHBVN",
                area: "HARYANA",
                name: "DAKSHIN HARYANA BIJLI VITRAN NIGAM",
                code: "35"
            }, {
                electricityProvider: "UHBVN",
                area: "HARYANA",
                name: "UTTAR HARYANA BIJLI VITRAN NIGAM",
                code: "7"
            }, {
                electricityProvider: "HPSEB",
                area: "HIMACHAL PRADESH",
                name: "HIMACHAL PRADESH STATE ELECTRICITY BOARD LIMITED (HPSEBL)",
                code: "8"
            }, {
                electricityProvider: "JBVNL",
                area: "JHARKHAND",
                name: "JHARKHAND BIJLI VITRAN NIGAM LIMITED(JBVNL)",
                code: "26"
            }, {
                electricityProvider: "HESCOM",
                area: "KARNATAKA",
                name: "HUBLI ELECTRICITY SUPPLY COMPANY LIMITED",
                code: "36"
            }, {
                electricityProvider: "BESCOM_NON_RAPDRP",
                area: "KARNATAKA",
                name: "BANGALORE ELECTRICITY SUPPLY COMPANY LTD (For NON-RAPDRP TOWNS)",
                code: "9"
            }, {
                electricityProvider: "GESCOM",
                area: "KARNATAKA",
                name: "GULBARGA ELECTRICITY SUPPLY COMPANY LIMITED",
                code: "11"
            }, {
                electricityProvider: "MESCOM",
                area: "KARNATAKA",
                name: "MANGALORE ELECTRICITY SUPPLY COMPANY LIMITED",
                code: "38"
            }, {
                electricityProvider: "CESCOM",
                area: "KARNATAKA",
                name: "CHAMUNDESHWARI ELECTRICITY SUPPLY COMPANY LIMITED MYSORE",
                code: "37"
            }, {
                electricityProvider: "BESCOM",
                area: "KARNATAKA",
                name: "BANGALORE ELECTRICITY SUPPLY COMPANY LTD",
                code: "10"
            }, {
                electricityProvider: "KSEB",
                area: "KERALA",
                name: "KERALA STATE ELECTRICITY BOARD",
                code: "33"
            }, {
                electricityProvider: "MPCZ",
                area: "MADHYA PRADESH",
                name: "MADHYA PRADESH MADHYA KSHETRA VIDYUT VITRAN COMPANY LIMITED",
                code: "31"
            }, {
                electricityProvider: "MPEZ",
                area: "MADHYA PRADESH",
                name: "MADHYA PRADESH POORV KSHETRA VIDYUT VITRAN COMPANY LIMITED",
                code: "23"
            }, {
                electricityProvider: "MPWZ",
                area: "MADHYA PRADESH",
                name: "MADHYA PRADESH PASCHIM KSHETRA VIDYUT VITRAN COMPANY LIMITED",
                code: "12"
            }, {
                electricityProvider: "RELIANCE_MH",
                area: "MAHARASHTRA",
                name: "RELIANCE ENERGY - MUMBAI",
                code: "15"
            }, {
                electricityProvider: "MAHAVITRAN",
                area: "MAHARASHTRA",
                name: "MAHAVITARAN-MAHARASHTRA STATE ELECTRICITY DISTRIBUTION CO. LTD (MSEDCL)",
                code: "13"
            }, {
                electricityProvider: "TATA_MUMBAI",
                area: "MAHARASHTRA",
                name: "TATA-POWER - MUMBAI",
                code: "14"
            }, {
                electricityProvider: "BEST",
                area: "MAHARASHTRA",
                name: "BEST UNDERTAKING",
                code: "14"
            }, {
                electricityProvider: "NAGALAND",
                area: "NAGALAND",
                name: "NAGALAND DEPARTMENT OF POWER",
                code: "46"
            }, {
                electricityProvider: "ORISSA_CENTRAL",
                area: "ORISSA",
                name: "CENTRAL ELECTRICITY SUPPLY UTILITY OF ORISSA LTD",
                code: "41"
            }, {
                electricityProvider: "ORISSA",
                area: "ORISSA",
                name: "SUPPLY COMPANY OF ORISSA LIMITED (NORTH, SOUTH & WEST)",
                code: "40"
            }, {
                electricityProvider: "PSPCL",
                area: "PUNJAB",
                name: "PUNJAB STATE POWER CORPORATION LIMITED",
                code: "25"
            }, {
                electricityProvider: "JAIPUR",
                area: "RAJASTHAN",
                name: "JAIPUR VIDHYUT VITRAN NIGAM LTD",
                code: "16"
            }, {
                electricityProvider: "SIKKIM",
                area: "SIKKIM",
                name: "SIKKIM ENERGY AND POWER DEPT",
                code: "24"
            }, {
                electricityProvider: "TNEB",
                area: "TAMIL NADU",
                name: "TAMIL NADU GENERATION AND DISTRIBUTION CORPORATION LIMITED",
                code: "30"
            }, {
                electricityProvider: "TSSPDCL",
                area: "TELANGANA",
                name: "THE SOUTHERN POWER DISTRIBUTION COMPANY OF TELANGANA LIMITED",
                code: "17"
            }, {
                electricityProvider: "UPPCL",
                area: "UTTAR PRADESH",
                name: "UTTAR PRADESH POWER CORPORATION LTD - UPPCL (ALL ZONES)",
                code: "18"
            }, {
                electricityProvider: "UPCL",
                area: "UTTARAKHAND",
                name: "UTTARAKHAND POWER CORPORATION LTD",
                code: "19"
            }, {
                electricityProvider: "CESC",
                area: "WEST BENGAL",
                name: "CALCUTTA ELECTRIC SUPPLY CORPORATION",
                code: "21"
            }, {
                electricityProvider: "WBSEDCL",
                area: "WEST BENGAL",
                name: "WEST BENGAL STATE ELECTRICITY DISTRIBUTION COMPANY LTD",
                code: "20"
            }],
            i = ["GESCOM", "MESCOM", "CESCOM", "BESCOM_NON_RAPDRP", "BESCOM", "MAHAVITRAN", "BSES_DL", "APSPDCL", "TATA_MUMBAI", "ORISSA", "MPEZ", "NBPDCL", "CESC", "CH_ELEC", "DGVCL", "SBPDCL", "CSPDCL", "DNH", "TATA_DL", "UGVCL", "MGVCL", "PGVCL", "UHBVN", "UPCL", "MPCZ", "HESCOM", "MUNCIPAL_DL", "APEPDCL", "ORISSA_CENTRAL", "KSEB", "TSSPDCL", "TNEB", "APDCL", "DHBVN", "UPAY_GOA", "GOA_ELEC", "MPWZ", "RELIANCE_MH", "PSPCL", "SIKKIM", "NAGALAND", "WBSEDCL"];
        return {
            getElectricityObject: function() {
                return t.filter(function(e) {
                    return i.includes(e.electricityProvider) ? !0 : !1
                })
            }
        }
    }
    angular.module("signzySandbox").service("electricityFactory", e), e.$inject = ["$http", "$timeout"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c, u) {
        a.loading = !1, a.data = {
            consumerNo: "",
            electricityProvider: "",
            installationNumber: "",
            mobileNo: ""
        }, a.electricityObject = u.getElectricityObject(), console.log(a.electricityObject);
        a.search = function() {
            delete a.data.error, a.loading = !0, a.wrongInput = !1;
            var e = {
                essentials: {
                    consumerNo: a.data.consumerNo,
                    electricityProvider: a.data.electricityProvider,
                    installationNumber: a.data.installationNumber,
                    mobileNo: a.data.mobileNo
                }
            };
            c.createPlexus("electricitybills", e).then(function(e) {
                console.log("plexusObj", e), a.data.electricityResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.electricityResponse, a.data.error = e, console.log("plexus error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("ElectricityController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv", "electricityFactory"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        a.loading = !1;
        a.data = {
            name: "",
            registeredAddress: ""
        }, a.search = function() {
            delete a.data.error, a.loading = !0, a.wrongInput = !1;
            var e = {
                essentials: {
                    name: a.data.name,
                    registeredAddress: a.data.registeredAddress
                }
            };
            c.createPlexus("activeaddresses", e).then(function(e) {
                console.log("plexusObj", e), a.data.activeAddressResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.activeAddressResponse, a.data.error = e, console.log("plexus error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("activeAddressController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        a.loading = !1, a.wrongInput = !1;
        a.data = {
            converter_files: [],
            bank: "",
            quality: "MEDIUM"
        }, a.banks = [{
            id: 1,
            name: "SBI"
        }], a.fileUpload = function(e, t) {
            n.upload({
                url: r.getURLs().persist.upload,
                data: {
                    file: e,
                    ttl: "3 years"
                }
            }).then(function(e) {
                console.log("COnverter Uploaded", e), a.data.converter_files[t] = e.data.file.directURL
            }, function(e) {
                i.debug("File submitted, starting worker call", a.data.converter_files)
            })
        }, a.fileUploadForVideo = function(e, t) {
            s.File.upload(e, "", 91457280).then(function(e) {
                console.log("Forgery File Uploaded", e), a.data.converter_files[t] = e.directURL
            }, function() {
                i.debug("File submitted, starting worker call", a.data.videoUrl)
            })
        }, a.inputsFields = [
            ["", ""]
        ], a.reorient = function() {
            delete a.data.error, a.loading = !0, a.wrongInput = !1;
            var e = {
                task: "reOrientId",
                essentials: {
                    url: a.data.converter_files[0],
                    ttl: ""
                }
            };
            console.log("inputData", e), c.createPlexus("utils", e).then(function(e) {
                console.log("plexusObj", e), a.data.converterData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.converterData, a.data.error = e, console.log("plexus error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("UtilsController", e), e.$inject = ["$state", "$scope", "$http", "$log", "Upload", "uploadSrv", "URLService", "$cookies", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c, u, p, g) {
        e.patron = {
            username: "",
            password: ""
        }, l.$state = d, e.state = d, e.stateParams = c, e.toState = {}, l.$stateParams = c, e.grantSrvLocal = p, e.loading = !1, e.loginError = !1, e.patronObj = {}, e.showNav = !1, l.$on("$stateChangeSuccess", function(a, t, i, n, s) {
            window.scroll(0, 0), e.toState = t, "/dashboard" == o.path() ? e.containers = "" : e.containers = "uk-container-small"
        }), e.checkGrants = function() {
            p.grant.handleGrants(e.toState.name).then(function(a) {
                var t = p.grant.checkGrants(a, e.patronObj);
                t || d.go("home")
            })
        }, e.checkCookie = function() {
            var a = r.get("accessToken");
            a ? (e.showNav = !0, e.patronObj = JSON.parse(localStorage.getItem("patron"))) : e.showNav = !1
        }, e.checkCookie(), e.dashboardUrl = n.getURLs().dashboard, e.esignLogin = function() {
            console.log("ASas", n.getURLs().esign.login), i.post(n.getURLs().esign.login, e.patron, {
                headers: {
                    "Content-Type": "application/json"
                }
            }).then(function(e) {
                t.debug("response", e), r.put("esignAccessToken", e.data.id), r.put("esignUserId", e.data.userId)
            }, function(e) {
                t.debug("error", e)
            })
        }, e.ekycLogin = function() {
            i.post(n.getURLs().ekyc.login, e.patron, {
                headers: {
                    "Content-Type": "application/json"
                }
            }).then(function(e) {
                t.debug("response", e), r.put("ekycAccessToken", e.data.id), r.put("ekycUserId", e.data.userId)
            }, function(e) {
                t.debug("error", e)
            })
        }, e.patronLogin = function() {
            if (t.debug("$scope.patron", e.patron), angular.isDefined(e.patron.username) && "" != e.patron.username && angular.isDefined(e.patron.username) && "" != e.patron.username) {
                localStorage.clear(), e.loading = !0;
                var o = a.defer();
                return t.debug("asasasasas", e.patron), i.post(n.getURLs().patron + "login", e.patron, {
                    headers: {
                        "Content-Type": "application/json"
                    }
                }).then(function(a) {
                    t.debug("response", a),
                        e.getGrants(a.data), r.put("username", e.patron.username), s.getAllData(e.patron.username), s.getWeeklyData(a.data.userId), s.getMonthData(a.data.userId)
                }, function(a) {
                    e.loading = !1, e.loginError = !0, e.showNav = !1, notie.alert({
                        type: "error",
                        text: "Login Failed!"
                    }), t.debug("Failed to login:", a)
                }), o.promise
            }
        }, e.patronLogout = function() {
            e.loading = !0, localStorage.clear();
            var t = a.defer(),
                s = r.get("accessToken");
            return i.post(n.getURLs().patron + "logout?access_token=" + s, {
                headers: {
                    "Content-Type": "application/json",
                    Authorization: r.get("access_token")
                }
            }).then(function(a) {
                r.remove("accessToken"), r.remove("userId"), r.remove("username"), r.remove("patron"), r.remove("esignAccessToken"), r.remove("esignUserId"), r.remove("ekycAccessToken"), r.remove("ekycUserId"), r.remove("ekycAccessToken"), r.remove("ekycUserId"), r.remove("patron"), localStorage.clear(), e.showNav = !1, u.location.href = "/"
            }, function(a) {
                e.showNav = !1
            }), t.promise
        }, e.getGrants = function(a) {
            var s = {
                method: "GET",
                url: n.getURLs().patron + a.userId,
                headers: {
                    "Content-Type": "application/json",
                    Authorization: a.id
                },
                data: {
                    test: "test"
                }
            };
            i(s).then(function(i) {
                var n = i.data;
                e.patronObj = n, n.viewGrants.indexOf("test") > -1 ? (t.debug("asasas"), r.put("accessToken", a.id), r.put("userId", a.userId), e.showNav = !0, r.putObject("patron", n), localStorage.setItem("patron", JSON.stringify(n)), e.esignLogin()) : (e.loading = !1, r.remove("accessToken"), r.remove("userId"), r.remove("patron"), r.remove("esignAccessToken"), r.remove("esignUserId"), r.remove("patron"), localStorage.clear(), notie.alert({
                    type: "error",
                    text: "You do not have access for sandbox.Please contact for sales for further support!",
                    transitionDuration: 5.3
                }), e.patron.username = "", e.patron.password = ""), t.debug("data", a)
            }, function(e) {
                t.debug("Failed to get Grant list:", e), promise.reject(e.data)
            })
        }, e.toggleNav = function(e) {
            $("#" + e).is(":visible") ? $("#" + e).slideUp("normal") : $("#" + e).slideDown("normal")
        }, e.dropNav = function() {
            $("#userNav").toggle()
        }
    }
    angular.module("signzySandbox").controller("BodyController", e), e.$inject = ["$scope", "$q", "$log", "$http", "URLService", "dashboardSrv", "$cookies", "$location", "$rootScope", "$state", "$stateParams", "$window", "grantSrv", "$timeout"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c, u) {
        a.loading = !1, a.wrongInput = !1;
        a.states = d.getStates(), a.enquiryReasons = d.getTypes(), a.geoFencingCountries = u.getCountryData(), a.data = {
            ip: "",
            mobileNumber: "",
            dataBreach: {},
            ezmatch: {
                merchantInformation: {
                    acquirerId: "",
                    merchant: {
                        name: "",
                        address: {
                            line1: "",
                            city: "",
                            countrySubdivision: "",
                            postalCode: "",
                            country: ""
                        },
                        principal: [{
                            firstName: "",
                            lastName: "",
                            phoneNumber: "",
                            address: {
                                line1: "",
                                city: "",
                                countrySubdivision: "",
                                postalCode: "",
                                country: ""
                            }
                        }],
                        searchCriteria: {
                            searchAll: "Y",
                            minPossibleMatchCount: "1"
                        }
                    }
                }
            },
            consumerBureau: {
                application: {
                    enquiryReason: d.getTypes()[1].id,
                    amountFinanced: "",
                    durationOfAgreement: ""
                },
                applicant: {
                    lastName: "",
                    firstName: "",
                    middleName: "",
                    gender: "",
                    panNumber: "",
                    passportNumber: "",
                    voterIdNumber: "",
                    dateOfBirth: "",
                    mobilePhone: ""
                },
                address: {
                    flatNoPlotNoHouseNo: "",
                    bldgNoSocietyName: "",
                    roadNoNameAreaLocality: "",
                    city: "",
                    landmark: "",
                    state: a.states[0].id,
                    pinCode: ""
                }
            },
            geoFencing: {
                ip: "",
                country: "",
                state: ""
            }
        }, a.selectState = function(e) {
            a.geoFencingStateData = u.getStateData()[e], console.log("state data is ", a.stateData)
        }, a.setDefaultEzmatch = function() {
            a.data.ezmatch = d.getSample()
        }, a.mobiSearch = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "mobiScore",
                essentials: {
                    mobileNumber: a.data.mobileNumber
                }
            };
            c.createPlexus("riskscores", e).then(function(e) {
                console.log("plexusObj", e), a.data.riskData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.riskData, a.data.error = e, console.log("identity error", e)
            })
        }, a.consumerBureauSearch = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "consumerBureau",
                essentials: a.data.consumerBureau
            };
            c.createPlexus("riskscores", e).then(function(e) {
                console.log("plexusObj", e), a.data.consumerBureauData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.consumerBureauData, a.data.error = e, console.log("identity error", e)
            })
        }, a.ezmatchSearch = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "ezmatch",
                essentials: a.data.ezmatch
            };
            c.createPlexus("riskscores", e).then(function(e) {
                console.log("plexusObj", e), a.data.ezmatchData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.ezmatchData, a.data.error = e, console.log("identity error", e)
            })
        }, a.ipSearch = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "ipQuality",
                essentials: {
                    ip: a.data.ip
                }
            };
            c.createPlexus("riskscores", e).then(function(e) {
                console.log("plexusObj", e), a.data.ipData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.ipData, a.data.error = e, console.log("identity error", e)
            })
        }, a.geoFencing = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "geoFencing",
                essentials: {
                    ip: a.data.geoFencing.ip,
                    country: a.data.geoFencing.country,
                    state: Object.keys(u.getStateData()).indexOf(a.data.geoFencing.country) > -1 ? a.data.geoFencing.state : ""
                }
            };
            console.log("inpuda is is ", e), c.createPlexus("riskscores", e).then(function(e) {
                console.log("plexusObj", e), a.data.geoFencingData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.geoFencingData, a.data.error = e, console.log("plexus error", e)
            })
        }, a.dataBreach = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "dataBreach",
                essentials: a.data.dataBreach
            };
            console.log("inpuda is is ", e), c.createPlexus("riskscores", e).then(function(e) {
                console.log("plexusObj", e), a.data.dataBreachResp = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.dataBreachResp, a.data.error = e, console.log("plexus error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("RiskScoreController", e), e.$inject = ["$state", "$scope", "$http", "$log", "Upload", "URLService", "$cookies", "$timeout", "grantSrv", "ezmatchFactory", "httpSrv", "geoFencingFactory"]
}(),
function() {
    "use strict";

    function e(e, a) {
        var t = [{
                name: "ANDORRA",
                value: "AD"
            }, {
                name: "UNITED ARAB EMIRATES",
                value: "AE"
            }, {
                name: "AFGHANISTAN",
                value: "AF"
            }, {
                name: "ANTIGUA AND BARBUDA",
                value: "AG"
            }, {
                name: "ANGUILLA",
                value: "AI"
            }, {
                name: "ALBANIA",
                value: "AL"
            }, {
                name: "ARMENIA",
                value: "AM"
            }, {
                name: "NETHERLANDS ANTILLES",
                value: "AN"
            }, {
                name: "ANGOLA",
                value: "AO"
            }, {
                name: "ANTARCTICA",
                value: "AQ"
            }, {
                name: "ARGENTINA",
                value: "AR"
            }, {
                name: "AMERICAN SAMOA",
                value: "AS"
            }, {
                name: "AUSTRIA",
                value: "AT"
            }, {
                name: "AUSTRALIA",
                value: "AU"
            }, {
                name: "ARUBA",
                value: "AW"
            }, {
                name: "AZERBAIJAN",
                value: "AZ"
            }, {
                name: "BOSNIA AND HERZEGOVINA",
                value: "BA"
            }, {
                name: "BARBADOS",
                value: "BB"
            }, {
                name: "BANGLADESH",
                value: "BD"
            }, {
                name: "BELGIUM",
                value: "BE"
            }, {
                name: "BURKINA FASO",
                value: "BF"
            }, {
                name: "BULGARIA",
                value: "BG"
            }, {
                name: "BAHRAIN",
                value: "BH"
            }, {
                name: "BURUNDI",
                value: "BI"
            }, {
                name: "BENIN",
                value: "BJ"
            }, {
                name: "SAINT BARTHELEMY",
                value: "BL"
            }, {
                name: "BERMUDA",
                value: "BM"
            }, {
                name: "BRUNEI DARUSSALAM",
                value: "BN"
            }, {
                name: "BOLIVIA",
                value: "BO"
            }, {
                name: "BRAZIL",
                value: "BR"
            }, {
                name: "BAHAMAS",
                value: "BS"
            }, {
                name: "BHUTAN",
                value: "BT"
            }, {
                name: "BOTSWANA",
                value: "BW"
            }, {
                name: "BELARUS",
                value: "BY"
            }, {
                name: "BELIZE",
                value: "BZ"
            }, {
                name: "CANADA",
                value: "CA"
            }, {
                name: "COCOS (KEELING) ISLANDS",
                value: "CC"
            }, {
                name: "CONGO, THE DEMOCRATIC REPUBLIC OF THE",
                value: "CD"
            }, {
                name: "CENTRAL AFRICAN REPUBLIC",
                value: "CF"
            }, {
                name: "CONGO",
                value: "CG"
            }, {
                name: "SWITZERLAND",
                value: "CH"
            }, {
                name: "COTE D IVOIRE",
                value: "CI"
            }, {
                name: "COOK ISLANDS",
                value: "CK"
            }, {
                name: "CHILE",
                value: "CL"
            }, {
                name: "CAMEROON",
                value: "CM"
            }, {
                name: "CHINA",
                value: "CN"
            }, {
                name: "COLOMBIA",
                value: "CO"
            }, {
                name: "COSTA RICA",
                value: "CR"
            }, {
                name: "CUBA",
                value: "CU"
            }, {
                name: "CAPE VERDE",
                value: "CV"
            }, {
                name: "CHRISTMAS ISLAND",
                value: "CX"
            }, {
                name: "CYPRUS",
                value: "CY"
            }, {
                name: "CZECH REPUBLIC",
                value: "CZ"
            }, {
                name: "GERMANY",
                value: "DE"
            }, {
                name: "DJIBOUTI",
                value: "DJ"
            }, {
                name: "DENMARK",
                value: "DK"
            }, {
                name: "DOMINICA",
                value: "DM"
            }, {
                name: "DOMINICAN REPUBLIC",
                value: "DO"
            }, {
                name: "ALGERIA",
                value: "DZ"
            }, {
                name: "ECUADOR",
                value: "EC"
            }, {
                name: "ESTONIA",
                value: "EE"
            }, {
                name: "EGYPT",
                value: "EG"
            }, {
                name: "ERITREA",
                value: "ER"
            }, {
                name: "SPAIN",
                value: "ES"
            }, {
                name: "ETHIOPIA",
                value: "ET"
            }, {
                name: "FINLAND",
                value: "FI"
            }, {
                name: "FIJI",
                value: "FJ"
            }, {
                name: "FALKLAND ISLANDS (MALVINAS)",
                value: "FK"
            }, {
                name: "MICRONESIA, FEDERATED STATES OF",
                value: "FM"
            }, {
                name: "FAROE ISLANDS",
                value: "FO"
            }, {
                name: "FRANCE",
                value: "FR"
            }, {
                name: "GABON",
                value: "GA"
            }, {
                name: "UNITED KINGDOM",
                value: "GB"
            }, {
                name: "GRENADA",
                value: "GD"
            }, {
                name: "GEORGIA",
                value: "GE"
            }, {
                name: "GHANA",
                value: "GH"
            }, {
                name: "GIBRALTAR",
                value: "GI"
            }, {
                name: "GREENLAND",
                value: "GL"
            }, {
                name: "GAMBIA",
                value: "GM"
            }, {
                name: "GUINEA",
                value: "GN"
            }, {
                name: "EQUATORIAL GUINEA",
                value: "GQ"
            }, {
                name: "GREECE",
                value: "GR"
            }, {
                name: "GUATEMALA",
                value: "GT"
            }, {
                name: "GUAM",
                value: "GU"
            }, {
                name: "GUINEA-BISSAU",
                value: "GW"
            }, {
                name: "GUYANA",
                value: "GY"
            }, {
                name: "HONG KONG",
                value: "HK"
            }, {
                name: "HONDURAS",
                value: "HN"
            }, {
                name: "CROATIA",
                value: "HR"
            }, {
                name: "HAITI",
                value: "HT"
            }, {
                name: "HUNGARY",
                value: "HU"
            }, {
                name: "INDONESIA",
                value: "ID"
            }, {
                name: "IRELAND",
                value: "IE"
            }, {
                name: "ISRAEL",
                value: "IL"
            }, {
                name: "ISLE OF MAN",
                value: "IM"
            }, {
                name: "INDIA",
                value: "IN"
            }, {
                name: "IRAQ",
                value: "IQ"
            }, {
                name: "IRAN, ISLAMIC REPUBLIC OF",
                value: "IR"
            }, {
                name: "ICELAND",
                value: "IS"
            }, {
                name: "ITALY",
                value: "IT"
            }, {
                name: "JAMAICA",
                value: "JM"
            }, {
                name: "JORDAN",
                value: "JO"
            }, {
                name: "JAPAN",
                value: "JP"
            }, {
                name: "KENYA",
                value: "KE"
            }, {
                name: "KYRGYZSTAN",
                value: "KG"
            }, {
                name: "CAMBODIA",
                value: "KH"
            }, {
                name: "KIRIBATI",
                value: "KI"
            }, {
                name: "COMOROS",
                value: "KM"
            }, {
                name: "SAINT KITTS AND NEVIS",
                value: "KN"
            }, {
                name: "KOREA DEMOCRATIC PEOPLES REPUBLIC OF",
                value: "KP"
            }, {
                name: "KOREA REPUBLIC OF",
                value: "KR"
            }, {
                name: "KUWAIT",
                value: "KW"
            }, {
                name: "CAYMAN ISLANDS",
                value: "KY"
            }, {
                name: "KAZAKSTAN",
                value: "KZ"
            }, {
                name: "LAO PEOPLES DEMOCRATIC REPUBLIC",
                value: "LA"
            }, {
                name: "LEBANON",
                value: "LB"
            }, {
                name: "SAINT LUCIA",
                value: "LC"
            }, {
                name: "LIECHTENSTEIN",
                value: "LI"
            }, {
                name: "SRI LANKA",
                value: "LK"
            }, {
                name: "LIBERIA",
                value: "LR"
            }, {
                name: "LESOTHO",
                value: "LS"
            }, {
                name: "LITHUANIA",
                value: "LT"
            }, {
                name: "LUXEMBOURG",
                value: "LU"
            }, {
                name: "LATVIA",
                value: "LV"
            }, {
                name: "LIBYAN ARAB JAMAHIRIYA",
                value: "LY"
            }, {
                name: "MOROCCO",
                value: "MA"
            }, {
                name: "MONACO",
                value: "MC"
            }, {
                name: "MOLDOVA, REPUBLIC OF",
                value: "MD"
            }, {
                name: "MONTENEGRO",
                value: "ME"
            }, {
                name: "SAINT MARTIN",
                value: "MF"
            }, {
                name: "MADAGASCAR",
                value: "MG"
            }, {
                name: "MARSHALL ISLANDS",
                value: "MH"
            }, {
                name: "MACEDONIA, THE FORMER YUGOSLAV REPUBLIC OF",
                value: "MK"
            }, {
                name: "MALI",
                value: "ML"
            }, {
                name: "MYANMAR",
                value: "MM"
            }, {
                name: "MONGOLIA",
                value: "MN"
            }, {
                name: "MACAU",
                value: "MO"
            }, {
                name: "NORTHERN MARIANA ISLANDS",
                value: "MP"
            }, {
                name: "MAURITANIA",
                value: "MR"
            }, {
                name: "MONTSERRAT",
                value: "MS"
            }, {
                name: "MALTA",
                value: "MT"
            }, {
                name: "MAURITIUS",
                value: "MU"
            }, {
                name: "MALDIVES",
                value: "MV"
            }, {
                name: "MALAWI",
                value: "MW"
            }, {
                name: "MEXICO",
                value: "MX"
            }, {
                name: "MALAYSIA",
                value: "MY"
            }, {
                name: "MOZAMBIQUE",
                value: "MZ"
            }, {
                name: "NAMIBIA",
                value: "NA"
            }, {
                name: "NEW CALEDONIA",
                value: "NC"
            }, {
                name: "NIGER",
                value: "NE"
            }, {
                name: "NIGERIA",
                value: "NG"
            }, {
                name: "NICARAGUA",
                value: "NI"
            }, {
                name: "NETHERLANDS",
                value: "NL"
            }, {
                name: "NORWAY",
                value: "NO"
            }, {
                name: "NEPAL",
                value: "NP"
            }, {
                name: "NAURU",
                value: "NR"
            }, {
                name: "NIUE",
                value: "NU"
            }, {
                name: "NEW ZEALAND",
                value: "NZ"
            }, {
                name: "OMAN",
                value: "OM"
            }, {
                name: "PANAMA",
                value: "PA"
            }, {
                name: "PERU",
                value: "PE"
            }, {
                name: "FRENCH POLYNESIA",
                value: "PF"
            }, {
                name: "PAPUA NEW GUINEA",
                value: "PG"
            }, {
                name: "PHILIPPINES",
                value: "PH"
            }, {
                name: "PAKISTAN",
                value: "PK"
            }, {
                name: "POLAND",
                value: "PL"
            }, {
                name: "SAINT PIERRE AND MIQUELON",
                value: "PM"
            }, {
                name: "PITCAIRN",
                value: "PN"
            }, {
                name: "PUERTO RICO",
                value: "PR"
            }, {
                name: "PORTUGAL",
                value: "PT"
            }, {
                name: "PALAU",
                value: "PW"
            }, {
                name: "PARAGUAY",
                value: "PY"
            }, {
                name: "QATAR",
                value: "QA"
            }, {
                name: "ROMANIA",
                value: "RO"
            }, {
                name: "SERBIA",
                value: "RS"
            }, {
                name: "RUSSIAN FEDERATION",
                value: "RU"
            }, {
                name: "RWANDA",
                value: "RW"
            }, {
                name: "SAUDI ARABIA",
                value: "SA"
            }, {
                name: "SOLOMON ISLANDS",
                value: "SB"
            }, {
                name: "SEYCHELLES",
                value: "SC"
            }, {
                name: "SUDAN",
                value: "SD"
            }, {
                name: "SWEDEN",
                value: "SE"
            }, {
                name: "SINGAPORE",
                value: "SG"
            }, {
                name: "SAINT HELENA",
                value: "SH"
            }, {
                name: "SLOVENIA",
                value: "SI"
            }, {
                name: "SLOVAKIA",
                value: "SK"
            }, {
                name: "SIERRA LEONE",
                value: "SL"
            }, {
                name: "SAN MARINO",
                value: "SM"
            }, {
                name: "SENEGAL",
                value: "SN"
            }, {
                name: "SOMALIA",
                value: "SO"
            }, {
                name: "SURINAME",
                value: "SR"
            }, {
                name: "SAO TOME AND PRINCIPE",
                value: "ST"
            }, {
                name: "EL SALVADOR",
                value: "SV"
            }, {
                name: "SYRIAN ARAB REPUBLIC",
                value: "SY"
            }, {
                name: "SWAZILAND",
                value: "SZ"
            }, {
                name: "TURKS AND CAICOS ISLANDS",
                value: "TC"
            }, {
                name: "CHAD",
                value: "TD"
            }, {
                name: "TOGO",
                value: "TG"
            }, {
                name: "THAILAND",
                value: "TH"
            }, {
                name: "TAJIKISTAN",
                value: "TJ"
            }, {
                name: "TOKELAU",
                value: "TK"
            }, {
                name: "TIMOR-LESTE",
                value: "TL"
            }, {
                name: "TURKMENISTAN",
                value: "TM"
            }, {
                name: "TUNISIA",
                value: "TN"
            }, {
                name: "TONGA",
                value: "TO"
            }, {
                name: "TURKEY",
                value: "TR"
            }, {
                name: "TRINIDAD AND TOBAGO",
                value: "TT"
            }, {
                name: "TUVALU",
                value: "TV"
            }, {
                name: "TAIWAN, PROVINCE OF CHINA",
                value: "TW"
            }, {
                name: "TANZANIA, UNITED REPUBLIC OF",
                value: "TZ"
            }, {
                name: "UKRAINE",
                value: "UA"
            }, {
                name: "UGANDA",
                value: "UG"
            }, {
                name: "UNITED STATES",
                value: "US"
            }, {
                name: "URUGUAY",
                value: "UY"
            }, {
                name: "UZBEKISTAN",
                value: "UZ"
            }, {
                name: "HOLY SEE (VATICAN CITY STATE)",
                value: "VA"
            }, {
                name: "SAINT VINCENT AND THE GRENADINES",
                value: "VC"
            }, {
                name: "VENEZUELA",
                value: "VE"
            }, {
                name: "VIRGIN ISLANDS, BRITISH",
                value: "VG"
            }, {
                name: "VIRGIN ISLANDS, U.S.",
                value: "VI"
            }, {
                name: "VIET NAM",
                value: "VN"
            }, {
                name: "VANUATU",
                value: "VU"
            }, {
                name: "WALLIS AND FUTUNA",
                value: "WF"
            }, {
                name: "SAMOA",
                value: "WS"
            }, {
                name: "KOSOVO",
                value: "XK"
            }, {
                name: "YEMEN",
                value: "YE"
            }, {
                name: "MAYOTTE",
                value: "YT"
            }, {
                name: "SOUTH AFRICA",
                value: "ZA"
            }, {
                name: "ZAMBIA",
                value: "ZM"
            }, {
                name: "ZIMBABWE",
                value: "ZW"
            }],
            i = {
                IN: [{
                    code: "AN",
                    name: "Andaman and Nicobar Islands"
                }, {
                    code: "AD",
                    name: "Andhra Pradesh"
                }, {
                    code: "AR",
                    name: "Arunachal Pradesh"
                }, {
                    code: "AS",
                    name: "Assam"
                }, {
                    code: "BR",
                    name: "Bihar"
                }, {
                    code: "CH",
                    name: "Chandigarh"
                }, {
                    code: "CG",
                    name: "Chattisgarh"
                }, {
                    code: "DN",
                    name: "Dadra and Nagar Haveli"
                }, {
                    code: "DD",
                    name: "Daman and Diu"
                }, {
                    code: "DL",
                    name: "Delhi"
                }, {
                    code: "GA",
                    name: "Goa"
                }, {
                    code: "GJ",
                    name: "Gujarat"
                }, {
                    code: "HR",
                    name: "Haryana"
                }, {
                    code: "HP",
                    name: "Himachal Pradesh"
                }, {
                    code: "JK",
                    name: "Jammu and Kashmir"
                }, {
                    code: "LA",
                    name: "Ladakh"
                }, {
                    code: "JH",
                    name: "Jharkhand"
                }, {
                    code: "KA",
                    name: "Karnataka"
                }, {
                    code: "KL",
                    name: "Kerala"
                }, {
                    code: "LD",
                    name: "Lakshadweep Islands"
                }, {
                    code: "MP",
                    name: "Madhya Pradesh"
                }, {
                    code: "MH",
                    name: "Maharashtra"
                }, {
                    code: "MN",
                    name: "Manipur"
                }, {
                    code: "ML",
                    name: "Meghalaya"
                }, {
                    code: "MZ",
                    name: "Mizoram"
                }, {
                    code: "NL",
                    name: "Nagaland"
                }, {
                    code: "OD",
                    name: "Odisha"
                }, {
                    code: "PY",
                    name: "Pondicherry"
                }, {
                    code: "PB",
                    name: "Punjab"
                }, {
                    code: "RJ",
                    name: "Rajasthan"
                }, {
                    code: "SK",
                    name: "Sikkim"
                }, {
                    code: "TN",
                    name: "Tamil Nadu"
                }, {
                    code: "TS",
                    name: "Telangana"
                }, {
                    code: "TR",
                    name: "Tripura"
                }, {
                    code: "UP",
                    name: "Uttar Pradesh"
                }, {
                    code: "UK",
                    name: "Uttarakhand"
                }, {
                    code: "WB",
                    name: "West Bengal"
                }],
                US: [{
                    code: "AL",
                    name: "Alabama"
                }, {
                    code: "AZ",
                    name: "Arizona"
                }, {
                    code: "AR",
                    name: "Arkansas"
                }, {
                    code: "CA",
                    name: "California"
                }, {
                    code: "CO",
                    name: "Colorado"
                }, {
                    code: "CT",
                    name: "Connecticut"
                }, {
                    code: "DE",
                    name: "Delaware"
                }, {
                    code: "FL",
                    name: "Florida"
                }, {
                    code: "GA",
                    name: "Georgia"
                }, {
                    code: "ID",
                    name: "Idaho"
                }, {
                    code: "IL",
                    name: "Illinois"
                }, {
                    code: "IN",
                    name: "Indiana"
                }, {
                    code: "IA",
                    name: "Iowa"
                }, {
                    code: "KS",
                    name: "Kansas"
                }, {
                    code: "KY",
                    name: "Kentucky"
                }, {
                    code: "LA",
                    name: "Louisiana"
                }, {
                    code: "ME",
                    name: "Maine"
                }, {
                    code: "MD",
                    name: "Maryland"
                }, {
                    code: "MA",
                    name: "Massachusetts"
                }, {
                    code: "MI",
                    name: "Michigan"
                }, {
                    code: "MN",
                    name: "Minnesota"
                }, {
                    code: "MS",
                    name: "Mississippi"
                }, {
                    code: "MO",
                    name: "Missouri"
                }, {
                    code: "MT",
                    name: "Montana"
                }, {
                    code: "NE",
                    name: "Nebraska"
                }, {
                    code: "NV",
                    name: "Nevada"
                }, {
                    code: "NH",
                    name: "New Hampshire"
                }, {
                    code: "NJ",
                    name: "New Jersey"
                }, {
                    code: "NM",
                    name: "New Mexico"
                }, {
                    code: "NY",
                    name: "New York"
                }, {
                    code: "NC",
                    name: "North Carolina"
                }, {
                    code: "ND",
                    name: "North Dakota"
                }, {
                    code: "OH",
                    name: "Ohio"
                }, {
                    code: "OK",
                    name: "Oklahoma"
                }, {
                    code: "OR",
                    name: "Oregon"
                }, {
                    code: "PA",
                    name: "Pennsylvania"
                }, {
                    code: "RI",
                    name: "Rhode Island"
                }, {
                    code: "SC",
                    name: "South Carolina"
                }, {
                    code: "SD",
                    name: "South Dakota"
                }, {
                    code: "TN",
                    name: "Tennessee"
                }, {
                    code: "TX",
                    name: "Texas"
                }, {
                    code: "UT",
                    name: "Utah"
                }, {
                    code: "VT",
                    name: "Vermont"
                }, {
                    code: "VA",
                    name: "Virginia"
                }, {
                    code: "WA",
                    name: "Washington"
                }, {
                    code: "WV",
                    name: "West Virginia"
                }, {
                    code: "WI",
                    name: "Wisconsin"
                }, {
                    code: "WY",
                    name: "Wyoming"
                }]
            };
        return {
            getCountryData: function() {
                return t
            },
            getStateData: function() {
                return i
            }
        }
    }
    angular.module("signzySandbox").service("geoFencingFactory", e), e.$inject = ["$http", "$timeout"]
}(),
function() {
    "use strict";

    function e(e, a) {
        var t = {
                merchantInformation: {
                    merchant: {
                        name: "Roberts Great Business",
                        address: {
                            line1: "123 Main St",
                            city: "Denver",
                            countrySubdivision: "CO",
                            postalCode: "80204",
                            country: "USA"
                        },
                        principal: [{
                            firstName: "Philip",
                            lastName: "Smith",
                            address: {
                                line1: "66 South Logan",
                                city: "Denver",
                                countrySubdivision: "CO",
                                postalCode: "80101",
                                country: "USA"
                            }
                        }],
                        searchCriteria: {
                            searchAll: "Y",
                            minPossibleMatchCount: "1"
                        }
                    }
                }
            },
            i = [{
                id: "01",
                name: "JAMMU and KASHMIR"
            }, {
                id: "02",
                name: "HIMACHAL PRADESH"
            }, {
                id: "03",
                name: "PUNJAB"
            }, {
                id: "04",
                name: "CHANDIGARH"
            }, {
                id: "05",
                name: "UTTRANCHAL"
            }, {
                id: "06",
                name: "HARAYANA"
            }, {
                id: "07",
                name: "DELHI"
            }, {
                id: "08",
                name: "RAJASTHAN"
            }, {
                id: "09",
                name: "UTTAR PRADESH"
            }, {
                id: "10",
                name: "BIHAR"
            }, {
                id: "11",
                name: "SIKKIM"
            }, {
                id: "12",
                name: "ARUNACHAL PRADESH"
            }, {
                id: "13",
                name: "NAGALAND"
            }, {
                id: "14",
                name: "MANIPUR"
            }, {
                id: "15",
                name: "MIZORAM"
            }, {
                id: "16",
                name: "TRIPURA"
            }, {
                id: "17",
                name: "MEGHALAYA"
            }, {
                id: "18",
                name: "ASSAM"
            }, {
                id: "19",
                name: "WEST BENGAL"
            }, {
                id: "20",
                name: "JHARKHAND"
            }, {
                id: "21",
                name: "ORRISA"
            }, {
                id: "22",
                name: "CHHATTISGARH"
            }, {
                id: "23",
                name: "MADHYA PRADESH"
            }, {
                id: "24",
                name: "GUJRAT"
            }, {
                id: "25",
                name: "DAMAN and DIU "
            }, {
                id: "26",
                name: "DADARA and NAGAR HAVELI"
            }, {
                id: "27",
                name: "MAHARASHTRA"
            }, {
                id: "28",
                name: "ANDHRA PRADESH"
            }, {
                id: "29",
                name: "KARNATAKA"
            }, {
                id: "30",
                name: "GOA"
            }, {
                id: "31",
                name: "LAKSHADWEEP"
            }, {
                id: "32",
                name: "KERALA"
            }, {
                id: "33",
                name: "TAMIL NADU"
            }, {
                id: "34",
                name: "PONDICHERRY"
            }, {
                id: "35",
                name: "ANDAMAN and NICOBAR ISLANDS "
            }],
            n = [{
                id: "01",
                name: "AGRICULTURE LOAN"
            }, {
                id: "02",
                name: "AUTO LOAN"
            }, {
                id: "03",
                name: "BUSINESS LOAN"
            }, {
                id: "04",
                name: "COMMERCIAL VEHICLE LOANS"
            }, {
                id: "05",
                name: "CONSTRUCTION EQUIPMENT LOAN"
            }, {
                id: "06",
                name: "CONSUMER LOAN"
            }, {
                id: "07",
                name: "CREDIT CARD"
            }, {
                id: "08",
                name: "EDUCATION LOAN"
            }, {
                id: "09",
                name: "LEASING"
            }, {
                id: "10",
                name: "LOAN AGAINST COLLATERAL"
            }, {
                id: "11",
                name: "MICROFINANCE"
            }, {
                id: "12",
                name: "NON-FUNDED CREDIT FACILITy"
            }, {
                id: "13",
                name: "PERSONAL LOAN"
            }, {
                id: "14",
                name: "PROPERTY LOAN"
            }, {
                id: "15",
                name: "TELECOM"
            }, {
                id: "16",
                name: "TWO/THREE WHEELER LOAN"
            }, {
                id: "17",
                name: "WORKING CAPITAL LOAN"
            }, {
                id: "99",
                name: "OTHERS"
            }];
        return {
            getSample: function() {
                return t
            },
            getStates: function() {
                return i
            },
            getTypes: function() {
                return n
            }
        }
    }
    angular.module("signzySandbox").service("ezmatchFactory", e), e.$inject = ["$http", "$timeout"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        t.loading = !1, t.strongPassword = function(e) {
            return /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{12,}$/.test(e)
        }, t.resetPassword = function() {
            n.debug("$scope.patron", t.patron), t.loading = !0, n.debug("asasasasas", t.patron), i.post(r.getURLs().patron + "login", {
                username: o.get("username"),
                password: t.resetData.current
            }, {
                headers: {
                    "Content-Type": "application/json",
                    Authorization: o.get("access_token")
                }
            }).then(function(e) {
                n.debug("response", e), t.loading = !0, t.getGrants(e.data), i.put(r.getURLs().patron + o.get("userId"), {
                    password: t.resetData["new"]
                }, {
                    headers: {
                        "Content-Type": "application/json",
                        Authorization: o.get("accessToken")
                    }
                }).then(function(e) {
                    n.debug(e), notie.alert({
                        position: "bottom",
                        type: "success",
                        text: "Successfully changed password, please wait!"
                    }), l(function() {
                        //window.location.reload()
                    }, 2e3)
                }, function(e) {
                    n.debug("Can't change password", e), t.loading = !1, t.loginError = !0, t.showNav = !1, notie.alert({
                        position: "bottom",
                        type: "error",
                        text: "Could not change password!"
                    })
                })
            }, function(e) {
                n.debug("Login failed", e), t.loading = !1, t.loginError = !0, t.showNav = !1, notie.alert({
                    position: "bottom",
                    type: "error",
                    text: "Current password is wrong!"
                })
            })
        }
    }
    angular.module("signzySandbox").controller("ResetPasswordController", e), e.$inject = ["$state", "$q", "$scope", "$http", "$log", "Upload", "URLService", "$cookies", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        a.loading = !1;
        a.data = {
            url: ""
        }, a.fileUpload = function(e, t) {
            o.File.upload(a.data.url).then(function(e) {
                console.log("Passive Liveness File Uploaded", e), a.data.url = e.directURL
            }, function() {
                i.debug("File submitted, starting worker call")
            })
        }, a.runPassiveLiveness = function() {
            a.loading = !0, delete a.data.error;
            var e = {
                task: "checkLiveness",
                essentials: {
                    image: a.data.url
                }
            };
            c.createPlexus("passiveLiveness", e).then(function(e) {
                console.log("plexusObj", e), a.data.passiveLivenessData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.passiveLivenessData, a.data.error = e, console.log("passive Liveness error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("PassiveLivenessController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a) {
        var t = {
                loanNo: "testloanno12345",
                sanctionNo: "",
                regType: "individual",
                state: "DL",
                signerDetails: [{
                    participantName: "First Participant",
                    contactPersonName: "First Contact",
                    relatedToContract: "debtor",
                    email: "",
                    mobile: "",
                    pan: "",
                    dob: "09/11/1993",
                    legalConstitution: "residentIndividual",
                    partyType: "indianEntity",
                    ovdType: "",
                    ovdId: "",
                    signatureCoordinates: [{
                        pageNo: "1",
                        xCoordinate: "100",
                        yCoordinate: "400"
                    }]
                }],
                loanDetails: {
                    dateOfSanction: "10/10/2020",
                    emiAmount: "15000",
                    rateOfInterest: "6.5",
                    sanctionAmount: "1500000",
                    tenure: "10",
                    natureOfCredit: "financial",
                    isAccountClosed: "no",
                    fundType: "funded",
                    currencyOfSanction: "INR",
                    creditSubType: "creditFacility",
                    facilityName: "Test "
                },
                securityDetails: [{
                    descriptionOfSecurity: "ABCD",
                    assetType: "immovable",
                    typeOfCharge: "mortgage",
                    assetId: "002346721212"
                }],
                callbackUrl: "https://signzy.com",
                redirectUrl: "https://signzy.com",
                pdfUrl: "https://staging-persist.signzy.tech/api/files/3475322/download/b47677b57aa941f19f82e6c258841862339a18f4720b40859e03bad428cab3ca.pdf",
                files: ["https://staging-persist.signzy.tech/api/files/3475322/download/b47677b57aa941f19f82e6c258841862339a18f4720b40859e03bad428cab3ca.pdf"]
            },
            i = {
                loanNo: "testloanno12345",
                sanctionNo: "",
                regType: "individual",
                state: "DL",
                estampDetails: {
                    firstParty: "ABC BANK",
                    secondParty: "Jhon",
                    stampDutyAmount: "10",
                    considerationPrice: "200",
                    descriptionOfDocument: "PERSONAL LOAN",
                    stampDutyPaidBy: "ABC BANK",
                    articleCode: "1010"
                },
                signerDetails: [{
                    participantName: "First Participant",
                    contactPersonName: "First Contact",
                    relatedToContract: "debtor",
                    email: "",
                    mobile: "",
                    pan: "",
                    dob: "09/11/1993",
                    legalConstitution: "residentIndividual",
                    partyType: "indianEntity",
                    ovdType: "",
                    ovdId: "",
                    signatureCoordinates: [{
                        pageNo: "1",
                        xCoordinate: "100",
                        yCoordinate: "400"
                    }]
                }],
                loanDetails: {
                    dateOfSanction: "10/10/2020",
                    emiAmount: "15000",
                    rateOfInterest: "6.5",
                    sanctionAmount: "1500000",
                    tenure: "10",
                    natureOfCredit: "financial",
                    isAccountClosed: "no",
                    fundType: "funded",
                    currencyOfSanction: "INR",
                    creditSubType: "creditFacility",
                    facilityName: "Test "
                },
                securityDetails: [{
                    descriptionOfSecurity: "ABCD",
                    assetType: "immovable",
                    typeOfCharge: "mortgage",
                    assetId: "002346721212"
                }],
                callbackUrl: "https://signzy.com",
                redirectUrl: "https://signzy.com",
                pdfUrl: "https://staging-persist.signzy.tech/api/files/3475322/download/b47677b57aa941f19f82e6c258841862339a18f4720b40859e03bad428cab3ca.pdf",
                files: ["https://staging-persist.signzy.tech/api/files/3475322/download/b47677b57aa941f19f82e6c258841862339a18f4720b40859e03bad428cab3ca.pdf"]
            },
            n = [{
                stateName: "Andhra Pradesh",
                stateCode: "AP"
            }, {
                stateName: "Andaman and Nicobar Islands",
                stateCode: "AN"
            }, {
                stateName: "Arunachal Pradesh",
                stateCode: "AR"
            }, {
                stateName: "Assam",
                stateCode: "AS"
            }, {
                stateName: "Bihar",
                stateCode: "BR"
            }, {
                stateName: "Chandigarh",
                stateCode: "CH"
            }, {
                stateName: "Chhattisgarh",
                stateCode: "CG"
            }, {
                stateName: "Dadar and Nagar Haveli",
                stateCode: "DN"
            }, {
                stateName: "Daman and Diu",
                stateCode: "DD"
            }, {
                stateName: "Delhi",
                stateCode: "DL"
            }, {
                stateName: "Lakshadweep",
                stateCode: "LD"
            }, {
                stateName: "Puducherry",
                stateCode: "PY"
            }, {
                stateName: "Goa",
                stateCode: "GA"
            }, {
                stateName: "Gujarat",
                stateCode: "GJ"
            }, {
                stateName: "Haryana",
                stateCode: "HR"
            }, {
                stateName: "Himachal Pradesh",
                stateCode: "HP"
            }, {
                stateName: "Jammu and Kashmir",
                stateCode: "JK"
            }, {
                stateName: "Jharkhand",
                stateCode: "JH"
            }, {
                stateName: "Karnataka",
                stateCode: "KA"
            }, {
                stateName: "Kerala",
                stateCode: "KL"
            }, {
                stateName: "Madhya Pradesh",
                stateCode: "MP"
            }, {
                stateName: "Maharashtra",
                stateCode: "MH"
            }, {
                stateName: "Manipur",
                stateCode: "MN"
            }, {
                stateName: "Meghalaya",
                stateCode: "ML"
            }, {
                stateName: "Mizoram",
                stateCode: "MZ"
            }, {
                stateName: "Nagaland",
                stateCode: "NL"
            }, {
                stateName: "Odisha",
                stateCode: "OR"
            }, {
                stateName: "Punjab",
                stateCode: "PB"
            }, {
                stateName: "Rajasthan",
                stateCode: "RJ"
            }, {
                stateName: "Sikkim",
                stateCode: "SK"
            }, {
                stateName: "Tamil Nadu",
                stateCode: "TN"
            }, {
                stateName: "Telangana",
                stateCode: "TG"
            }, {
                stateName: "Tripura",
                stateCode: "TR"
            }, {
                stateName: "Uttar Pradesh",
                stateCode: "UP"
            }, {
                stateName: "Uttarakhand",
                stateCode: "UT"
            }, {
                stateName: "West Bengal",
                stateCode: "WB"
            }],
            s = {
                regType: {
                    individual: "Individual",
                    nonIndividual: "Non-Individual"
                },
                relatedToContract: {
                    creditor: "Creditor",
                    debtor: "Debtor",
                    guarantor: "Guarantor",
                    coObligant: "Co-Obligant",
                    securityProvider: "Security Provider",
                    assignee: "Assignee"
                },
                legalConstitution: {
                    residentIndividual: "Resident Individual",
                    publicLtd: "Public Ltd",
                    privateLtd: "Private Ltd",
                    llp: "LLP",
                    proprietorship: "Proprietorship",
                    partnership: "Partnership",
                    entityCreatedByStatute: "Entity Created by Statute",
                    Trust: "Trust",
                    huf: "HUF",
                    coOpSociety: "Co-op Society",
                    associationOfPersons: "Association of Persons",
                    government: "Government",
                    selfHelpGroup: "Self Help Group",
                    nonResident: "Non-Resident",
                    foreignCompany: "Foreign Company"
                },
                partyType: {
                    indianEntity: "Indian Entity",
                    residentIndividual: "Resident Individual",
                    foreignEntity: "Foreign Entity",
                    "nri/foreignIndividual": "NRI/Foreign Individual"
                },
                ovdType: {
                    "": "",
                    panNo: "Pan Number",
                    drivingLicense: "Driving License",
                    voterId: "Voter Id",
                    passport: "Passport",
                    others: "Others"
                },
                natureOfCredit: {
                    financial: "Financial",
                    operational: "Operational"
                },
                isAccountClosed: {
                    yes: "Yes",
                    no: "No",
                    assigned: "Assigned"
                },
                fundType: {
                    funded: "Funded",
                    nonFunded: "Non Funded"
                },
                creditSubType: {
                    creditFacility: "Credit Facility",
                    propertyBuyer: "Property buyer"
                },
                assetType: {
                    movable: "Movable",
                    immovable: "Immovable",
                    intangible: "Intangible",
                    notClassified: "Not Classified"
                },
                typeOfCharge: {
                    mortgage: "Mortgage",
                    hypothecation: "Hypothecation",
                    charge: "Charge",
                    assignment: "Assignment",
                    pledge: "Pledge",
                    lien: "Lien",
                    negativeLien: "Negative Lien",
                    guarantee: "Guarantee",
                    others: "Others",
                    notClassified: "Not Classified"
                },
                currencyOfSanction: {
                    INR: "INR",
                    USD: "USD"
                }
            };
        return {
            getESignDefaults: function() {
                return t
            },
            getEStampDefaults: function() {
                return i
            },
            getStateData: function() {
                return n
            },
            getMapping: function() {
                return s
            }
        }
    }
    angular.module("signzySandbox").service("neslFactory", e), e.$inject = ["$http", "$timeout"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c, u, p, g) {
        function m(e) {
            for (var a = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ", t = "", i = e; i > 0; --i) t += a[Math.floor(Math.random() * a.length)];
            return t
        }
        a.Object = {
            keys: Object.keys,
            entries: Object.entries,
            values: Object.values
        }, a.range = function(e) {
            for (var a = [], t = 0; e > t; t++) a.push(t);
            return a
        };
        var f = {
            signatureCoordinates: [{}]
        };
        a.data = {
            files: [],
            signerDetails: [f],
            securityDetails: []
        }, a.data.patronId = r.get("userId"), a.noOfSigners = 1, a.loading = !1, a.loading1 = !1;
        a.enableResult = !1, a.enableStart = !0, a.stateData = l.getStateData(), a.regTypeData = l.getMapping().regType, a.relatedToContractData = l.getMapping().relatedToContract, a.legalConstitutionData = l.getMapping().legalConstitution, a.partyTypeData = l.getMapping().partyType, a.ovdTypeData = l.getMapping().ovdType, a.natureOfCreditData = l.getMapping().natureOfCredit, a.isAccountClosedData = l.getMapping().isAccountClosed, a.fundTypeData = l.getMapping().fundType, a.currencyOfSanctionData = l.getMapping().currencyOfSanction, a.creditSubTypeData = l.getMapping().creditSubType, a.assetTypeData = l.getMapping().assetType, a.typeOfChargeData = l.getMapping().typeOfCharge, a.addSigner = function() {
            a.noOfSigners += 1, a.data.signerDetails.push(f)
        }, a.removeSigner = function(e) {
            a.noOfSigners -= 1, a.data.signerDetails.splice(e, 1)
        }, a.addSignature = function(e) {
            a.data.signerDetails[e].signatureCoordinates.push({})
        }, a.removeSignature = function(e, t) {
            a.data.signerDetails[e].signatureCoordinates.splice(t, 1)
        }, a.addSecurity = function() {
            a.data.securityDetails.push({})
        }, a.removeSecurity = function(e) {
            a.data.securityDetails.splice(e, 1)
        }, a.setDefaultEsign = function() {
            var e = l.getESignDefaults();
            for (var t in e) a.data[t] = e[t];
            a.data.loanNo = m(10), a.data.sanctionNo = m(10)
        }, a.setDefaultEstamp = function() {
            var e = l.getEStampDefaults();
            for (var t in e) a.data[t] = e[t];
            a.data.loanNo = m(10), a.data.sanctionNo = m(10)
        }, a.fileUpload = function(e, t) {
            o.File.upload(a.data.files[t]).then(function(e) {
                console.log("Forgery File Uploaded", e), a.data.files[t] = e.directURL
            }, function() {
                i.debug("File submitted, starting worker call", a.data.files)
            })
        }, a.startEsignTransaction = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error, a.data.pdfUrl = a.data.files[0];
            var e = {
                task: "esign",
                essentials: a.data
            };
            u.createPlexus("nesliframes", e).then(function(e) {
                console.log("Received Create URL Response:", e), a.data.token = e.result.token, a.data.patronId = e.patronId, p.open(e.result.neslUrl, "_blank"), a.loading = !1, a.data.neslResponse = e.result, a.data.neslResponse && (a.data.neslResponse.patronId = e.patronId), d(function() {
                    console.log("calling getData blocked"), a.enableStart = !1, a.enableResult = !0
                }, 3e4)
            }, function(e) {
                a.loading = !1, g.error("Request Limit Exceeded. Please contact sales for futher support")
            })
        }, a.startEStampTransaction = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error, a.data.pdfUrl = a.data.files[0];
            var e = {
                task: "estamp",
                essentials: a.data
            };
            u.createPlexus("nesliframes", e).then(function(e) {
                console.log("Received Create URL Response:", e), a.data.token = e.result.token, a.data.patronId = e.patronId, p.open(e.result.neslUrl, "_blank"), a.loading = !1, a.data.neslResponse = e.result, a.data.neslResponse && (a.data.neslResponse.patronId = e.patronId), d(function() {
                    console.log("calling getData blocked"), a.enableStart = !1, a.enableResult = !0
                }, 3e4)
            }, function(e) {
                a.loading = !1, g.error("Request Limit Exceeded. Please contact sales for futher support")
            })
        };
        a.getData = function() {
            a.loading1 = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "getData",
                essentials: {
                    token: a.data.token,
                    patronId: a.data.patronId
                }
            };
            u.createPlexus("nesliframes", e).then(function(e) {
                console.log("got data"), a.loading1 = !1, a.data.neslResponse = e.result, a.enableResult = !1, a.enableStart = !0
            }, function(e) {
                a.loading1 = !1, g.error("Unable to Get Result!!!")
            })
        }
    }
    angular.module("signzySandbox").controller("NeslController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "neslFactory", "$timeout", "grantSrv", "httpSrv", "$window", "toastr"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d) {
        a.loading = !1, a.wrongInput = !1;
        a.data = {
            mpgs: {
                merchantInformation: {
                    msoId: "",
                    address: {
                        street: "",
                        city: "",
                        state: "",
                        postcode: "",
                        countryCode: ""
                    },
                    categoryCode: "",
                    goodsDescription: "",
                    locale: "",
                    name: "",
                    timeZone: "",
                    phone: "",
                    tradingName: "",
                    webSite: "",
                    administrativePassword: ""
                },
                approveInformation: {
                    msoId: "",
                    merchantId: ""
                },
                acquirerInformation: {
                    msoId: "",
                    merchantId: "",
                    acquirerLink: {
                        currency: "",
                        defaultTransactionFrequency: "",
                        defaultTransactionSource: "",
                        paymentType: "",
                        status: "",
                        acquirerId: "",
                        allowableTransactionFrequency: "",
                        allowableTransactionSource: "",
                        bankMerchantId: "",
                        cardType: "",
                        terminalId: "",
                        id: ""
                    }
                },
                paymentInformation: {
                    msoId: "",
                    merchantId: "",
                    cardMaskingFormat: "",
                    systemCapturedCardMaskingFormat: "",
                    transactionMode: "",
                    privilege: "",
                    service: "",
                    tokenization: {
                        verificationStrategy: "",
                        tokenRepository: {
                            tokenGeneration: "",
                            tokenManagementStrategy: ""
                        }
                    }
                }
            }
        }, a.mpgsUpdateMerchant = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "merchantupdate",
                essentials: a.data.mpgs.merchantInformation
            };
            d.createPlexus("mpgs", e).then(function(e) {
                console.log("plexusObj", e), a.data.merchantInformationResult = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.merchantInformationResult, a.data.error = e, console.log("mpgs error", e)
            })
        }, a.mpgsApproveMerchant = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "merchantapprove",
                essentials: a.data.mpgs.approveInformation
            };
            d.createPlexus("mpgs", e).then(function(e) {
                console.log("plexusObj", e), a.data.approveInformationResult = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.approveInformationResult, a.data.error = e, console.log("mpgs error", e)
            })
        }, a.mpgsUpdatePayment = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "paymentupdate",
                essentials: a.data.mpgs.paymentInformation
            };
            e.essentials.service = a.data.mpgs.paymentInformation.service.split(","), e.essentials.privilege = a.data.mpgs.paymentInformation.privilege.split(","), d.createPlexus("mpgs", e).then(function(e) {
                console.log("plexusObj", e), a.data.paymentInformationResult = e.result, a.loading = !1;
            }, function(e) {
                a.loading = !1, delete a.data.paymentInformationResult, a.data.error = e, console.log("mpgs error", e)
            })
        }, a.mpgsUpdateAcquirer = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "acquirerupdate",
                essentials: a.data.mpgs.acquirerInformation
            };
            e.essentials.acquirerLink.currency = a.data.mpgs.acquirerInformation.acquirerLink.currency.split(","), e.essentials.acquirerLink.cardType = a.data.mpgs.acquirerInformation.acquirerLink.cardType.split(","), e.essentials.acquirerLink.allowableTransactionSource = a.data.mpgs.acquirerInformation.acquirerLink.allowableTransactionSource.split(","), e.essentials.acquirerLink.allowableTransactionFrequency = a.data.mpgs.acquirerInformation.acquirerLink.allowableTransactionFrequency.split(","), e.essentials.acquirerLink.terminalId = a.data.mpgs.acquirerInformation.acquirerLink.terminalId.split(","), d.createPlexus("mpgs", e).then(function(e) {
                console.log("plexusObj", e), a.data.acquirerInformationResult = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.acquirerInformationResult, a.data.error = e, console.log("mpgs error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("MpgsController", e), e.$inject = ["$state", "$scope", "$http", "$log", "Upload", "URLService", "$cookies", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d) {
        a.loading = !1, a.wrongInput = !1;
        a.data = {
            converter_files: [],
            bank: ""
        }, a.nameMatcher = {
            name1: "",
            name2: ""
        }, a.addressMatcher = {
            address1: "",
            address2: ""
        }, a.dateMatcher = {
            date1: "",
            date2: ""
        }, a.addressGeocoderData = {
            task: "geocode"
        }, a.nameChecker = function() {
            if (delete a.data.error, a.loading = !0, a.wrongInput = !1, "v1" == a.nameMatcher.response) var e = {
                task: "nameMatch",
                essentials: {
                    nameBlock: {
                        name1: a.nameMatcher.name1,
                        name2: a.nameMatcher.name2
                    }
                }
            };
            else var e = {
                task: "nameMatchV2",
                essentials: {
                    nameBlock: {
                        name1: a.nameMatcher.name1,
                        name2: a.nameMatcher.name2
                    }
                }
            };
            console.log("inputData", e), d.createPlexus("matchers", e).then(function(e) {
                console.log("plexusObj", e), a.data.matcherData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.matcherData, a.data.error = e, console.log("plexus error", e)
            })
        }, a.nameCheckerv2 = function() {
            delete a.data.error, a.loading = !0, a.wrongInput = !1;
            var e = {
                task: "nameMatchv2",
                essentials: {
                    nameBlock: {
                        name1: a.nameMatcher.name1,
                        name2: a.nameMatcher.name2
                    }
                }
            };
            console.log("inputData", e), d.createPlexus("matchers", e).then(function(e) {
                console.log("plexusObj", e), a.data.matcherData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.matcherData, a.data.error = e, console.log("plexus error", e)
            })
        }, a.addressChecker = function() {
            delete a.data.error, a.loading = !0, a.wrongInput = !1;
            var e = {
                task: "addressMatch",
                essentials: {
                    addressBlock: {
                        address1: a.addressMatcher.address1,
                        address2: a.addressMatcher.address2
                    }
                }
            };
            console.log("inputData", e), d.createPlexus("matchers", e).then(function(e) {
                console.log("plexusObj", e), a.data.matcherData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.matcherData, a.data.error = e, console.log("plexus error", e)
            })
        }, a.dobChecker = function() {
            delete a.data.error, a.loading = !0, a.wrongInput = !1;
            var e = {
                task: "dateMatch",
                essentials: {
                    dateBlock: {
                        date1: a.dateMatcher.date1,
                        date2: a.dateMatcher.date2
                    }
                }
            };
            console.log("inputData", e), d.createPlexus("matchers", e).then(function(e) {
                console.log("plexusObj", e), a.data.matcherData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.matcherData, a.data.error = e, console.log("plexus error", e)
            })
        }, a.addressGeocoder = function() {
            delete a.data.error, a.loading = !0, a.wrongInput = !1;
            var e = {
                task: a.addressGeocoderData.task,
                essentials: {
                    address: a.addressGeocoderData.address,
                    latitude: a.addressGeocoderData.latitude,
                    longitude: a.addressGeocoderData.longitude
                }
            };
            console.log("inputData", e), d.createPlexus("matchers", e).then(function(e) {
                console.log("plexusObj", e), a.data.addressGeocoderData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.addressGeocoderData, a.data.error = e, console.log("plexus error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("MatcherController", e), e.$inject = ["$state", "$scope", "$http", "$log", "Upload", "URLService", "$cookies", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c, u, p) {
        a.loading = !1, a.consent = !1;
        a.data = {
            credentials: {
                kraProvider: "cvlkra"
            }
        }, a.kraService = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "fetchPanDetails",
                essentials: {
                    panNumber: a.data.panNumber,
                    dob: a.data.dob,
                    credentials: {
                        kraProvider: a.data.credentials.kraProvider,
                        username: a.data.credentials.username,
                        password: a.data.credentials.password,
                        posCode: a.data.credentials.posCode
                    }
                }
            };
            console.log("inpuda is is ", e), c.createPlexus("kraservices", e).then(function(e) {
                console.log("plexusObj", e), a.data.kraData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.kraData, a.data.error = e, console.log("plexus error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("KraServiceController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv", "$window", "toastr"]
}(),
function() {
    function e(e, a, t, i, n, s, r, o, l, d, c, u) {
        a.loading = !1, a.resLoading = !1, a.consent = !1, a.disableResult = !0;
        a.data = {
            patronId: o.get("userId"),
            firstName: "",
            lastName: "",
            emailId: "",
            employerName: "",
            employmentMonth: ""
        }, a.batchModeData = {
            url: "",
            sampleUrl: "https://signzy.xyz/cdn/files/csv/emailValidation.sample.csv",
            apiName: "hdfcRealTimeFetch",
            emailId: "",
            emailSubject: "",
            callbackUrl: "",
            transactionId: localStorage.getItem("batchmodeTxnId") || ""
        }, a.extract = function() {
            a.loading = !0, delete a.data.getDataResponse, delete a.data.error, console.log("get data ", a.data), u.createBlenderRequest("emailFetchCreate", a.data).then(function(e) {
                console.log("resp from blender", e), a.data.requestId = e.requestId, a.loading = !1, d(function() {
                    a.disableResult = !1
                }, 2500)
            }, function(e) {
                a.loading = !1, a.data.error = e, console.log("error", e)
            })
        }, a.emailGetData = function() {
            delete a.data.getDataResponse, delete a.data.error, a.resLoading = !0, console.log("get data for ", a.data.requestId), u.createBlenderRequest("emailFetchGetStatus", {
                requestId: a.data.requestId
            }).then(function(e) {
                console.log("resp from get status ", e), "Pending" == e.requestStatus ? setTimeout(function() {
                    a.emailGetData()
                }, 1e3) : (a.resLoading = !1, a.data.getDataResponse = e)
            }, function(e) {
                a.resLoading = !1, a.data.error = e
            })
        }, a.fileUpload = function(e, t) {
            l.File.upload(a.batchModeData.url).then(function(e) {
                console.log("File Uploaded", e), a.batchModeData.url = e.directURL
            }, function() {
                console.log("File submitted, starting worker call", a.batchModeData.files)
            })
        }, a.startBatchModeProcess = function() {
            delete a.batchModeData.batchmodeResponse, console.log("here ", a.batchModeData.emailId), a.batchModeData.emailId = "string" == typeof a.batchModeData.emailId && a.batchModeData.emailId.split(","), console.log("start batch processing ", a.batchModeData), a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "save",
                essentials: a.batchModeData
            };
            u.createPlexus("batchmodes", e).then(function(e) {
                console.log("Received Create URL Response:", e), a.transactionId = e.result.transactionId, a.batchModeData.batchmodeResponse = e.result, a.loading = !1, localStorage.setItem("batchmodeTxnId", a.transactionId)
            }, function(e) {
                a.loading = !1, a.data.error = e
            })
        }, a.checkBatchModeStatus = function(e) {
            delete a.data.error, delete a.batchModeData.error, delete a.batchModeData.batchmodeResponse;
            var t = {
                task: "fetchTransaction",
                essentials: {
                    transactionId: a.batchModeData.transactionId
                }
            };
            console.log("input data ", t), u.createPlexus("batchmodes", t).then(function(e) {
                console.log("Received status", e.result.record.complete), e.result.record && 0 == e.result.record.complete ? a.batchModeData.error = {
                    message: "Batch mode still under process"
                } : (a.batchModeData.batchmodeResponse = e.result, console.log("here ", a.batchModeData.batchmodeResponse))
            }, function(e) {
                console.log("error"), console.log(e), a.batchModeData.error = e
            })
        }
    }
    angular.module("signzySandbox").controller("hdfcEmailController", e), e.$inject = ["$state", "$scope", "$http", "$log", "$interval", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        a.loading = !1;
        a.data = {
            pan: "",
            gstin: null != localStorage.getItem("gstin") ? localStorage.getItem("gstin") : "",
            username: null != localStorage.getItem("username") ? localStorage.getItem("username") : "",
            appKey: null != localStorage.getItem("appKey") ? localStorage.getItem("appKey") : "",
            authToken: null != localStorage.getItem("authToken") ? localStorage.getItem("authToken") : "",
            sek: null != localStorage.getItem("sek") ? localStorage.getItem("sek") : "",
            retPeriod: ""
        }, a.isValid = function() {
            return is_valid("pan", a.data.pan) ? !0 : !1
        }, a.otpRequest = function() {
            a.loading = !0, a.wrongInput = !1, localStorage.removeItem("appKey"), localStorage.removeItem("gstin"), localStorage.removeItem("username"), delete a.data.error;
            var e = {
                task: "getOtp",
                essentials: {
                    gstin: a.data.gstin.toUpperCase(),
                    username: a.data.username
                }
            };
            c.createPlexus("gstr1s", e).then(function(e) {
                console.log("plexusObj", e), a.data.otpResponse = e.result, localStorage.setItem("appKey", a.data.otpResponse.appKey), localStorage.setItem("gstin", a.data.gstin.toUpperCase()), localStorage.setItem("username", a.data.username), a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.otpResponse, a.data.error = e, localStorage.removeItem("username"), localStorage.removeItem("appKey"), localStorage.removeItem("gstin"), console.log("identity error", e)
            })
        }, a.authTokenRequest = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error, localStorage.removeItem("authToken"), localStorage.removeItem("sek");
            var e = {
                task: "getAuthToken",
                essentials: {
                    gstin: a.data.gstin.toUpperCase(),
                    username: a.data.username,
                    otp: a.data.otp,
                    appKey: a.data.appKey
                }
            };
            c.createPlexus("gstr1s", e).then(function(e) {
                console.log("plexusObj", e), a.data.authReponse = e.result, localStorage.setItem("authToken", a.data.authReponse.authToken), localStorage.setItem("sek", a.data.authReponse.sek), a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.authReponse, a.data.error = e, console.log("identity error", e)
            })
        }, a.gstr1SummaryRequest = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "summary",
                essentials: {
                    gstin: a.data.gstin.toUpperCase(),
                    username: a.data.username,
                    authToken: a.data.authToken,
                    appKey: a.data.appKey,
                    sek: a.data.sek,
                    retPeriod: a.data.retPeriod
                }
            };
            c.createPlexus("gstr1s", e).then(function(e) {
                console.log("plexusObj", e), a.data.returnResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.returnResponse, a.data.error = e, console.log("identity error", e)
            })
        }, a.gstr2b2bRequest = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "b2b",
                essentials: {
                    gstin: a.data.gstin.toUpperCase(),
                    username: a.data.username,
                    authToken: a.data.authToken,
                    appKey: a.data.appKey,
                    sek: a.data.sek,
                    retPeriod: a.data.retPeriod
                }
            };
            c.createPlexus("gstr2as", e).then(function(e) {
                console.log("plexusObj", e), a.data.returnResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.returnResponse, a.data.error = e, console.log("identity error", e)
            })
        }, a.gstr3bSummaryRequest = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "summary",
                essentials: {
                    gstin: a.data.gstin.toUpperCase(),
                    username: a.data.username,
                    authToken: a.data.authToken,
                    appKey: a.data.appKey,
                    sek: a.data.sek,
                    retPeriod: a.data.retPeriod
                }
            };
            c.createPlexus("gstr3bs", e).then(function(e) {
                console.log("plexusObj", e), a.data.returnResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.returnResponse, a.data.error = e, console.log("identity error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("Gstr1Controller", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        a.loading = !1;
        a.states = [{
            id: 0,
            name: ""
        }, {
            id: 1,
            name: "Andaman and Nicobar Islands"
        }, {
            id: 2,
            name: "Andhra Pradesh"
        }, {
            id: 3,
            name: "Andhra Pradesh (NEW)"
        }, {
            id: 4,
            name: "Arunachal Pradesh"
        }, {
            id: 5,
            name: "Assam"
        }, {
            id: 6,
            name: "Bihar"
        }, {
            id: 7,
            name: "Chattisgarh"
        }, {
            id: 8,
            name: "Chandigarh"
        }, {
            id: 9,
            name: "Dadra and Nagar Haveli and Daman and Diu"
        }, {
            id: 10,
            name: "Daman and Diu"
        }, {
            id: 11,
            name: "Delhi"
        }, {
            id: 12,
            name: "Goa"
        }, {
            id: 13,
            name: "Gujarat"
        }, {
            id: 14,
            name: "Haryana"
        }, {
            id: 15,
            name: "Himachal Pradesh"
        }, {
            id: 16,
            name: "Jammu and Kashmir"
        }, {
            id: 17,
            name: "Jharkhand"
        }, {
            id: 18,
            name: "Karnataka"
        }, {
            id: 19,
            name: "Kerala"
        }, {
            id: 38,
            name: "Ladakh"
        }, {
            id: 20,
            name: "Lakshadweep Islands"
        }, {
            id: 21,
            name: "Madhya Pradesh"
        }, {
            id: 22,
            name: "Maharashtra"
        }, {
            id: 23,
            name: "Manipur"
        }, {
            id: 24,
            name: "Meghalaya"
        }, {
            id: 25,
            name: "Mizoram"
        }, {
            id: 26,
            name: "Nagaland"
        }, {
            id: 27,
            name: "Odisha"
        }, {
            id: 28,
            name: "Punjab"
        }, {
            id: 29,
            name: "Pondicherry"
        }, {
            id: 30,
            name: "Rajasthan"
        }, {
            id: 31,
            name: "Sikkim"
        }, {
            id: 32,
            name: "Tamil Nadu"
        }, {
            id: 33,
            name: "Telangana"
        }, {
            id: 34,
            name: "Tripura"
        }, {
            id: 35,
            name: "Uttar Pradesh"
        }, {
            id: 36,
            name: "Uttarakhand"
        }, {
            id: 37,
            name: "West Bengal"
        }], a.data = {
            pan: "",
            gstin: null != localStorage.getItem("gstin") ? localStorage.getItem("gstin") : "",
            username: null != localStorage.getItem("username") ? localStorage.getItem("username") : "",
            appKey: null != localStorage.getItem("appKey") ? localStorage.getItem("appKey") : "",
            authToken: null != localStorage.getItem("authToken") ? localStorage.getItem("authToken") : "",
            sek: null != localStorage.getItem("sek") ? localStorage.getItem("sek") : ""
        }, a.isValid = function() {
            return is_valid("pan", a.data.pan) ? !0 : !1
        }, a.pantoGst = function() {
            if (a.loading = !0, a.wrongInput = !1, delete a.data.error, a.isValid()) {
                var e = {
                    task: "panSearch",
                    essentials: {
                        panNumber: a.data.pan,
                        state: a.data.state
                    }
                };
                angular.isDefined(a.data.email) && a.data.email.length > 0 && (e.essentials.email = a.data.email), c.createPlexus("gstns", e).then(function(e) {
                    console.log("plexusObj", e), a.data.pantoGstResponse = e.result, a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.pantoGstResponse, a.data.error = e, console.log("identity error", e)
                })
            } else a.wrongInput = !0, a.loading = !1
        }, a.pantoGstList = function() {
            if (a.loading = !0, a.wrongInput = !1, delete a.data.error, a.isValid()) {
                var e = {
                    task: "panToGstList",
                    essentials: {
                        panNumber: a.data.pan,
                        callbackUrl: a.data.callbackUrl
                    }
                };
                c.createPlexus("gstns", e).then(function(e) {
                    console.log("plexusObj", e), a.data.pantoGstListResponse = e.result, a.loading = !1
                }, function(e) {
                    a.loading = !1, delete a.data.pantoGstListResponse, a.data.error = e, console.log("identity error", e)
                })
            } else a.wrongInput = !0, a.loading = !1
        }, a.gstinSearch = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "gstinSearch",
                essentials: {
                    gstin: a.data.gstin
                }
            };
            c.createPlexus("gstns", e).then(function(e) {
                console.log("plexusObj", e), a.data.gstinResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.gstinResponse, a.data.error = e, console.log("identity error", e)
            })
        }, a.detailedGstinSearch = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "detailedGstinSearch",
                essentials: {
                    gstin: a.data.gstin
                }
            };
            c.createPlexus("gstns", e).then(function(e) {
                console.log("plexusObj", e), a.data.gstinResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.gstinResponse, a.data.error = e, console.log("identity error", e)
            })
        }, a.gstToHsn = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "gstToHsn",
                essentials: {
                    gstin: a.data.gstin
                }
            };
            c.createPlexus("gstns", e).then(function(e) {
                console.log("plexusObj", e), a.data.hsnResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.hsnResponse, a.data.error = e, console.log("identity error", e)
            })
        }, a.viewReturns = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "viewReturns",
                essentials: {
                    gstin: a.data.gstin.toUpperCase(),
                    financialYear: a.data.financialYear
                }
            };
            c.createPlexus("gstns", e).then(function(e) {
                console.log("plexusObj", e), a.data.returnResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.returnResponse, a.data.error = e, console.log("identity error", e)
            })
        }, a.companyNameToGst = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            var e = {
                task: "companyNameToGst",
                essentials: {
                    companyName: a.data.companyName
                }
            };
            c.createPlexus("gstns", e).then(function(e) {
                console.log("plexusObj", e), a.data.companyNameToGstResponse = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.companyNameToGstResponse, a.data.error = e, console.log("identity error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("GstnController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a) {
        var t = {
                files: "",
                firstPartyName: "Signzy Technologies Private Limited",
                secondPartyName: "",
                firstPartyAddress1: "9th Cross Rd",
                firstPartyAddress2: "JP Nagar 3rd Phase",
                firstPartyCity: "Bangalore",
                firstPartyState: "KA",
                firstPartyPincode: "560078",
                firstPartyCountry: "India",
                secondPartyAddress1: "1st Cross Rd",
                secondPartyAddress2: "JP Nagar 5th Phase",
                secondPartyCity: "Bangalore",
                secondPartyState: "KA",
                secondPartyPincode: "560078",
                secondPartyCountry: "India",
                stampDutyAmount: "100",
                considerationPrice: "1000",
                stampDutyPaidBy: "",
                documentCategory: "",
                fileTtl: "10 mins"
            },
            i = {
                status: "SUCCESS",
                eStampedPdf: "https://staging-persist.signzy.tech/api/files/3108811/download/1337d5fa24b2447288e293053845a5c0ff8b5d4d58e84d918189475502558f70.pdf",
                signzyRefId: "W5MHqzOOxnH8Tbpy",
                stampPaperNumber: ["UAT-V50YYVFXGJ9WG95K"]
            },
            n = "https://staging-persist.signzy.tech/api/files/3109328/download/fbb133f863204cbab4c9da9d9cd288747d150ba03f90415480b73bf227ef94b2.pdf",
            s = {
                statesAllowed: [{
                    stateName: "Karnataka",
                    stateCode: "KA"
                }, {
                    stateName: "Maharashtra",
                    stateCode: "MH"
                }, {
                    stateName: "Delhi",
                    stateCode: "DL"
                }],
                documentCategoryTable: [{
                    document: "Service/General Agreement",
                    documentCategory: "1"
                }, {
                    document: "Agreement relating to Deposit of Title Deeds",
                    documentCategory: "2"
                }, {
                    document: "Mortgage Deed",
                    documentCategory: "3"
                }, {
                    document: "Agreement Relating to Pawn or Pledge",
                    documentCategory: "4"
                }, {
                    document: "Security Bond Mortgage Deed",
                    documentCategory: "5"
                }, {
                    document: "Loan Agreement",
                    documentCategory: "6"
                }, {
                    document: "Leave and License Agreement",
                    documentCategory: "7"
                }, {
                    document: "Affidavit",
                    documentCategory: "8"
                }, {
                    document: "Deed of Hypothecation",
                    documentCategory: "9"
                }, {
                    document: "Guarantee",
                    documentCategory: "10"
                }, {
                    document: "Power of Attorney authorising person/s for one transaction",
                    documentCategory: "11"
                }, {
                    document: "Power of Attorney authorizing to sell immovable property",
                    documentCategory: "12"
                }, {
                    document: "Loan Agreement Unsecured",
                    documentCategory: "13"
                }, {
                    document: "Car Loan/Loan Agreement",
                    documentCategory: "14"
                }, {
                    document: "Incentive Payout Management Agreement",
                    documentCategory: "15"
                }, {
                    document: "Indemnity Bond",
                    documentCategory: "16"
                }, {
                    document: "Vehicle Lease Agreement",
                    documentCategory: "17"
                }, {
                    document: "Deed of further charge",
                    documentCategory: "18"
                }, {
                    document: "Indenture of Mortgage",
                    documentCategory: "19"
                }, {
                    document: "Agreement relating to Sale of Immovable property",
                    documentCategory: "20"
                }]
            },
            r = ["2 mins", "10 mins", "30 mins", "2 hrs", "12 hrs", "7 days", "15 days", "1 month", "3 month", "6 month", "1 year", "3 years", "infinity"];
        return {
            getvalidCodes: function() {
                return s
            },
            getSignPosition: function() {
                return ["top-left", "top-center", "top-right", "middle-left", "middle-center", "middle-right", "bottom-left", "bottom-center", "bottom-right", "customize"]
            },
            getTtl: function() {
                return r
            },
            getEStampData: function() {
                return t
            },
            getEStampResponseData: function() {
                return i
            },
            getEStampTraditionalUrl: function() {
                return n
            }
        }
    }
    angular.module("signzySandbox").service("eStampingFactory", e), e.$inject = ["$http", "$timeout"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c, u, p, g) {
        a.loading = !1, a.wrongInput = !1;
        a.statesAllowed = u.getvalidCodes().statesAllowed, a.documentsAllowed = u.getvalidCodes().documentCategoryTable, a.signPosition = u.getSignPosition(), a.listofTtl = u.getTtl(), a.estampData = u.getEStampData(), a.estampResponse = u.getEStampResponseData(), a.estampTraditionalUrl = u.getEStampTraditionalUrl(), a.estampDisplayResponse = void 0, a.urnStatusData = {
            urn: ""
        }, a.urnStatusData = {
            stateCode: "",
            misDate: ""
        }, a.initArticleCode = function() {
            for (var e = 0; e < a.stateList.length; e++)
                if (a.stateList[e].stateCode == a.estampData.stateCode) {
                    a.articleList = a.stateList[e].validArticleCodes;
                    break
                }
        }, a.openTraditionalPdf = function() {
            t.open(a.estampTraditionalUrl, "_blank")
        }, a.requestEstamp = function() {
            a.loading = !0, a.wrongInput = !1, delete a.estampData.error, delete a.estampData.estampData;
            var e = {
                task: "eStamp",
                essentials: a.estampData
            };
            console.log("input is ", e), c.createPlexus("estamping", e).then(function(e) {
                console.log("plexusObj", e), a.estampData.estampData = e.result, a.loading = !1
            }, function(e) {
                console.log("inside error ", e), a.loading = !1, delete a.estampData.estampData, a.estampData.error = e, console.log("identity error", e)
            })
        }, a.getUrnStatus = function() {
            console.log("here"), a.loading = !0, a.wrongInput = !1, delete a.urnStatusData.error;
            var e = {
                task: "getUrnStatus",
                essentials: {
                    urn: a.urnStatusData.urn
                }
            };
            c.createPlexus("estamping", e).then(function(e) {
                console.log("plexusObj", e), a.urnStatusData.urnStatusData = e.result, a.loading = !1
            }, function(e) {
                console.log("inside error ", e), a.loading = !1, delete a.urnStatusData.urnStatusData, a.urnStatusData.error = e, console.log("identity error", e)
            })
        }, a.procureEstamp = function() {
            console.log("here"), a.loading = !0, a.wrongInput = !1, delete a.procureEstamp.error;
            var e = {
                task: "procureStamp",
                essentials: {
                    consumerId: a.procureEstamp.consumerId,
                    consumerName: a.procureEstamp.consumerName,
                    firstParty: a.procureEstamp.firstParty,
                    secondParty: a.procureEstamp.secondParty,
                    stateCode: a.procureEstamp.stateCode,
                    denomination: a.procureEstamp.denomination,
                    articleCode: a.procureEstamp.articleCode,
                    qty: a.procureEstamp.qty,
                    address: a.procureEstamp.address
                }
            };
            angular.isDefined(a.procureEstamp.supportEmail) && a.procureEstamp.supportEmail.length > 0 && (e.essentials.supportEmail = a.procureEstamp.supportEmail.split(",").map(function(e) {
                return e
            }).filter(function(e) {
                return e.length
            })), c.createPlexus("estamping", e).then(function(e) {
                console.log("plexusObj", e), a.procureEstamp.procureEstamp = e.result, a.loading = !1
            }, function(e) {
                console.log("inside error ", e), a.loading = !1, delete a.procureEstamp.procureEstamp, a.procureEstamp.error = e, console.log("identity error", e)
            })
        }, a.getEstampStatus = function() {
            console.log("here"), a.loading = !0, a.wrongInput = !1, delete a.getEstampStatus.error;
            var e = {
                task: "getStatus",
                essentials: {
                    transactionId: a.getEstampStatus.transactionId
                }
            };
            c.createPlexus("estamping", e).then(function(e) {
                console.log("plexusObj", e), a.getEstampStatus.getEstampStatus = e.result, a.loading = !1
            }, function(e) {
                console.log("inside error ", e), a.loading = !1, delete a.getEstampStatus.getEstampStatus, a.getEstampStatus.error = e, console.log("identity error", e)
            })
        }, a.getDailyMis = function() {
            a.loading = !0, a.wrongInput = !1, delete a.dailyMisData.error;
            var e = a.dailyMisData.misDate,
                t = new Date(e).getDate() + "/" + ((new Date).getMonth() + 1 < 9 ? "0" + ((new Date).getMonth() + 1) : (new Date).getMonth() + 1) + "/" + (new Date).getFullYear(),
                i = {
                    task: "getDailyMis",
                    essentials: {
                        stateCode: a.dailyMisData.stateCode,
                        misDate: t
                    }
                };
            c.createPlexus("estamping", i).then(function(e) {
                a.dailyMisData.dailyMisData = e.result, a.loading = !1
            }, function(e) {
                console.log("inside error ", e), a.loading = !1, delete a.dailyMisData.dailyMisData, a.dailyMisData.error = e, console.log("identity error", e)
            })
        }, a.fileUpload = function(e) {
            console.log("file ", e), g.File.upload(a.estampData.pdfData).then(function(e) {
                console.log("File Uploaded", e), a.estampData.pdfUrl = e.directURL
            }, function() {})
        }
    }
    angular.module("signzySandbox").controller("EstampController", e), e.$inject = ["$state", "$scope", "$window", "$http", "$log", "Upload", "URLService", "$cookies", "$timeout", "grantSrv", "httpSrv", "eStampingFactory", "UtilsService", "uploadSrv"]
}(),
function() {
    "use strict";

    function e(e, a) {
        var t = ["Select Country", "APEC", "Abkhazia", "Afghanistan", "African Development Bank", "African Union", "Albania", "Algeria", "American Samoa", "Andorra", "Angola", "Anguilla", "Antigua and Barbuda", "Argentina", "Armenia", "Aruba", "Australia", "Austria", "Azerbaijan", "Bahamas", "Bahrain", "Bangladesh", "Barbados", "Belarus", "Belgium", "Belize", "Benin", "Bermuda", "Bhutan", "Bolivia", "Plurinational State of", "Bonaire", "Sint Eustatius and Saba", "Bosnia and Herzegovina", "Botswana", "Brazil", "Brunei Darussalam", "Bulgaria", "Burkina Faso", "Burundi", "Cambodia", "Cameroon", "Canada", "Cape Verde", "Cayman Islands", "Central African Republic", "Chad", "Chile", "China", "Colombia", "Comesa", "Comoros", "Congo, Democratic Republic of the", "Cook Islands", "Costa Rica", "Cote d'Ivoire", "Croatia", "Cuba", "Curacao", "Cyprus", "Czech Republic", "Denmark", "Djibouti", "Dominica", "Dominican Republic", "Donetsk People's Republic", "ECOWAS", "East African Community (EAC)", "Ecuador", "Egypt", "El Salvador", "Equatorial Guinea", "Eritrea", "Estonia", "Ethiopia", "European Union", "Faroe Islands", "Fiji", "Finland", "France", "French Polynesia", "Gabon", "Gambia", "Georgia", "Germany", "Ghana", "Gibraltar", "Greece", "Greenland", "Grenada", "Guam", "Guatemala", "Guernsey", "Guinea", "Guinea-Bissau", "Guyana", "Haiti", "Holy See (Vatican City State)", "Honduras", "Hong Kong", "Hungary", "IGAD", "Iceland", "India", "Indonesia", "Interpol", "Iran, Islamic Republic of", "Iraq", "Ireland", "Isle of Man", "Israel", "Italy", "Jamaica", "Japan", "Jersey", "Jordan", "Kazakhstan", "Kenya", "Kiribati", "Korea, Democratic People's Republic of", "Korea, Republic of", "Republic of", "Kosovo", "Kuwait", "Kyrgyzstan", "Lao People's Democratic Republic", "Latvia", "Lebanon", "Lesotho", "Liberia", "Libya", "Liechtenstein", "Lithuania", "Lugansk People's Republic", "Luxembourg", "MERCOSUR", "Macao", "Macedonia", "the former Yugoslav Republic of", "Madagascar", "Malawi", "Malaysia", "Maldives", "Mali", "Malta", "Marshall Islands", "Mauritania", "Mauritius", "Mexico", "Micronesia", "Micronesia, Federated States of", "Moldova, Republic of", "Monaco", "Mongolia", "Montenegro", "Montserrat", "Morocco", "Mozambique", "Myanmar", "Namibia", "Nauru", "Nepal", "Netherlands", "New Zealand", "Nicaragua", "Niger", "Nigeria", "Niue", "Northern Cyprus", "Northern Mariana Islands", "Norway", "OAS", "OECS", "Oman", "Pakistan", "Palau", "Palestine, State of", "Panama", "Papua New Guinea", "Paraguay", "Peru", "Philippines", "Poland", "Portugal", "Puerto Rico", "Qatar", "Romania", "Russian Federation", "Rwanda", "Saint Helena", "Ascension and Tristan da Cunha", "Saint Kitts and Nevis", "Saint Lucia", "Saint Martin (French part)", "Saint Vincent and the Grenadines", "Samoa", "San Marino", "Sao Tome and Principe", "Saudi Arabia", "Senegal", "Serbia", "Seychelles", "Sierra Leone", "Singapore", "Sint Maarten (Dutch part)", "Slovakia", "Slovenia", "Solomon Islands", "Somalia", "Somaliland", "South Africa", "South Ossetia", "South Sudan", "Sovereign Military Order Of Malta", "Spain", "Sri Lanka", "Sudan", "Suriname", "Swaziland", "Sweden", "Switzerland", "Syrian Arab Republic", "Taiwan, Province of China", "Tajikistan", "Tanzania, United Republic of", "Thailand", "Timor-Leste", "Togo", "Tonga", "Transnistria", "Trinidad and Tobago", "Tunisia", "Turkey", "Turkmenistan", "Turks and Caicos Islands", "Tuvalu", "Uganda", "Ukraine", "United Arab Emirates", "United Kingdom", "United Nations Organization", "United States", "Uruguay", "Uzbekistan", "Vanuatu", "Venezuela, Bolivarian Republic of", "Viet Nam", "Virgin Islands, British", "Virgin Islands, U.S.", "Western Sahara", "Yemen", "Yugoslavia", "Zambia", "Zimbabwe"],
            i = {
                APEC: ["Business Travel Card"],
                Abkhazia: ["Driving License", "Passport"],
                Afghanistan: ["Id Card", "Passport", "Refugee Card", "Visa"],
                "African Development Bank": ["ePassport"],
                "African Union": ["Laissez Passer", "Passport"],
                Albania: ["Driving License", "ePassport", "Id Card", "Passport", "Qualification Driving License", "Seaman's Book"],
                Algeria: ["ePassport", "Health Card", "Id Card", "Passport", "Visa"],
                "American Samoa": ["Driving License", "Id Card", "Voter Card"],
                Andorra: ["Driving License ", "ePassport ", "Passport", "Residence permit"],
                Angola: ["Diplomatic Card", "Driving License", "ePassport", "Id Card", "Laissez-Passer", "Passport ", "Refugee Card", "Residence permit", "Visa"],
                Anguilla: ["Driving License ", "Passport "],
                "Antigua and Barbuda": ["Driving License", "ePassport ", "Health Insurance Card", "Id Card", "Passport", "Social Security Card"],
                Argentina: ["ANAC Card", "Cipoletti Driving License", "Driving License", "ePassport", "Id Card", "Passport", "Police Card", "Visa"],
                Armenia: ["Certificate of Return", "Driving License", "ePassport", "Id Card", "Passport", "Registration Certificate", "Visa"],
                Aruba: ["Driving License", "Id Card", "Temporary permit", "Visa"],
                Australia: ["Capital Territory Driving License", "Capital Territory Heavy Vehicle Driving License ", "Capital Territory Learner Driving License", "Capital Territory Probationary Driving License", "Capital Territory Proof Id Card", "Capital Territory Proof of Age Card", "Capital Territory Provisional Driving License", "Capital Territory Public Vehicle Driver Authority Card", "Capital Territory Restricted Driving License", "Diplomatic Card", "ePassport ", "Immigration Card", "Medicare Card", "New South Wales Driving License", "New South Wales Photo Card", "New South Wales Provisional Driving License", "Nothern Territory Driving License", "Nothern Territory Proof of Age Card", "Passport", "Queensland Driving License", "Queensland Heavy Driving License", "Queensland Industry Authority", "Queensland Marine License", "Queensland Photo Id Card", "Queensland Proof of Age Card", "Residence Permit", "South Australia Driving License", "South Australia Heavy Vehicle Driving License", "South Australia Learner Driving License", "South Australia Proof of Age Card", "South Australia Provisional Driving License", "Tasmania Driving License ", "Tasmania Heavy Vehicle Driving License", "Tasmania Learner Driving License ", "Tasmania Proof of Age Card", "Victoria Driving License", "Victoria Heavy Vehicle Driving License", "Victoria Learner Permit", "Victoria Longarm License", "Victoria Marine License", "Victoria Probationary Driving License", "Victoria Proof of Age Card", "Visa", "Western Australia Driving License", "Western Australia Heavy Vehicle Driving License", "Western Australia Learner's Driving License", "Western Australia Photo Card ", "Western Australia Proof Age Card", "Western Australia Provisional Driving License ", "Western Australia Work Permit"],
                Austria: ["Armed Forces Id Card", "Diplomatic Id Card", "Driver Training Certificate", "Driving Card", "Driving License ", "ePassport", "Health Card", "Health Insurance Card", "Id Card", "Passport", "Registration Certificate ", "Residence permit", "Seaman's Identity Document", "Service Id Card", "Visa", "Waffenbesitzkarte ", "Waffenpass"],
                Azerbaijan: ["Diplomatic Card ", "Driver Training Certificate ", "Driving License ", "ePassport ", "Id Card ", "Passport ", "Permanent Resident Card ", "Reentry Certificate ", "Registration Certificate ", "Residence Permit ", "Seafarers' Id Card ", "Temporary Residence Card", "Visa "],
                Bahamas: ["Diplomatic Card ", "Driver Training Certificate ", "Driving License ", "ePassport ", "Id Card ", "Passport ", "Permanent Resident Card ", "Reentry Certificate ", "Registration Certificate ", "Residence Permit ", "Seafarers' Id Card ", "Temporary Residence Card", "Visa "],
                Bahrain: ["Driving License ", "Id Card ", "Passport ", "Residence Permit ", "Temporary Population Card "],
                Bangladesh: ["Driving License ", "Emigration Clearance Card ", "ePassport ", "Id Card ", "Passport ", "Professional Driving License ", "Visa "],
                Barbados: ["Driving License ", "ePassport ", "Id Card ", "Passport "],
                Belarus: ["Accreditation Id Card", "Border Crossing Card ", "Certificate of birth ", "Coupon to Driving License ", "Diplomatic Card ", "Driver Card ", "Driver Training Certificate ", "Driving License ", "Id Card ", "Identity Card for Residence ", "Lawyer Card ", "Life Card ", "Passport ", "Qualification Driving License ", "Reentry Certificate ", "Refugee Certificate ", "Registration Certificate ", "Seafarers' Id Card", "Service Id Card ", "Social Security Card ", "Soldier Card ", "Temporary permit ", "Travel Document ", "Visa ", "VISA APPLICATION FORM "],
                Belgium: ["Diplomatic Id Card ", "Driver Training Certificate ", "Driving License ", "ePassport ", "Health Insurance Card ", "Id Card ", "Passport ", "Police Card ", "Provisional Driving License ", "Registration Certificate ", "Residence permit ", "Visa "],
                Belize: ["Border Crossing Card ", "Driving License ", "Learner Driving License ", "Passport ", "Permanent Resident Card ", "Police Card ", "Residence permit ", "Retired Person Card ", "Temporary Border Crossing Permit ", "Visa ", "Work Permit "],
                Benin: ["Driving License ", "ePassport ", "Id Card ", "Passport ", "Residence Card ", "Visa "],
                Bermuda: ["Driving License ", "Id Card ", "Passport ", "Seafarers' Id Card ", "Seniors Id Card "],
                Bhutan: ["Citizenship Card ", "Passport ", "Voting Card "],
                "Bolivia, Plurinational State of": ["Crew member certificate ", "Driving License ", "ePassport ", "Foreigners Id Card ", "Id Card ", "Id Card Consular ", "Passport ", "Visa "],
                "Bonaire, Sint Eustatius and Saba": ["Bonaire Id Card ", "Driving License ", "Saba Id Card ", "Visa "],
                "Bosnia and Herzegovina": ["Diplomatic Card ", "Driver Card ", "Driver Training Certificate ", "Driving License ", "ePassport ", "Id Card ", "Passport ", "Visa "],
                Botswana: ["Driving License ", "ePassport ", "Id Card ", "Passport ", "Residence Permit "],
                Brazil: ["Accountant Card ", "Amazonas Driving License ", "Bahia Driving License ", "Ceara Driving License ", "Ceara Id Card ", "Distrito Federal Driving License ", "Driving License ", "ePassport ", "Esperito Santo Driving License ", "Foreigners Id Card ", "Id Card ", "Id Card Consular ", "Lawyer Card ", "Mato Grosso Id Card ", "Medicare Card ", "Military Id Card ", "Minas Gerais Driving License ", "Para Driving License ", "Paraiba Driving License ", "Parana Police Card ", "Passport ", "Pernambuco Id Card ", "Rio de Janeiro Driving License ", "Rio de Janeiro Id Card ", "Rio Grande do Sul Driving License ", "Santa Catarina Driving License ", "Sao Paulo Driving License ", "Sao Paulo Id Card ", "Sao Paulo Police Card ", "Visa ", "Work Permit "],
                "Brunei Darussalam": ["Driving License ", "ePassport ", "Id Card ", "Passport "],
                Bulgaria: ["Certificate for EU Citizen ", "Diplomatic Card ", "Driver Card ", "Driver Training Certificate ", "Driving License", "ePassport", "Health Insurance Card ", "Id Card ", "Id Card of Foreigner for Long Time ", "Id Card of Foreigner Temporary ", "Id Card of Refugee ", "Passport ", "Qualification Driving License ", "Registration Certificate ", "Residence Card for a family member", "Residence Permit ", "Temporary Id Card of Foreigner ", "Temporary Id Card of Refugee ", "Visa "],
                "Burkina Faso": ["Driving License ", "ePassport ", "Id Card ", "Passport ", "Visa "],
                Burundi: ["Driving License ", "ePassport ", "Id Card ", "Passport ", "Visa "],
                Cambodia: ["Driving License ", "ePassport ", "Id Card ", "Passport ", "Registration Certificate ", "Visa ", "Work Permit "],
                Cameroon: ["Driving License ", "ePassport ", "Id Card ", "PASSPORT ", "Resident Card ", "Visa "],
                Canada: ["Alberta Driving Licence ", "Alberta Id Card ", "Alberta Operator Licence ", "British Columbia Driving Licence ", "British Columbia Driving Licence and Services Card Novice ", "British Columbia Driving Licence Novice ", "British Columbia Enhanced Driving Licence ", "British Columbia Id Card ", "British Columbia Services Card ", "Certifiate of Citizenship ", "Certificate of Identity ", "Certificate of Indian Status ", "ePassport ", "Id Card ", "Manitoba Driving Licence ", "Manitoba Enhanced Driving Licence ", "Manitoba Enhanced Id Card ", "Manitoba Id Card ", "New Brunswick Driving Licence ", "New Brunswick Id Card ", "Newfoundland and Labrador Driving Licence ", "Newfoundland and Labrador Id Card ", "Northwest Territories Driving Licence ", "Northwest Territories Id Card ", "Nova Scotia Driving Licence ", "Nova Scotia Id Card ", "Nunavut Driving Licence ", "Nunavut Id Card ", "Ontario Byid Card ", "Ontario Driving Licence ", "Ontario Enhanced Driving Licence ", "Ontario Health Card ", "Ontario Photo Card ", "Passport ", "Permanent Resident Card", "Prince Edward Island Driving Licence ", "Prince Edward Island Id Card ", "Quebec Driving License ", "Quebec Enhanced Driving License ", "Quebec Health Insurance Card ", "Quebec Id Card ", "Quebec Probationary License Permit ", "Saskatchewan Driving Licence ", "Saskatchewan Id Card ", "Seafarers' Id Card", "Visa ", "Work Permit ", "Yukon Driving Licence ", "Yukon Id Card ", "Yukon Operator Licence "],
                "Cape Verde": ["Driving License ", "ePassport ", "Id Card ", "Passport ", "Visa "],
                "Cayman Islands": ["Driving License ", "Passport "],
                "Central African Republic": ["Driving License", "ePassport ", "Id Card ", "Passport "],
                Chad: ["Driving License ", "ePassport ", "Id Card ", "Passport ", "Visa "],
                Chile: ["Driving License ", "ePassport ", "Id Card ", "Passport ", "Resident Permit ", "Visa "],
                China: ["Armed Forces Id Card ", "Company card ", "Diplomatic Id Card ", "Driving License ", "Entry and Exit Permit ", "Entry Permit ", "ePassport ", "Health Card ", "Home Visit Permit Card ", "Id Card ", "Mainland China to Macao and Hong Kong Card ", "Mainland China to Taiwan Card ", "Mainland Travel Permit for Taiwan Residents ", "Passport ", "Residence Card ", "Residence permit ", "Seafarer's Passport ", "Service Card ", "Temporary Resident Id Card ", "Travel Document ", "Travel Permit of Mainland Residents To and From Taiwan ", "Travel Permit of Taiwan Residents To and From Mainland ", "Travel Permit To and From HK and Macao ", "Travel Permit To and From HK and Macao for Public Affairs ", "Visa ", "Work Permit "],
                Colombia: ["Alien's Id Card ", "Armed Forces Id Card ", "Consular Id Card ", "Driving License ", "ePassport ", "Health Card ", "Id Card ", "Passport ", "Registration Certificate ", "Residence permit ", "Service Id Card ", "Visa "],
                Comesa: ["Laissez Passer "],
                Comoros: ["ePassport ", "Id Card ", "Passport ", "Resident Card ", "Visa "],
                "Congo, Democratic Republic of the": ["Driving License", "ePassport", "Passport", "Visa", "Voter Card"],
                "Cook Islands": ["Driving License"],
                "Costa Rica": ["Child Id Card", "Driving License", "Id Card", "Passport", "Visa"],
                "Cote d'Ivoire": ["Driving License", "ePassport", "Id Card", "Passport", "Registration Certificate", "Resident Card", "Visa"],
                Croatia: ["Border Crossing Permit", "Driver Training Certificate", "Driving Card", "ePassport", "Id Card", "Passport", "Reentry certificate", "Residence Card", "Residence permit", "Visa"],
                Cuba: ["Driving License", "Id Card", "Passport", "Visa"],
                Curacao: ["Driving License", "Visa"],
                Cyprus: ["Driver Card", "Driving License ", "ePassport", "Id Card", "Passport", "Residence Permit ", "Visa"],
                "Czech Republic": ["Diplomatic Id Card", "Driver Card", "Driver Training Certificate", "Driving License", "ePassport", "Health Insurance Card", "Id Card", "Passport", "Qualification Driving License", "Registration Certificate", "Residence permit ", "Temporary Residence permit ", "Visa "],
                Denmark: ["Driver Training Certificate ", "Driving License", "ePassport", "Health Insurance Card ", "Passport", "Residence Card ", "Residence permit ", "Visa "],
                Djibouti: ["ePassport", "Id Card", "Visa "],
                Dominica: ["Driving License ", "Passport "],
                "Dominican Republic": ["Driving Learning permit ", "Driving License ", "Id Card", "Passport ", "Residence Permit ", "Temporary Work Permit ", "Visa ", "Voter Card "],
                "Donetsk People's Republic": ["Driving License", "Passport", "Registration Certificate "],
                ECOWAS: ["Laissez Passer ", "Passport "],
                "East African Community (EAC)": ["Passport ", "Visa "],
                Ecuador: ["Driving License ", "ePassport", "Id Card", "Passport ", "Visa "],
                Egypt: ["Driving License ", "Foreign Residence Card ", "Id Card ", "PASSPORT ", "Residence Permit ", "Visa "],
                "El Salvador": ["Driving License ", "Id Card ", "Passport "],
                "Equatorial Guinea": ["ePassport ", "Id Card ", "Passport ", "Visa "],
                Eritrea: ["Passport ", "Visa"],
                Estonia: ["Certificate of Identity ", "Diplomatic Id Card ", "Driver Card ", "Driving License ", "ePassport", "Health Insurance Card ", "Id Card ", "Passport ", "Passport Seaman's ", "Qualification Driving License ", "Residence permit", "Service Id Card", "Visa "],
                Ethiopia: ["Id Card ", "Passport ", "Residence Id Card", "Tax Card ", "Temporary Residence ID Card ", "Visa "],
                "European Union": ["ePassport "],
                "Faroe Islands": ["Driving License "],
                Fiji: ["Certificate of Identity ", "Driving License ", "ePassport", "Passport ", "Tax ID ", "Voter ID "],
                Finland: ["Crew member certificate ", "Driver Training Certificate ", "Driving License ", "ePassport", "Health Insurance Card ", "Id Card ", "Passport ", "Residence Card ", "Residence permit ", "Travel Document", "Visa"],
                France: ["Air France Id Card", "Driver Training Certificate", "Driving License ", "ePassport", "Health Card", "Health Insurance Card ", "Id Card ", "Military Id Card", "Passport ", "Police Card", "Qualification Driving ", "Registration Certificate", "Residence permit ", "Vignette OFF", "Visa"],
                "French Polynesia": ["Driving License "],
                Gabon: ["ePassport", "Id Card ", "Passport ", "Visa"],
                Gambia: ["Driving License", "ePassport", "Id Card", "Passport", "Residence Permit"],
                Georgia: ["Armed Forces Id Card", "Driver Training Certificate", "Driving License", "ePassport ", "Id Card", "Passport", "Registration Certificate", "Residence Card", "Seaman's book", "Temporary Residence Card", "Travel Document for return", "Visa"],
                Germany: ["BMW Corporate Card", "Company Card", "Diplomatic Residence Permit", "Disabled Id Card", "Driver Card", "Driver Training Certificate", "Driving License", "ePassport", "Health Insurance Card", "Id Card", "Passport", "Permission for the transportation", "Residence permit ", "Temporary Residence permit", "Visa"],
                Ghana: ["Diplomatic Residence Permit", "Driving License", "ECOWAS Id Card", "Health Card", "Id Card ", "Passport", "Re-entry Permit ", "Registration Card ", "Residence permit", "Seaman's book", "Social Security Card", "Travel document", "Visa", "Voter Card"],
                Gibraltar: ["Health Card", "Id Card", "Registration Certificate"],
                Greece: ["Driver Card", "Driver Training Certificate", "Driving License", "ePassport", "Health Insurance Card", "Id Card", "Military Id Card", "Passport", "Permanent Residence Card", "Residence Card", "Residence Permit", "Visa"],
                Greenland: ["Driving License", "Id Card"],
                Grenada: ["Driving License", "ePassport", "Passport", "Voter Card"],
                Guam: ["Driving License", "Id Card", "Intermediate Driving License"],
                Guatemala: ["Consular Id Card", "Driving License", "Id Card", "Passport", "Driving License"],
                Guernsey: ["ePassport", "Id Card", "Passport", "Visa", "Voting Card"],
                Guinea: ["ePassport", "Id Card", "Passport", "Visa", "Voting Card"],
                "Guinea-Bissau": ["Driving License", "ePassport", "Id Card", "Passport"],
                Guyana: ["Driving Licence", "Id Card", "Passport"],
                Haiti: ["Driving License", "Id Card", "Passport", "Police Card", "Residence Permit"],
                "Holy See (Vatican City State)": ["ePassport"],
                Honduras: ["Consular Id Card", "Driving License", "Id Card", "Passport", "Residence Card", "Seaman's Identity Document"],
                "Hong Kong": ["Arrival/Departure Card", "Arrival Card ", "Consular Id Card", "Crew member certificate", "Departure Card ", "Driving License", "ePassport", "Id Card", "Passport", "Permanent Id Card", "Re-Entry Permit", "Visa"],
                Hungary: ["Address card", "APEH card", "Driver Training Certificate", "Driving Card", "Driving License", "ePassport", "Health Insurance Card", "Id Card", "Passport", "Qualification Driving License", "Registration Certificate", "Residence permit", "Student Id Card", "TB card", "Temporary Id Card", "Visa"],
                IGAD: ["Passport"],
                Iceland: ["Driving License", "ePassport", "Passport", "Residence permit", "Visa"],
                India: ["Driving Licence", "Aadhaar", "PAN", "Passport"],
                Indonesia: ["Certificate Card", "ePassport", "Id Card", "Passport", "Police Card", "Residence permit ", "Tax Card", "Visa ", "Work Card "],
                Interpol: ["ePassport ", "Id Card "],
                "Iran, Islamic Republic of": ["Driving License ", "ePassport ", "Id Card ", "Passport ", "Residence permit", "Temporary Residence permit", "Visa "],
                Iraq: ["Driving License ", "Health Card ", "Id Card ", "Passport ", "Residence permit ", "Visa ", "Voter Card "],
                Ireland: ["Certificate of Registration ", "Diplomatic Id Card ", "Driver Training Certificate ", "Driving License ", "ePassport ", "Health Card ", "Health Insurance Card ", "Id Card ", "Learner Permit ", "Passport ", "Residence permit ", "Visa "],
                "Isle of Man": ["Passport ", "Driving License ", "Proof of Age Card "],
                Israel: ["Driving License ", "Driving Permit ", "Entry Exit Permit ", "ePassport ", "Exit Permit", "Id Card ", "Passport ", "Temporary Id Card ", "Travel Document ", "Visa "],
                Italy: ["Driver Card ", "Driver Training Certificate ", "Driving License ", "ePassport ", "Health Insurance Card ", "Id Card ", "Passport ", "Police Card ", "Residence permit ", "Visa "],
                Jamaica: ["Armed Forces Id Card ", "Driving License ", "Firearm License ", "Id Card ", "Passport ", "Voting Card ", "Work Permit "],
                Japan: ["Alien Registration Card ", "Driving License ", "ePassport ", "Foreigner Id Card ", "Health Insurance Card ", "My Number card ", "Passport ", "Re-Entry Permit ", "Residence Card ", "Visa "],
                Jersey: ["Driving License "],
                Jordan: ["Driving License ", "Id Card ", "Passport ", "Residence permit ", "Vehicle License "],
                Kazakhstan: ["Consular Id Card ", "Diplomatic Card ", "Driver Card ", "Driver Training Certificate ", "Driving License ", "ePassport ", "Id Card ", "Passport ", "Registration Certificate ", "Residence permit ", "SIM Card ", "Visa "],
                Kenya: ["Armed Forces Id Card ", "Diplomatic Id Card ", "Driving License ", "ePassport ", "Foreigner Certificate ", "Id Card ", "Passport ", "Refugee Id Card ", "Visa "],
                Kiribati: ["Passport "],
                "Korea, Democratic People's Republic of": ["ePassport ", "Passport ", "Visa "],
                "Korea, Republic of": ["Alien Registration ", "Consular Id Card", "Diplomatic Id ", "Driving License ", "ePassport ", "Id Card ", "Passport ", "Resident permit ", "Seaman's Book ", "Social Security Card ", "Veteran Id Card ", "Visa "],
                Kosovo: ["Diplomatic Card ", "Driving License ", "ePassport ", "Id Card ", "Passport ", "Residence permit ", "Travel Document "],
                Kuwait: ["Driving License ", "ePassport ", "Id Card ", "Passport ", "Residence Permit ", "Visa "],
                Kyrgyzstan: ["Driving License ", "Id Card ", "Passport ", "Registration Certificate ", "Visa "],
                "Lao People's Democratic Republic": ["Certificate of Identity ", "Driving License ", "ePassport ", "Passport ", "Visa "],
                Latvia: ["Bicyclist's Licence ", "Driver Card ", "Driver Training Certificate ", "Driving License ", "ePassport ", "Id Card ", "Learner Driving License ", "Passport ", "Pleasure Craft Certificate ", "Qualification Driving License ", "Registration Certificate ", "Residence permit ", "Seafarer's Driving License ", "Visa "],
                Lebanon: ["Driving License ", "ePassport ", "Id Card ", "Laissez-passer ", "Passport ", "Residence Permit ", "Vehicle Registration Card "],
                Lesotho: ["Driving License ", "ePassport ", "Id Card ", "Passport "],
                Liberia: ["Driving License ", "ePassport ", "Passport ", "Visa "],
                Libya: ["Driving License ", "Passport ", "Visa "],
                Liechtenstein: ["Driver Training Certificate ", "Driving Licence ", "ePassport ", "Id Card ", "Passport ", "Residence permit "],
                Lithuania: ["Accreditation Certificate ", "Border crossing permit ", "Crew member certificate ", "Driver Training Certificate ", "Driving Card ", "Driving License ", "ePassport ", "Id Card ", "Passport ", "Registration Certificate ", "Residence permit ", "Seaman's book ", "Visa "],
                "Lugansk People's Republic": ["Driving License ", "Passport "],
                Luxembourg: ["Diplomatic Id Card ", "Driver Training Certificate ", "Driving Licence ", "ePassport ", "Id Card ", "Passport ", "Qualification Driving License ", "Residence permit ", "Visa "],
                MERCOSUR: ["Id Card "],
                Macao: ["Driving License ", "ePassport ", "Id Card ", "Passport "],
                "Macedonia, the former Yugoslav Republic of": ["Diplomatic Id Card ", "Driver Card ", "Driver Training Certificate ", "Driving License ", "ePassport ", "Health Card ", "Id Card ", "Passport ", "Residente Permit ", "Special Identity Card ", "Visa "],
                Madagascar: ["ePassport ", "Id Card ", "Passport ", "Visa "],
                Malawi: ["Driving License ", "ePassport ", "Id Card ", "International Driving License ", "Passport ", "Professional Driving Permit ", "Residence permit ", "Traffic Register Card ", "Visa "],
                Malaysia: ["Armed Forces Id Card ", "Border Crossing Permit ", "Child Id Card ", "Driving License ", "ePassport ", "Id Card ", "Immigration Card ", "Passport ", "Permanent Resident Card ", "Police Card ", "Professional Driving License ", "Residence Pass ", "Temporary Employment Card ", "Visa "],
                Maldives: ["Driving License ", "ePassport ", "Id Card ", "Passport ", "Visa ", "Work Visa Card "],
                Mali: ["ePassport ", "Id Card ", "Passport ", "Visa "],
                Malta: ["Diplomatic Card ", "Driver Card ", "Driving License ", "ePassport ", "Id Card ", "Passport ", "Refugee Card ", "Residence permit ", "Seaman's book ", "Visa "],
                "Marshall Islands": ["Driving License ", "Passport "],
                Mauritania: ["ePassport ", "Id Card ", "Passport ", "Visa "],
                Mauritius: ["Id Card ", "Passport "],
                Mexico: ["Aguascalientes Driving License ", "Baja California Driving License ", "Baja California Sur Driving License ", "Campeche Driving License ", "Chiapas Driving License ", "Chihuahua Driving License ", "CNS Id Card ", "Colima Driving License ", "Consular Id Card ", "Driving License ", "Durango Driving License ", "Guanajuato Driving License ", "Guerrero Driving License ", "Hidalgo Driving License ", "Immigrant's card ", "Jalisco Driving License ", "Mexico City Driving License ", "Mexico Driving License ", "Michoacan Driving License ", "Morelos Driving License ", "Nuevo Leon Driving License ", "Oaxaca Driving License ", "Passport ", "Police Card ", "Profesional Id Card ", "Puebla Driving License ", "Queretaro Driving License ", "Quintana Roo Driving License ", "Quintana Roo Registration Certificate ", "Registration Certificate ", "Residence Permit ", "San Luis Potosi Driving License ", "Seaman's Identity Document", "SEDESOL Card ", "SEP Id Card ", "Sinaloa Driving License ", "Social Security Card ", "Sonora Driving License ", "Tabasco Driving License ", "Tamaulipas Driving License ", "Tlaxcala Driving License ", "Veracruz Driving License ", "Visa ", "Voting Card ", "Yucatan Driving License ", "Zacatecas Driving License "],
                "Micronesia, Federated States of": ["Chuuk Driving License ", "Driving License ", "Id Card ", "Passport "],
                "Moldova, Republic of": ["Crew member certificate ", "Driver Card ", "Driver Training Certificate ", "Driving License ", "ePassport ", "Firearms Permit ", "Id Card ", "Lawyer Card ", "Passport ", "Police Card ", "Qualification Driving License ", "Registration Certificate ", "Residence permit ", "Seafarer's Identity Document ", "Visa "],
                Monaco: ["ePassport ", "Id Card "],
                Mongolia: ["Diplomatic Id Card ", "Driving License ", "ePassport ", "Id Card ", "Passport ", "Travel Document ", "Visa "],
                Montenegro: ["Diplomatic Id Card ", "Driver Card ", "Driving License ", "ePassport ", "Id Card ", "Registration Certificate ", "Residence permit "],
                Montserrat: ["Passport ", "Police Card "],
                Morocco: ["Diplomatic Card ", "Driving License ", "ePassport ", "Id Card ", "Passport ", "Registration Card ", "Registration Certificate ", "Residence permit ", "Visa "],
                Mozambique: ["Driving License ", "Emergency Certificate ", "ePassport ", "Id Card ", "Passport ", "Refugee Card ", "Residence permit ", "Visa "],
                Myanmar: ["Driving License ", "Immigration Card ", "Passport ", "Seaman's Identity Document ", "Visa ", "Work Permit "],
                Namibia: ["Driving License ", "ePassport ", "Id Card ", "Passport", "Visa ", "Voter Card "],
                Nauru: ["Passport "],
                "Nepal(27 document(s))": [],
                Nepal: ["Certifiate of Citizenship ", "Driving License ", "Id Card ", "PAN Id Card ", "Passport ", "Professional Driving License ", "Voting Card "],
                Netherlands: ["Army Id Card ", "Diplomatic Id Card ", "Driver Card ", "Driver Training Certificate ", "Driving License ", "ePassport ", "Health Insurance Card ", "Id Card ", "Passport ", "Residence permit ", "Vehicle License ", "Visa ", "W Document "],
                "New Zealand": ["Alcohol Interlock Driving License ", "Driving License ", "ePassport ", "Learner Driving License ", "Limited Driving License ", "Passport ", "Restricted Driving License ", "Visa ", "Zero Alcohol Driving License "],
                Nicaragua: ["Consular Id Card ", "Driving License ", "Id Card ", "Passport ", "Residence Permit "],
                Niger: ["Passport "],
                Nigeria: ["Driving License ", "ePassport ", "Id Card ", "Passport ", "Residence permit ", "Visa ", "Voter Card "],
                Niue: ["Driving License "],
                "Northern Cyprus": ["ePassport ", "Id Card "],
                "Northern Mariana Islands": ["Driving License "],
                Norway: ["Armed Forces Id Card ", "Driver Training Certificate ", "Driving License ", "ePassport ", "Health Insurance Card ", "Id Card ", "Passport ", "Qualification Driving License ", "Residence Permit ", "Visa "],
                OAS: ["Passport ", "Laissez Passer "],
                OECS: ["Laissez Passer "],
                Oman: ["Driving License ", "ePassport ", "Id Card ", "Passport ", "Resident Card ", "Seaman's Identity Document ", "Visa "],
                Pakistan: ["Driving License ", "Health Card ", "Id Card ", "Khyber Pakhtunkhwa Driving License ", "Lahore Police License ", "Passport ", "Visa "],
                Palau: ["Driving License ", "Passport "],
                "Palestine, State of": ["Driving License ", "ePassport ", "Id Card ", "Passport ", "Travel Document "],
                Panama: ["Driving License ", "ePassport ", "Id Card ", "Immigration Card ", "Passport ", "Residence permit ", "Seaman's Book ", "Visa "],
                "Papua New Guinea": ["Driving License ", "Id Card ", "Passport ", "Visa "],
                Paraguay: ["Certificate of Return ", "Credential Card ", "Diplomatic Card ", "Driving License ", "ePassport ", "Id Card ", "Passport ", "Registration Certificate ", "Residence Permit ", "Temporary Residence Permit ", "Visa "],
                Peru: ["Driving License ", "ePassport ", "Id Card ", "Laissez Passer ", "Passport ", "Police Card ", "Police Registration Certificate ", "Residence permit", "Visa "],
                Philippines: ["Company card  ", "Driving License ", "ePassport ", "Firearm License ", "HDMF Transaction Card ", "Health Card ", "Id Card ", "OFW eCard ", "PagIBIG Card ", "Passport ", "Permanent Resident Card ", "Postal Id Card ", "Professional Driving License ", "Professional Id Card ", "Seafarers' Id Card ", "Seafarer's Passport ", "Senior Citizens Card ", "Social Security Card ", "Student Driving License ", "Tax Card ", "Tax Document ", "UMID Card ", "Visa ", "Voting Card "],
                Poland: ["Armed Forces Id Card ", "Diplomatic Id Card ", "Driver Card ", "Driver Training Certificate ", "Driving License ", "ePassport ", "Health Insurance Card ", "Id Card ", "Parking Card ", "Passport ", "Pole's Card ", "Registration Certificate ", "Residence Permit ", "Seaman's book ", "Temporary Registration Certificate ", "Temporary Residence Card ", "Vehicle Passport ", "Visa "],
                Portugal: ["Diplomatic certificate ", "Driver Card ", "Driver Training Certificate ", "Driving License ", "ePassport ", "Health Insurance Card ", "Id Card ", "Passport ", "Permanent Residence Certificate ", "Qualification Driving License ", "Registration Certificate ", "Residence Card ", "Residence permit ", "Visa "],
                "Puerto Rico": ["Driving License ", "Id Card ", "Voting Card "],
                Qatar: ["Driving Licence ", "ePassport ", "Health Card ", "Id Card ", "Military Id Card ", "Passport ", "Resident Id Card ", "Resident Permit ", "Vehicle Registration Card ", "Visa "],
                Romania: ["Driver Training Certificate ", "Driving Card ", "Driving License ", "ePassport ", "Green Card ", "Health Card ", "Health Insurance Card ", "Id Card ", "Passport ", "Qualification Driving License ", "Registration Certificate ", "Residence permit ", "Resident Identity Card ", "Visa "],
                "Russian Federation": ["Certificate of birth ", "Certificate of divorce ", "Certificate of marriage ", "Certificate of return ", "Consular Id Card ", "Crew member certificate ", "Diplomatic Id Card ", "Driver Card ", "Driver Training Certificate ", "Driving License ", "Entrepreneur Registration Certificate ", "ePassport ", "eVisa Notification", "Firearm Permit ", "Health Insurance ", "Identity Card for Residence ", "License Card ", "Migration Card ", "Moscow Social Card", "Passport ", "Registration Certificate ", "Registration Stamp ", "Seafarer's Identity Document ", "Seafarer's Passport", "Seaman's book ", "Service Id Card ", "SNILS Card ", "Soldier Card ", "Tax Registration Certificate ", "Vehicle Passport ", "Visa ", "Work Permit "],
                Rwanda: ["Driving License ", "ePassport ", "Id Card ", "Passport ", "Visa "],
                "Saint Helena, Ascension and Tristan da Cunha": ["Passport "],
                "Saint Kitts and Nevis": ["Driving License ", "ePassport ", "Id Card ", "Passport "],
                "Saint Lucia": ["Driving License ", "Id Card ", "Passport "],
                "Saint Martin (French part)": ["Driving License ", "Id Card "],
                "Saint Vincent and the Grenadines": ["Driving License ", "ePassport ", "Id Card ", "Passport "],
                Samoa: ["Driving License ", "Passport "],
                "San Marino": ["Driving License ", "ePassport ", "Id Card ", "Id Carte ", "Passport"],
                "Sao Tome and Principe": ["Diplomatic Id Card ", "ePassport ", "Passport ", "Visa "],
                "Saudi Arabia": ["Driving License ", "Health Card ", "Id Card ", "Passport ", "Residence permit ", "Vehicles registrarion ", "Visa "],
                Senegal: ["Driving License ", "ePassport ", "Id Card ", "Passport ", "Visa ", "Voter Card "],
                Serbia: ["Diplomatic Id Card ", "Driver Card ", "Driver Training Certificate ", "Driving License ", "ePassport ", "Health Card ", "Id Card ", "Laissez-Passer ", "Police Id Card ", "Qualification Driving License ", "Registration Certificate ", "Temporary residence ", "Visa "],
                Seychelles: ["Driving License ", "Id Card ", "Passport "],
                "Sierra Leone": ["Driving License ", "ePassport ", "Id Card ", "Passport ", "Social Security Card ", "Visa ", "Voter Card "],
                Singapore: ["Armed Forces Driving License ", "Armed Forces Id Card ", "Driving License ", "Employment Pass ", "Entre Pass ", "ePassport ", "Id Card ", "Immigration Card ", "Passport ", "S Pass ", "Visa ", "Visit Pass ", "Work Pass ", "Work Permit "],
                "Sint Maarten (Dutch part)": ["Driving License ", "Id Card "],
                Slovakia: ["Border Crossing Card ", "Diplomatic Id Card ", "Driver Card ", "Driver Training Certificate ", "Driving License ", "ePassport ", "Id Card ", "Passport ", "Permission to the Local Border Traffic ", "Qualification Driving License ", "Registration Certificate ", "Residence  permit ", "Visa "],
                Slovenia: ["Driver Card ", "Driver Training Certificate ", "Driving Licence ", "ePassport ", "Health Insurance Card ", "Id Card ", "Obmejna Prepustnica ", "Passport ", "Qualification Driving License ", "Registration Certificate ", "Residence Permit ", "Visa "],
                "Solomon Islands": ["ePassport ", "Passport "],
                Somalia: ["Armed Forces Id Card ", "Driving License ", "ePassport ", "Id Card ", "NCSC Card ", "Passport ", "Registration Certificate ", "Visa ", "Work Permit "],
                Somaliland: ["Driving License ", "Id Card ", "Immigration Travel Document ", "Passport ", "Voter Card "],
                "South Africa": ["Certificate Of Competency ", "Certificate of Identity ", "Certificate Of Proficiency ", "Crew member certificate ", "DCS Card ", "Driving License ", "GPW Card ", "Id Book ", "Id Card ", "Passport ", "SARS Card ", "Visa "],
                "South Ossetia": ["Passport"],
                "South Sudan": ["Driving License ", "ePassport ", "Id Card", "Residence permit", "Visa"],
                "Sovereign Military Order Of Malta": ["ePassport"],
                Spain: ["Diplomatic Id Card", "Driver Training Certificate", "Driving Card", "Driving License", "ePassport", "Health Card", "Health Insurance Card", "Id Card", "Qualification Driving License", "Resident Certificate", "Seaman's book", "Visa"],
                "Sri Lanka": ["Driving License ", "Id Card ", "Seafarer's Passport", "Work Permit"],
                Sudan: ["Alien Residence Permit", "Driving License", "Id Card", "Military Driving License Card", "Military Health Insurance Card ", "Passport", "Residence permit", "Visa"],
                Suriname: ["Driving License", "Id Card", "Passport", "Visa"],
                Swaziland: ["Driving License", "Id Card", "Passport"],
                Sweden: ["Card Provisional", "Criminal police certificate", "Diplomatic Id Card", "Driver Card", "Driver Training Certificate", "Driving License", "ePassport ", "Health Insurance Card", "Id Card", "Passport ", "Qualification Driving License ", "Residence Card", "Residence Permit", "Seaman's Passport", "SEB Id Card ", "Sparbank ID Card ", "Tax Id Card", "Visa "],
                Switzerland: ["Driver Card ", "Driver Training Certificate", "Driving License", "Health Insurance Card", "Id Card", "Qualification Driving License", "Residence permit ", "Travel Card", "Visa "],
                "Syrian Arab Republic": ["Travel Card", "Driving License For The Disabled ", "Agricultural Vehicle Driving License ", "Motorcycle Driving License", "Passport", "Private Driving License", "Public Works Driving License", "Universal Driving License", "Visa"],
                "Taiwan, Province of China": ["Driving License", "Entry and Exit Permit", "ePassport", "Id Card", "Passport", "Re-Entry Permit", "Resident Certificate", "Seafarer's Passport", "Visa"],
                Tajikistan: ["Driving License", "ePassport", "Id Card ", "Passport ", "Registration Certificate", "Visa"],
                "Tanzania, United Republic of": ["Driving License", "ePassport", "Id Card", "Passport", "Visa", "Voting Card"],
                Thailand: ["Driving License", "ePassport", "Foreigners Id Card", "Id Card", "Passport", "Seaman's Identity Document", "Visa"],
                "Timor-Leste": ["Driving License ", "ePassport", "Passport", "Residence permit"],
                Togo: ["Driving License", "ePassport", "Id Card ", "Visa", "Voting Card"],
                Tonga: ["Driving License ", "Id Card", "Passport "],
                Transnistria: ["Driving License"],
                "Trinidad and Tobago": ["Driving License ", "Id Card", "Passport "],
                Tunisia: ["Driving License", "Passport ", "Residence Permit", "Visa"],
                Turkey: ["Accomodation Facilty Id Card", "Address proof", "Aquaculture License", "Passport ", "Crew member certificate", "Deputy Id ", "Diplomatic Card ", "Driver Training Certificate", "Driving License", "Entry Visa ", "ePassport ", "Foreigner Id Card", "Handgun Carry Permit", "Id Card ", "Lawyer Identity Certificate", "Passport ", "Press Card ", "Professional Id Card", "Registration Certificate", "Residence Permit", "Retired Introduction Card", "Seamen's Book", "Temporary Protection Id Card ", "Turkcell GSM invoice ", "Visa ", "Vodafone GSM invoice ", "Work Permit "],
                Turkmenistan: ["Certificate of Return", "Driving License ", "ePassport ", "Passport ", "Refugee Document ", "Resident Permit ", "Stateless Document ", "Visa"],
                "Turks and Caicos Islands": ["Driving License ", "Id Card ", "Passport"],
                Tuvalu: ["Id Card ", "Passport"],
                Uganda: ["Driving License ", "ePassport", "Id Card ", "Passport ", "Travel Document ", "Visa ", "Voting Card "],
                Ukraine: ["Certificate of Return", "Crew member certificate", "Diplomatic Card", "Driver Card", "Driving License", "Driving Training Certificate", "ePassport", "Id Card ", "Passport", "Pensioner Id Card", "Registration Certificate", "Residence Permit", "Social Security Card ", "Stateless Travel Document", "Travel Document of a Child", "Visa"],
                "United Arab Emirates": ["Abu Dhabi Driving License", "Airport Employment Card ", "Airport Immigration", "Ajman Employment Card ", "Driving Licence Abu Dhabi", "Driving Licence Ajman", "Driving Licence Ras Al Khaimah", "Driving Licence Umm Al Quwain", "Driving License", "Dubai Driving License", "E-Card ", "ePassport", "Health Card ", "Id Card", "Identity", "Labour Card", "Passport", "Police Card", "Registration Certificate", "Residence Id Card ", "Sharjah Driving License", "Tag Card", "Visa"],
                "United Kingdom": ["Airport Entry Permit", "Alien Residence Permit", "Army Card ", "CSCS Card", "Driver Card ", "Driver Training Certificate ", "Driving License", "ePassport", "Health Insurance Card", "Id Card", "NHS Medical Card ", "Passport ", "Proof of Age Card", "Provisional Driving License", "Qualification Driving License", "Registration Card", "Residence Card", "Residence Documentation", "Residence permit", "Seaman's book", "Visa"],
                "United Nations Organization": ["Certificate", "Driving License", "Family Certificate", "Id Card", "Laissez Passer", "UNHCR Card"],
                "United States": ["Alabama Commercial Driving License ", "Alabama Graduated Driving License ", "Alabama Id Card ", "Alabama Vessel License", "Alaska Commercial Driving License ", "Alaska Commercial Driving License And Motorcycle", "Alaska Driving License", "Alaska Driving License And Motorcycle", "Alaska Id Card ", "Alaska Motorcycle License", "Alaska Provisional License", "Alien Registration Card", "Alien Resident Card", "Arizona Commercial Driving License ", "Arizona Driving License", "Arizona Graduated Driving License", "Arizona Id Card", "Arizona Instruction Permit ", "Arkansas Commercial Driving License ", "Arkansas Driving License ", "Arkansas Id Card ", "Arkansas Intermediate Driving License", "Arkansas Learner's Driving License", "Armed Forces Id Card", "Border Crossing Card ", "California Commercial Driving License", "California Driving License", "California Id Card", "California Oakland Id Card ", "California Photo Card", "California Probationary Vehicle Salesperson License ", "California San Francisco Id Card ", "California Tribal Card ", "Colorado Driving License", "Colorado Id Card ", "Colorado Instruction Permit ", "Colorado Probationary Driving License", "Colorado Restricted Permit ", "Connecticut Adult Learner Permit ", "Connecticut Commercial Driving License ", "Connecticut Driving License ", "Connecticut Id Card ", "Delaware Commercial Driving License", "Delaware Driving License", "Delaware Id Card", "Department of Defense Id and Privilege Card", "Department of State Driving License ", "Department of State Tax Card", "Dept of Veterans Affairs Id Card ", "Diplomatic Driving License ", "Dispatch Driving License", "District Of Columbia Commercial Driving License", "District Of Columbia Driving License", "District Of Columbia Id Card ", "District Of Columbia Learner's Permit", "District Of Columbia Provisional Driving License", "District Of Columbia Temporary Driving License", "Employment Authorization Card", "ePassport", "Florida Commercial Driving License", "Florida Concealed Firearm License", "Florida Driving License", "Florida Id Card ", "Florida Learner License", "Georgia Driving License", "Georgia Id Card", "Georgia Inmate Commercial Driving License", "Georgia Instructional Permit", "Georgia Interim Commercial Driving License ", "Georgia Interim Driving License", "Georgia Interim Id Card", "Georgia Interim Instructional Permit", "Georgia Limited Permit", "Georgia Photo Card ", "Georgia Provisional Driving License", "Georgia Voter Id Card", "Georgia Weapons Carry License", "Global Entry Id Card", "Government Geneva Conventions Forces Id ", "Government Id and Privilege Card ", "Government Id Card", "Hawaii Commercial Driving License", "Hawaii Driving License", "Hawaii Id Card ", "Hawaii Id Certificate", "Id Card ", "Idaho Commercial Driving License", "Idaho Driving License", "Idaho Id Card", "Idaho Instruction Permit", "Idaho Motorcycle Instruction Permit", "Illinois Commercial Driving License", "Illinois Driving License", "Illinois Firearm Id Card", "Illinois Id Card", "Illinois Non-Domiciled Commercial Driving License", "Illinois Temporary Driving License", "Illinois Temporary Id Card ", "Illinois Temporary Visitor Driving License ", "Indiana Amend Operator License ", "Indiana Chauffeur License", "Indiana Commercial Driving License", "Indiana Id Card ", "Indiana Learner Permit", "Indiana Operator License", "Indiana Probationary Operator License", "Indiana Public Passenger Chauffeur License", "Iowa Commercial Driving License", "Iowa Driving License", "Iowa Id Card ", "Iowa Instruction Permit", "Iowa Intermediate Driving License", "Iowa Racing and Gaming Commission Card", "Iowa Temporary Driving License", "Iowa Temporary Id Card", "Kansas Commercial Driving License ", "Kansas Concealed Carry License", "Kansas Driving License", "Kansas Id Card", "Kansas Learner's Permit", "Kentucky Commercial Driving License ", "Kentucky Driving License ", "Kentucky Id Card ", "Kentucky Instruction Permit", "Louisiana Chauffeur's License", "Louisiana Commercial Driving License", "Louisiana Driving License", "Louisiana Driving License Restricted", "Louisiana Id Card", "Louisiana Temporary Instructional Permit", "Maine Commercial Driving License ", "Maine Driving License", "Maine Id Card", "Maryland Commercial Driving License", "Maryland Driving License", "Maryland Id Card ", "Maryland Learner's Instructional Permit", "Maryland Provisional Driving License", "Massachusetts Commercial Driving License", "Massachusetts Driving License", "Massachusetts Firearm License", "Massachusetts Id Card", "Massachusetts Liquor Id Card ", "Massachusetts Operate Driving License", "Merchant Mariner Credential ", "Michigan Chauffeur License", "Michigan Commercial Driving License", "Michigan Driving License", "Michigan Enhanced Chauffeur License", "Michigan Enhanced Commercial Driving License", "Michigan Enhanced Driving License", "Michigan Enhanced Graduated Driving License ", "Michigan Enhanced Id Card", "Michigan Graduated Driving License", "Michigan Id Card ", "Michigan Operator License ", "Minnesota Commercial Driving License ", "Minnesota Driving License", "Minnesota Enhanced Driving License ", "Minnesota Enhanced Id Card", "Minnesota Id Card", "Minnesota Instruction Permit ", "Minnesota Motorized Driving License", "Minnesota Provisional Driving License", "Mississippi Commercial Driving License", "Mississippi Driving License", "Mississippi Firearms Permit", "Mississippi Id Card", "Mississippi Intermediate Driving License", "Mississippi Learner Permit", "Mississippi Light Commercial Driving License", "Mississippi Non-US Citizen Driving License", "Mississippi Sex Offender", "Missouri Commercial Driving License", "Missouri Commercial New Permit ", "Missouri Driving License", "Missouri Id Card", "Missouri Instruction Permit", "Missouri Intermediate Driving License", "Missouri New Permit", "Missouri Renewal Permit", "Montana Commercial Driving License", "Montana Driving License", "Montana Id Card", "Montana Temporary Driving License ", "Montana Temporary Id Card", "Montana Tribal Card", "Nebraska Commercial Driving License ", "Nebraska Driving License ", "Nebraska Employment Driving Permit", "Nebraska Id Card", "Nebraska Ignition Interlock Permit", "Nebraska Interim Driving License", "Nebraska Learners Permit", "Nebraska Operators License ", "Nebraska Restricted Commercial Driving License ", "Nebraska Seasonal Permit", "Nevada Commercial Driving License", "Nevada Driver Authorization Card", "Nevada Driving License", "Nevada Id Card", "Nevada Instruction Permit", "Nevada Limited-Term Driving License", "Nevada Limited-Term Id Card", "Nevada Seasonal Resident Id Card", "Nevada Temporary Driving License", "New Hampshire Commercial Driving License", "New Hampshire Driving License", "New Hampshire Id Card", "New Hampshire Temporary Driving License", "New Jersey Commercial Driving License", "New Jersey Driving License", "New Jersey Health Card", "New Jersey Id Card", "New Jersey Operator License", "New Jersey Probationary Auto License", "New Jersey Provisional Auto License", "New Mexico Alternative Id Card", "New Mexico Commercial Driving License", "New Mexico Commercial Learner Permit", "New Mexico Driving Authorization Card", "New Mexico Driving License", "New Mexico Id Card", "New Mexico Provisional Driving License", "New Mexico Restricted Driving License", "New York City Id Card", "New York Commercial Driving License", "New York Commercial Learner Permit", "New York Conditional Driving License", "New York Driving License ", "New York Driving License Temporary Visitor", "New York Enhanced Commercial Driving License", "New York Enhanced Driving License", "New York Enhanced Id Card", "New York Enhanced Learner Permit", "New York Enhanced Restricted Use Driving License ", "New York Id Card", "New York Learner Permit", "New York Learner Permit Temporary Visitor", "New York Restricted Use Driving License", "NEXUS Id Card ", "North Carolina Commercial Driving License", "North Carolina Driving License", "North Carolina Full Provisional License", "North Carolina Id Card", "North Carolina Learner Permit ", "North Carolina Limited Learner Permit ", "North Carolina Limited Provisional License", "North Carolina Motorcycle Learner Permit", "North Carolina Temporary Commercial Driving License", "North Carolina Temporary Driving License", "North Carolina Temporary Id Card", "North Carolina Temporary Learner Permit ", "North Dakota Commercial Driving License ", "North Dakota Driving License", "North Dakota Id Card ", "North Dakota Instruction Permit", "Ohio Commercial Driving License ", "Ohio Commercial Driving License Novice ", "Ohio Commercial Learner Permit ", "Ohio Driving License", "Ohio Driving License Novice", "Ohio Id Card", "Ohio Temp Instr Permit ID ", "Ohio Temporary Permit", "Oklahoma Commercial Driving License", "Oklahoma Driving License ", "Oklahoma Id Card", "Oklahoma Intermediate Driving License", "Oklahoma Learner Permit", "Oklahoma Tribal Card", "Oregon Commercial Driving License ", "Oregon Commercial Learner Permit ", "Oregon Driving License", "Oregon Id Card", "Oregon Instruction Permit", "Oregon Provisional Driving License ", "Oregon Provisional Instruction Permit", "Oregon Temporary Driving License", "Oregon Temporary Id Card", "Oregon Temporary Instruction Permit", "Passport", "Passport Card", "Pennsylvania Commercial Driving License ", "Pennsylvania Driving License", "Pennsylvania Id Card", "Pennsylvania Junior Driving License", "Pennsylvania Limited License", "Pennsylvania Voting Card", "Permanent Resident Card", "Permit to Re-enter", "PIV", "Refugee Travel Document", "Rhode Island Commercial Driving License ", "Rhode Island Driving License ", "Rhode Island Id Card", "Seafarer's Passport", "Sentri Id Card", "Social Security Card", "South Carolina Beginner Permit", "South Carolina Commercial Driving License", "South Carolina Driving License ", "South Carolina Id Card", "South Carolina Temporary Driving License", "South Dakota Commercial Driving License", "South Dakota Driving License", "South Dakota Id Card", "South Dakota Instruction Permit ", "South Dakota Operator License ", "South Dakota Restricted Permit License", "Tennessee Certificate for Driving", "Tennessee Commercial Driving License ", "Tennessee Driving License", "Tennessee Handgun Carry Permit", "Tennessee Id Card", "Tennessee Interim Commercial Driving License", "Tennessee Interim Driving License", "Tennessee Interim Id Card", "Tennessee Interim Intermediate Restricted Driving License ", "Tennessee Interim Restricted Driving License", "Tennessee Intermediate Restricted Driving License ", "Tennessee Learner Permit ", "Tennessee Restricted Driving License", "Tennessee Temporary Driving License ", "Tennessee Temporary Id Card ", "Texas Commercial Driving License ", "Texas Commercial Learner Permit ", "Texas Driving License", "Texas Driving License Temporary Visitor", "Texas Id Card", "Texas Id Card Temporary Visitor ", "Texas Learner Driving License", "Texas Learner Driving License Temporary Visitor", "Texas License to Carry Handgun", "Texas Occupational Driving License ", "Texas Private Security License ", "Texas Provisional Driving License", "Texas Security Registration", "Texas Voting Card", "Transportation Worker Identification Credential", "TWIC Card", "Uniformed Services Id and Privilege Card", "Uniformed Services Id Card", "Uniformed Services Id Card Reserve Retired", "Uniformed Services Id Card Retired", "Utah Commercial Driving License ", "Utah Driving License ", "Utah Id Card ", "Vermont Commercial Driving Permit ", "Vermont Driving License ", "Vermont Enhanced Driving License", "Vermont Enhanced Id Card", "Vermont Enhanced Operator's License", "Vermont Id Card", "Vermont Operator's License", "Veteran Id Card", "Virginia Children's Id Card", "Virginia Commercial Driving License ", "Virginia Driving License ", "Virginia Driving License", "Virginia Id Car", "Virginia Instruction Permit", "Virginia Learner's Permit", "Visa", "Washington Commercial Driving License", "Washington Driving License ", "Washington Enhanced Commercial Driving License", "Washington Enhanced Driving License", "Washington Enhanced Id Card", "Washington Id Card", "Washington Instruction Permit", "Washington Intermediate Driving License ", "Washington Non-Domiciled Commercial Driving License", "West Virginia Commercial Driving License", "West Virginia Commercial Instruction Permit ", "West Virginia Driving License ", "West Virginia Id Card", "West Virginia Instruction Permit", "West Virginia Intermediate Driving License ", "West Virginia Operate Id Card", "Wisconsin Commercial Driving License", "Wisconsin Driving License", "Wisconsin Id Card", "Wisconsin Instruction Permit", "Wisconsin Oneida Tribe Of Indians Id Card", "Wisconsin Probationary Driving License", "Wyoming Commercial Driving License", "Wyoming Concealed Firearm Permit", "Wyoming Driving License", "Wyoming Id Card"],
                Uruguay: ["Driving License", "ePassport", "Id Card", "Passport", "Visa"],
                Uzbekistan: ["Driving License", "ePassport", "Id Card", "Passport", "Registration Certificate", "Travel Document for Return", "Visa"],
                Vanuatu: ["Driving License", "Passport", "Registration Card"],
                "Venezuela, Bolivarian Republic of": ["Driving License", "Document", "ePassport", "Id Card", "Passport", "Visa"],
                "Viet Nam": ["Driving License", "Id Card", "Military Id Card", "Passport", "Temporary Residence Card", "Visa"],
                "Virgin Islands, British": ["Driving License", "Passport"],
                "Virgin Islands, U.S.": ["Virgin Islands Driving License"],
                "Western Sahara": ["Id Card", "Passport"],
                Yemen: ["Driving License", "Id Card", "Passport", "Visa"],
                Yugoslavia: ["Passport"],
                Zambia: ["Driving License", "Id Card", "Passport", "Registration Card", "Visa", "Voting Card"],
                Zimbabwe: ["Driving License", "Id Card", "Passport", "Visa"]
            };
        return {
            getCountryData: function() {
                return t
            },
            getIdData: function(e) {
                return i[e]
            }
        }
    }
    angular.module("signzySandbox").service("idIntelligenceFactory", e), e.$inject = ["$http", "$timeout"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c, u, p) {
        a.loading = !1, a.consent = !1;
        a.data = {
            files: [],
            response: {},
            uid: "",
            name: ""
        }, a.fileUpload = function(e, t) {
            o.File.upload(a.data.files[t]).then(function(e) {
                console.log("Forgery File Uploaded", e), a.data.files[t] = e.directURL
            }, function() {
                i.debug("File submitted, starting worker call", a.data.files)
            })
        }, a.createUrl = function(e) {
            a.loading = !0, console.log("createUrl");
            var i = {
                    task: "url",
                    uid: a.data.uid,
                    inputFile: a.data.files[0],
                    name: a.data.name,
                    multiPages: "true",
                    signatureType: e,
                    callbackUrl: "http://callback.development.signzy.tech/api/posts"
                },
                s = {
                    method: "POST",
                    url: n.getURLs().esign.createUrl + r.get("esignUserId") + "/aadhaaresigns",
                    headers: {
                        "Content-Type": "application/json",
                        Authorization: r.get("esignAccessToken")
                    },
                    data: i
                };
            t(s).then(function(e) {
                console.log("Received Create URL Response:", e), console.log("response.result.url", e.data.result.url), u.open(e.data.result.url, "Signzy ESign Module", "width=1280,height=1028"), a.loading = !1
            }, function(e) {
                console.log("error", e), a.loading = !1, angular.isDefined(e) && angular.isDefined(e.data) && angular.isDefined(e.data.error) && angular.isDefined(e.data.error.message) && e.data.error.message.length > 0 && e.data.error.message.toUpperCase().indexOf("PDF") > -1 ? p.error(e.data.error.message) : p.error("Request Limit Exceeded. Please contact sales for futher support")
            })
        }
    }
    angular.module("signzySandbox").controller("EsignController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv", "$window", "toastr"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c, u, p, g, m, f) {
        function h() {
            var e, a = 4.72,
                t = x.canvas.width,
                i = x.canvas.height,
                n = new Image;
            n.src = "./assets/images/checked.svg", e = S / 100 * Math.PI * 2 * 10, x.clearRect(0, 0, t, i), x.lineWidth = 5, x.fillStyle = "#d2cdcd", x.strokeStyle = "#94CE77", x.textAlign = "center", x.font = "25px monospace", x.drawImage(n, 35, 35, 30, 30), x.beginPath(), x.arc(50, 50, 40, a, e / 10 + a), x.stroke(), S >= A && clearTimeout(v), S++
        }

        function k() {
            var e, a = 4.72,
                t = C.canvas.width,
                i = C.canvas.height,
                n = new Image;
            n.src = "./assets/images/sprout.svg", e = R / 100 * Math.PI * 2 * 10, C.clearRect(0, 0, t, i), C.lineWidth = 5, C.fillStyle = "#d2cdcd", C.strokeStyle = "#16B6E0", C.textAlign = "center", C.font = "25px monospace", C.drawImage(n, 35, 35, 30, 30), C.beginPath(), C.arc(50, 50, 40, a, e / 10 + a), C.stroke(), R >= N && clearTimeout(b), R++
        }
        var v = "",
            b = "",
            y = c.get("username"),
            x = document.getElementById("circular-progress-bar1").getContext("2d"),
            C = document.getElementById("circular-progress-bar2").getContext("2d"),
            D = 0,
            I = 0,
            A = 0,
            S = 0,
            N = 100,
            R = 0;
        a.filterType = "month", a.viewType = "chart", a.apiList = [], a.apiListTable = [], a.excelData = [], a.tableView = [], a.dashboard = !1, a.dashboardSpinner = !1, a.fileDownloaded = !1, a.excelObj = {}, a.loading = !1, a.chatLoaded = !1, a.week = !1, a.month = !1, a.year = !1, a.view = !1, a.load = !1, a.monthData = null, a.weekData = null, a.totalData = null, a.datas = {
            downloadFile: {
                file: ""
            }
        };
        var w = function(e) {
                var a = e.split("/");
                return a[1] + "/" + a[0] + "/" + a[2]
            },
            L = function(e) {
                var a = new Date(w(e)).getTime() / 1e3,
                    t = a + 86400,
                    i = new Date(1e3 * t);
                return i.getMonth() + 1 + "/" + i.getDate() + "/" + i.getFullYear()
            },
            P = function(e) {
                var a = e.getDate() + 1,
                    t = e.getMonth() + 1,
                    i = e.getFullYear();
                return 10 > a && (a = "0" + a), 10 > t && (t = "0" + t), e = t + "/" + a + "/" + i
            };
        a.bkColor = function(e) {
            return n.debug("index is ", e), a.colors[e % a.colors.length]
        }, a.getSelectedUsage = function() {
            a.load = !0;
            var e = {
                username: y,
                task: "userBased",
                startTime: new Date(L(a.selectedPatron.fromDate)).getTime() / 1e3,
                endTime: (new Date(L(a.selectedPatron.toDate)).getTime() + 864e5) / 1e3
            };
            t.post(l.getURLs().meter.userReport, e).then(function(e) {
                n.debug("d", e), a.datas.downloadFile = e.data.result, a.load = !1
            }, function(e) {
                f.error("Error in Downloading the Usage Report"), delete a.datas.downloadFile, n.debug("error", e)
            })
        }, a.active = function(e) {
            switch (a.filterType = e, a.tableView = [], a.loading = !0, a.excelData = [], a.fileDownloaded = !1, a.chatLoaded = !1, e) {
                case "year":
                    var t = T(a.apiName);
                    t ? a.canvas(t) : (a.view = !1, a.chatLoaded = !0, a.loading = !1);
                    break;
                default:
                case "week":
                    var i = F(a.apiName);
                    i ? a.canvas(i) : (a.view = !1, a.chatLoaded = !0, a.loading = !1);
                    break;
                case "month":
                    var i = U(a.apiName);
                    i ? a.canvas(i) : (a.view = !1, a.chatLoaded = !0, a.loading = !1)
            }
        }, a.apiClick = function(e) {
            a.apiName = e, a.excelData = [], a.fileDownloaded = !1;
            var t = document.querySelector(".magic-buttons .uk-active").innerHTML.toLowerCase();
            switch (n.debug("filterType", t), a.filterType = t, a.tableView = [], n.debug(a.apiName), a.loading = !0, a.chatLoaded = !1, t) {
                case "year":
                    var i = T(a.apiName);
                    i ? a.canvas(i) : (a.view = !1, a.chatLoaded = !0, a.loading = !1);
                    break;
                default:
                case "week":
                    var s = F(a.apiName);
                    s ? a.canvas(s) : (a.view = !1, a.chatLoaded = !0, a.loading = !1);
                    break;
                case "month":
                    var r = U(a.apiName);
                    r ? a.canvas(r) : (a.view = !1, a.chatLoaded = !0, a.loading = !1)
            }
        }, a.canvas = function(e) {
            a.view = !1, a.chatLoaded = !0, a.loading = !1, n.debug("Done....", e), a.labels = e.data, a.series = ["Usage"], a.data = [e.chart], a.onClick = function(e, a) {
                n.debug(e, a)
            }, a.options = {
                responsive: !0,
                elements: {
                    line: {
                        tension: 0
                    }
                },
                scales: {
                    yAxes: [{
                        type: "linear",
                        display: !0
                    }],
                    xAxes: [{
                        name: "year"
                    }]
                }
            }
        };
        var E = function(e) {
                var a = ["JANUARY", "FEBRUARY", "MARCH", "APRIL", "MAY", "JUNE", "JULY", "AUGUST", "SEPTEMBER", "OCTOBER", "NOVEMBER", "DECEMBER"];
                return a[parseInt(e)] + " " + (new Date).getFullYear().toString()
            },
            U = function(e) {
                var t = "",
                    i = [],
                    s = [];
                P = [];
                for (var r = (new Date).getDate() - 1; r >= 0; r--) i.push(O(r));
                if (n.debug("datas", i), a.excelData = [], a.tableView = [], a.weekData && Array.isArray(a.weekData) && a.weekData.length > 0) {
                    for (var r = 0; r < i.length; r++) {
                        for (var o = !1, l = 0; l < a.weekData.length; l++) {
                            var d = a.weekData[l].date.split("T")[0].split("-")[2] + "/" + a.weekData[l].date.split("T")[0].split("-")[1] + "/" + a.weekData[l].date.split("T")[0].split("-")[0];
                            if (console.log("date", d), console.log("datas[i]", i[r]), console.log("name", e), console.log("$scope.weekData[j].productNam", a.weekData[l].productName), a.weekData[l].productName == e && d == i[r]) {
                                a.weekData[l].monthName = a.weekData[l].date.split("T")[0].split("-")[2] + "-" + a.weekData[l].date.split("T")[0].split("-")[1] + "-" + a.weekData[l].date.split("T")[0].split("-")[0], a.weekData[l].total = a.weekData[l].count;
                                for (var c = !1, u = 0; u < a.tableView.length; u++) a.weekData[l].monthName == a.tableView[u].monthName && (c = !0, a.tableView[u].total += a.weekData[l].total, a.tableView[u].count += a.weekData[l].count);
                                console.log("$scope.tableView)", a.tableView), c || a.tableView.push(a.weekData[r])
                            }
                        }
                        if (!o) {
                            ({
                                productName: e,
                                monthName: i[r].replace(/\//gi, "-"),
                                total: 0
                            });
                            s.push(0)
                        }
                    }
                    var t = s,
                        p = {
                            chart: t,
                            data: i,
                            day: "year"
                        };
                    return p
                }
                return null
            },
            T = function(e) {
                var t = "",
                    i = [],
                    s = [];
                P = [], P.length = (new Date).getMonth() + 1, P.fill("");
                for (var r = 0; r < parseInt((new Date).getMonth()); r++) i.push(E(r));
                n.debug("datas", i), i = i.reverse(), a.excelData = [];
                var l = !1;
                if (a.monthData && Array.isArray(a.monthData) && a.monthData.length > 0) {
                    for (var r = 0; r < i.length; r++) {
                        if (l = !1, angular.forEach(a.monthData, function(o, d) {
                                if (n.debug("value.displayMonth", o.displayMonth), o.productName == e && i[r] == o.displayMonth) {
                                    n.debug("assaas", o.displayMonth), o.monthName = o.displayMonth, o.total = o.count, t = o.total, s.push(t), a.tableView.push(o);
                                    var c = {
                                        username: o.username,
                                        date: o.monthName,
                                        productId: o.productId,
                                        productName: o.productName,
                                        apiName: o.apiName,
                                        subApiName: o.subApiName,
                                        total: o.count
                                    };
                                    a.excelData.push(c), l = !0
                                }
                            }), !l) {
                            ({
                                productName: e,
                                monthName: i[r],
                                total: 0
                            });
                            s.push(0)
                        }
                        var t = s,
                            d = {
                                chart: t,
                                data: i,
                                day: "year"
                            }
                    }
                    return a.tableView = o.dateSort(a.tableView), d
                }
                return null
            },
            O = function(e) {
                var a = new Date;
                a.setDate(a.getDate() - e);
                var t = a.getDate();
                10 > t && (t = "0" + t);
                var i = a.getMonth() + 1;
                10 > i && (i = "0" + i);
                var n = t + "/" + i + "/" + a.getFullYear();
                return n
            },
            F = function(e) {
                var t = "",
                    i = [],
                    n = [];
                P = [];
                for (var s = 7; s >= 0; s--) console.log("assaas", O(s));
                if (a.excelData = [], a.weekData && Array.isArray(a.weekData) && a.weekData.length > 0) {
                    for (var s = 0; s < i.length; s++) {
                        var r = !1;
                        if (angular.forEach(a.weekData, function(n, r) {
                                var o = n.date.split("T")[0].split("-")[2] + "/" + n.date.split("T")[0].split("-")[1] + "/" + n.date.split("T")[0].split("-")[0];
                                if (n.productName == e && o == i[s]) {
                                    n.monthName = n.date.split("T")[0].split("-")[2] + "-" + n.date.split("T")[0].split("-")[1] + "-" + n.date.split("T")[0].split("-")[0], n.total = n.count, t = n.total, l = !0;
                                    for (var l = !1, d = 0; d < a.tableView.length; d++) n.monthName == a.tableView[d].monthName && (recFound = !0, a.tableView[d].total += n.total, a.tableView[d].count += n.count);
                                    l || a.tableView.push(n)
                                }
                            }), !r) {
                            ({
                                productName: e,
                                monthName: i[s].replace(/\//gi, "-"),
                                total: 0
                            });
                            n.push(0)
                        }
                    }
                    var t = n,
                        o = {
                            chart: t,
                            data: i,
                            day: "year"
                        };
                    return o
                }
                return null
            },
            M = function(e) {
                angular.forEach(e, function(t, i) {
                    a.apiName = e[0].productName;
                    var n = {
                        name: t.productName,
                        type: t.type,
                        successHits: t.success,
                        failedHits: t.failure
                    };
                    this.push(n), D += t.success, I += t.failure
                }, a.apiList), A = a.success = (D / (D + I) * 100).toFixed();
                var t = 2 * D / 8e3;
                a.save = t > 1 ? t.toFixed() : 0, a.dashboard = !0, a.dashboardSpinner = !1, v = setInterval(h, 50), b = setInterval(k, 50), a.totalProcessLoading = !1
            };
        a.totalProcess = function() {
            var t = c.get("username");
            if (t) {
                try {
                    var i = JSON.parse(localStorage.getItem("totalProcessCache"))
                } catch (n) {
                    var i = null
                }!i || !i.timestamp || ((new Date).getTime() - i.timestamp) / 1e3 > 3600 ? d.getAllData(t) : (a.totalData = i.data, M(i.data))
            } else e.go("home")
        }, a.$on("event:AllData", function(e, t) {
            a.totalData = t.cacheObj.data, M(t.cacheObj.data)
        }), a.weeklyProcess = function() {
            var t = c.get("userId");
            if (t) {
                try {
                    var i = JSON.parse(localStorage.getItem("weeklyCache"))
                } catch (n) {
                    var i = null
                }!i || !i.timestamp || ((new Date).getTime() - i.timestamp) / 1e3 > 3600 ? d.getWeeklyData(t) : a.weekData = i.data
            } else e.go("home")
        }, a.$on("event:weeklyData", function(e, t) {
            a.weekData = t.cacheObj.data
        }), a.monthlyProcess = function() {
            var t = c.get("userId");
            if (t) {
                try {
                    var i = JSON.parse(localStorage.getItem("monthlyCache"))
                } catch (n) {
                    var i = null
                }!i || !i.timestamp || ((new Date).getTime() - i.timestamp) / 1e3 > 3600 ? d.getMonthData(t) : a.monthData = i.data
            } else e.go("home")
        }, a.$on("event:monthlyData", function(e, t) {
            a.monthData = t.cacheObj.data
        }), a.start = function() {
            a.totalProcess(), a.weeklyProcess(), a.monthlyProcess(), a.apiClick(a.apiName)
        }, a.getFile = function() {
            a.fileDownloaded = !1, a.load = !0, d.getReport(a.excelData, "").then(function(e) {
                n.debug("fileOBj", e), a.excelObj = e, a.fileDownloaded = !0, a.load = !1
            }, function(e) {
                a.loading = !1, a.fileDownloaded = !1, a.load = !1
            })
        }, a.start()
    }
    angular.module("signzySandbox").controller("DashboardController", e), e.$inject = ["$state", "$scope", "$http", "$window", "$log", "Upload", "uploadSrv", "UtilsService", "URLService", "dashboardSrv", "$cookies", "$timeout", "grantSrv", "httpSrv", "$q", "toastr"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c) {
        a.loading = !1, a.compressedData = !1, a.wrongInput = !1;
        a.data = {
            converter_files: [],
            bank: "",
            quality: "MEDIUM"
        }, a.data.targetFormat = "tiff", a.banks = [{
            id: 1,
            name: "SBI"
        }], a.fileUpload = function(e, t) {
            n.upload({
                url: r.getURLs().persist.upload,
                data: {
                    file: e,
                    ttl: "3 years"
                }
            }).then(function(e) {
                console.log("COnverter Uploaded", e), a.data.converter_files[t] = e.data.file.directURL
            }, function(e) {
                i.debug("File submitted, starting worker call", a.data.converter_files)
            })
        }, a.overlays = [{
            x: 50,
            y: 155,
            w: 106,
            h: 29,
            color: "#00FF00"
        }], a.options = {
            zoom: {
                value: .5,
                step: .01
            },
            rotate: {
                value: 90
            }
        }, a.fileUploadForVideo = function(e, t) {
            s.File.upload(e, "", 91457280).then(function(e) {
                console.log("Forgery File Uploaded", e), a.data.converter_files[t] = e.directURL
            }, function() {
                i.debug("File submitted, starting worker call", a.data.videoUrl)
            })
        }, a.inputsFields = [
            ["", ""]
        ], a.compress = function() {
            delete a.data.error, a.loading = !0, a.wrongInput = !1;
            var e = {
                task: "compressimage",
                essentials: {
                    url: a.data.converter_files[0]
                }
            };
            console.log("inputData", e), c.createPlexus("converters", e).then(function(e) {
                console.log("plexusObj", e), a.data.converterData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.converterData, a.data.error = e, console.log("plexus error", e)
            })
        }, a.downloadFile = function() {
            var e = a.data.converterData.compressedPdf,
                t = e.substring(e.lastIndexOf("/") + 1),
                i = new XMLHttpRequest;
            i.open("GET", e, !0), i.responseType = "blob", i.onload = function() {
                var e = new Blob([i.response], {
                        type: "application/octetstream"
                    }),
                    a = !!document.documentMode;
                if (a) window.navigator.msSaveBlob(e, t);
                else {
                    var n = window.URL || window.webkitURL,
                        s = n.createObjectURL(e),
                        r = document.createElement("a");
                    r.setAttribute("download", t), r.setAttribute("href", s), document.body.appendChild(r), r.click(), document.body.removeChild(r)
                }
            }, i.send()
        }, a.compressPdf = function() {
            delete a.data.error, a.loading = !0, a.wrongInput = !1;
            var e = {
                task: "compresspdf",
                essentials: {
                    url: a.data.converter_files[0]
                }
            };
            console.log("inputData", e), c.createPlexus("converters", e).then(function(e) {
                console.log("plexusObj", e), a.compressedData = !0, a.data.converterData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.converterData, a.data.error = e, console.log("plexus error", e)
            })
        }, a.compressVideo = function() {
            delete a.data.error, a.loading = !0, a.wrongInput = !1;
            var e = {
                task: "compressvideo",
                essentials: {
                    url: a.data.converter_files[0],
                    quality: a.data.quality
                }
            };
            console.log("inputData", e), c.createPlexus("converters", e).then(function(e) {
                console.log("plexusObj", e), a.data.converterData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.converterData, a.data.error = e, console.log("plexus error", e)
            })
        }, a.checkDsc = function() {
            delete a.data.error, a.loading = !0, a.wrongInput = !1;
            var e = {
                task: "validatedsc",
                essentials: {
                    url: a.data.converter_files[0]
                }
            };
            console.log("inputData", e), c.createPlexus("converters", e).then(function(e) {
                console.log("plexusObj", e), a.data.converterData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.converterData, a.data.error = e, console.log("plexus error", e)
            })
        }, a.convert = function() {
            delete a.data.error, a.loading = !0, a.wrongInput = !1;
            var e = {
                task: "pdftojpg",
                essentials: {
                    urls: [a.data.converter_files[0]],
                    ttl: "10 mins"
                }
            };
            console.log("inputData", e), c.createPlexus("converters", e).then(function(e) {
                console.log("plexusObj", e), a.data.converterData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.converterData, a.data.error = e, console.log("plexus error", e)
            })
        }, a.convertTiff = function() {
            delete a.data.error, a.loading = !0, a.wrongInput = !1;
            var e = {
                task: "tifftojpg",
                essentials: {
                    urls: [a.data.converter_files[0]],
                    ttl: "10 mins"
                }
            };
            console.log("inputData", e), c.createPlexus("converters", e).then(function(e) {
                console.log("plexusObj", e), a.data.converterData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.converterData, a.data.error = e, console.log("plexus error", e)
            })
        }, a.convertImage = function() {
            delete a.data.error, a.loading = !0, a.wrongInput = !1;
            var e = {
                task: "imageConverter",
                essentials: {
                    url: a.data.converter_files[0],
                    targetFormat: a.data.targetFormat,
                    ttl: "10 mins"
                }
            };
            console.log("inputData", e), c.createPlexus("converters", e).then(function(e) {
                console.log("plexusObj", e), a.data.converterData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.converterData, a.data.error = e, console.log("plexus error", e)
            })
        }, a.runTemplator = function() {
            a.loading = !0, a.wrongInput = !1, delete a.data.error;
            for (var e = {
                    task: "docTemplator",
                    essentials: {
                        url: a.data.converter_files[0],
                        jsonData: {}
                    }
                }, t = 0, i = a.inputsFields.length; i > t; t++) e.essentials.jsonData[a.inputsFields[t][0]] = a.inputsFields[t][1];
            c.createPlexus("converters", e).then(function(e) {
                console.log("plexusObj", e), a.data.matchData = e.result, a.loading = !1
            }, function(e) {
                a.loading = !1, delete a.data.matchData, a.data.error = e, console.log("identity error", e)
            })
        }
    }
    angular.module("signzySandbox").controller("ConverterController", e), e.$inject = ["$state", "$scope", "$http", "$log", "Upload", "uploadSrv", "URLService", "$cookies", "$timeout", "grantSrv", "httpSrv"]
}(),
function() {
    "use strict";

    function e(e, a, t, i, n, s, r, o, l, d, c, u, p) {
        a.data = {
            files: [],
            api: void 0,
            emailId: void 0,
            emailSubject: void 0,
            callbackUrl: void 0,
            sampleUrl: "https://fail.com",
            emailIds: []
        }, a.loading = !1, a.loading1 = !1;
        a.enableResult = !1, a.enableStart = !0, a.apis = [{
            name: "PAN Verification API",
            value: "panVerification",
            sampleUrl: "https://signzy.xyz/cdn/files/csv/panVerification.csv"
        }, {
            name: "Driving Licence Verification API",
            value: "dlVerification",
            sampleUrl: "https://signzy.xyz/cdn/files/csv/dlVerification.csv"
        }, {
            name: "VoterID Verification API",
            value: "voteridVerification",
            sampleUrl: "https://signzy.xyz/cdn/files/csv/voteridVerification.csv"
        }, {
            name: "Aadhaar UID Masker API",
            value: "aadhaarMasker",
            sampleUrl: "https://signzy.xyz/cdn/files/csv/aadhaarMasker.csv"
        }, {
            name: "PAN to GST API",
            value: "pantoGst",
            sampleUrl: "https://signzy.xyz/cdn/files/csv/pantoGst.csv"
        }, {
            name: "GSTIN Search API",
            value: "gstinSearch",
            sampleUrl: "https://signzy.xyz/cdn/files/csv/gstinSearch.csv"
        }, {
            name: "Bank Account Verification",
            value: "bankAccountVerification",
            sampleUrl: "https://signzy.xyz/cdn/files/csv/bankAccountVerifications.csv"
        }, {
            name: "Vehicle Registration Basic Search",
            value: "basicSearch",
            sampleUrl: "https://signzy.xyz/cdn/files/csv/vehicleRegistrationBasicSearch.csv"
        }, {
            name: "Vehicle Registration Detailed Search",
            value: "detailedSearch",
            sampleUrl: "https://signzy.xyz/cdn/files/csv/vehicleRegistrationDetailedSearch.csv"
        }, {
            name: "ROC Simple Search",
            value: "rocSimpleSearch",
            sampleUrl: "https://signzy.xyz/cdn/files/csv/rocSimpleSearch.csv"
        }, {
            name: "Individual Pan Fetch",
            value: "individualPanFetch",
            sampleUrl: "https://signzy.xyz/cdn/files/csv/individualPanFetch.csv"
        }, {
            name: "Business Pan Fetch",
            value: "businessPanFetch",
            sampleUrl: "https://signzy.xyz/cdn/files/csv/businessPanFetch.csv"
        }, {
            name: "Detailed GSTIN Search API",
            value: "detailedgstin",
            sampleUrl: "https://signzy.xyz/cdn/files/csv/detailedgstin.csv"
        }, {
            name: "Negative Due Dilligence",
            value: "negativeDueDilligence",
            sampleUrl: "https://signzy.xyz/cdn/files/csv/negativeDueDilligence.csv"
        }, {
            name: "EPFO Name SearchV2 API",
            value: "epfoNameSearchesV2",
            sampleUrl: "https://signzy.xyz/cdn/files/csv/epfoNameSearchesV2.csv"
        }, {
            name: "PAN TO GST LIST API",
            value: "panToGstList",
            sampleUrl: "https://signzy.xyz/cdn/files/csv/panToGstList.csv"
        }, {
            name: "EPFO Detailed Search API",
            value: "detailedEstablishmentSearch",
            sampleUrl: "https://signzy.xyz/cdn/files/csv/detailedEstablishmentSearch.csv"
        }, {
            name: "Face Match API",
            value: "faceMatch",
            sampleUrl: "https://signzy.xyz/cdn/files/csv/faceMatch.csv"
        }, {
            name: "GST TO HSN API",
            value: "gstToHsn",
            sampleUrl: "https://signzy.xyz/cdn/files/csv/gstToHsn.csv"
        }, {
            name: "Name Match V2 API",
            value: "nameMatchv2",
            sampleUrl: "https://signzy.xyz/cdn/files/csv/nameMatchV2.csv"
        }, {
            name: "Pan Fetch V2 API",
            value: "panv2Fetch",
            sampleUrl: "https://signzy.xyz/cdn/files/csv/panv2fetch.csv"
        }], a.updateSampleUrl = function(e) {
            for (var t = 0; t < a.apis.length; t++) {
                var i = a.apis[t];
                e == i.value && (a.data.sampleUrl = i.sampleUrl)
            }
        }, a.isInvalid = function() {
            var e = a.data.files;
            return e && 1 == e.length && a.data.api && a.data.api && a.data.emailId && a.data.emailIds.length && a.data.emailSubject ? !1 : !0
        }, a.isInvalidTxn = function() {
            a.data.files;
            return a.data.transactionId ? !1 : !0
        }, a.getTransactionId = function() {
            a.data.transactionId = localStorage.getItem("batchmode_txnId") || ""
        }, a.filterEmails = function() {
            var e = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,
                t = [];
            a.data.emailId.indexOf(",") > -1 ? t = a.data.emailId.split(",") : t.push(a.data.emailId);
            for (var i = 0; i < t.length; i++) t[i] = t[i].trim(), e.test(t[i]) || t.splice(i, 1), t[i] || t.splice(i, 1);
            t && t.length > 0 ? a.data.emailIds = t : a.data.emailIds = []
        }, a.fileUpload = function(e, t) {
            o.File.upload(a.data.files[t], "12 hrs", 1024e5, "text/csv").then(function(e) {
                console.log("Forgery File Uploaded", e), a.data.files[t] = e.directURL
            }, function() {
                i.debug("File submitted, starting worker call", a.data.files)
            })
        }, a.startBatchModeProcess = function(e) {
            a.loading = !0, a.wrongInput = !1, delete a.data.error, a.data.url = a.data.files[0];
            var t = {
                task: "save",
                essentials: {
                    url: a.data.url,
                    apiName: a.data.api,
                    emailId: a.data.emailIds,
                    emailSubject: a.data.emailSubject,
                    callbackUrl: a.data.callbackUrl
                }
            };
            c.createPlexus("batchmodes", t).then(function(e) {
                console.log("Received Create URL Response:", e), a.transactionId = e.result.transactionId, a.data.batchmodeResponse = e.result, a.loading = !1, localStorage.setItem("batchmode_txnId", a.transactionId), l(function() {
                    console.log("calling getData blocked"), a.enableStart = !1, a.enableResult = !0
                }, 3e4)
            }, function(e) {
                console.log(e), a.loading = !1, a.data.batchmodeResponse = e, a.data.error = e, console.log("Batch mode error", e)
            })
        }, a.checkBatchModeStatus = function(e) {
            a.loading_txn = !0, a.wrongInput = !1, delete a.data.error;
            var t = {
                task: "fetchTransaction",
                essentials: {
                    transactionId: a.data.transactionId
                }
            };
            c.createPlexus("batchmodes", t).then(function(e) {
                console.log("Received Create URL Response:", e), a.transactionId = e.result.transactionId, a.data.batchmodeResponse = e.result, a.loading_txn = !1, l(function() {
                    console.log("calling getData blocked"), a.enableStart = !1, a.enableResult = !0
                }, 3e4)
            }, function(e) {
                a.loading_txn = !1, console.log("error"), console.log(e), 404 == e.error.status ? (a.data.batchmodeResponse = {
                    error: {
                        status: e.error.status
                    }
                }, p.error("You have entered an invalid Transaction Id. Please enter a correct Transaction Id")) : p.error("Request Limit Exceeded. Please contact sales for futher support")
            })
        }
    }
    angular.module("signzySandbox").controller("batchmodeController", e), e.$inject = ["$state", "$scope", "$http", "$log", "URLService", "UtilsService", "$cookies", "uploadSrv", "$timeout", "grantSrv", "httpSrv", "$window", "toastr"]
}(),
function() {
    "use strict";

    function e(e) {
        e.debug("runBlock end")
    }
    e.$inject = ["$log"], angular.module("signzySandbox").run(e)
}(),
function() {
    "use strict";

    function e(e, a) {
        e.state("home", {
            url: "/",
            templateUrl: "app/constants/authentication.html"
        }).state("userDashboard", {
            url: "/user-dashboard",
            templateUrl: "app/constants/user-dashboard.html",
            controller: "BodyController"
        }).state("apiStatus", {
            url: "/apiStatus",
            templateUrl: "app/constants/apiStatus.html"
        }).state("resetPassword", {
            url: "/reset-password",
            templateUrl: "app/reset-password/reset-password.html",
            controller: "ResetPasswordController"
        }).state("compressImage", {
            url: "/compressimage",
            templateUrl: "app/converters/compressimage.html",
            controller: "ConverterController"
        }).state("reorientid", {
            url: "/reorientid",
            templateUrl: "app/utils/reorientid.html",
            controller: "UtilsController"
        }).state("compressPdf", {
            url: "/compresspdf",
            templateUrl: "app/converters/compresspdf.html",
            controller: "ConverterController"
        }).state("compressVideo", {
            url: "/compressvideo",
            templateUrl: "app/converters/compressvideo.html",
            controller: "ConverterController"
        }).state("docxTemplator", {
            url: "/docx-templator",
            templateUrl: "app/converters/docx-templator.html",
            controller: "ConverterController"
        }).state("dscValidator", {
            url: "/dscvalidator",
            templateUrl: "app/converters/dscvalidator.html",
            controller: "ConverterController"
        }).state("pdfToJPG", {
            url: "/pdf-to-jpg",
            templateUrl: "app/converters/pdf-to-jpg.html",
            controller: "ConverterController"
        }).state("tiffToJPG", {
            url: "/tiff-to-jpg",
            templateUrl: "app/converters/tiff-to-jpg.html",
            controller: "ConverterController"
        }).state("imageConverter", {
            url: "/image-converter",
            templateUrl: "app/converters/image-converter.html",
            controller: "ConverterController"
        }).state("addressMatch", {
            url: "/address-match",
            templateUrl: "app/matchers/addressMatcher.html",
            controller: "MatcherController"
        }).state("nameMatch", {
            url: "/name-match",
            templateUrl: "app/matchers/nameMatcher.html",
            controller: "MatcherController"
        }).state("dateMatch", {
            url: "/date-match",
            templateUrl: "app/matchers/dateMatcher.html",
            controller: "MatcherController"
        }).state("addressGeocoder", {
            url: "/address-geocoder",
            templateUrl: "app/matchers/addressGeocoder.html",
            controller: "MatcherController"
        }).state("nameMatchv2", {
            url: "/name-match-v2",
            templateUrl: "app/matchers/nameMatcherv2.html",
            controller: "MatcherController"
        }).state("identitiesFlow", {
            url: "/identities-flow",
            templateUrl: "app/identities/identities-flow.html"
        }).state("aadhaarExtraction", {
            url: "/aadhaar-extraction",
            templateUrl: "app/identities/aadhaar/aadhaar-extraction.html",
            controller: "AadhaarController"
        }).state("aadhaarVerification", {
            url: "/aadhaar-verification",
            templateUrl: "app/identities/aadhaar/aadhaar-verification.html",
            controller: "AadhaarController"
        }).state("aadhaarFaceExtraction", {
            url: "/aadhaar-face-extraction",
            templateUrl: "app/identities/aadhaar/aadhaar-face-extraction.html",
            controller: "AadhaarController"
        }).state("aadhaarMasker", {
            url: "/aadhaar-masker",
            templateUrl: "app/identities/aadhaar/aadhaar-masker.html",
            controller: "AadhaarController"
        }).state("verifyAadhaar", {
            url: "/verify-aadhaar",
            templateUrl: "app/identities/aadhaar/verify-aadhaar.html",
            controller: "AadhaarController"
        }).state("individualPanePAN", {
            url: "/epan-individualPan",
            templateUrl: "app/identities/individual-pan/pan-epan.html",
            controller: "IndividualPANController"
        }).state("businessPanePAN", {
            url: "/epan-businessPan",
            templateUrl: "app/identities/business-pan/pan-epan.html",
            controller: "BusinessPANController"
        }).state("offlineAadhaar", {
            url: "/offline-aadhaar",
            templateUrl: "app/identities/aadhaar/offline-aadhaar.html",
            controller: "AadhaarController"
        }).state("businessPanExtraction", {
            url: "/business-pan-extraction",
            templateUrl: "app/identities/business-pan/pan-extraction.html",
            controller: "BusinessPANController"
        }).state("businessPanVerification", {
            url: "/business-pan-verification",
            templateUrl: "app/identities/business-pan/pan-verification.html",
            controller: "BusinessPANController"
        }).state("businessPanFetch", {
            url: "/business-pan-fetch",
            templateUrl: "app/identities/business-pan/pan-fetch.html",
            controller: "BusinessPANController"
        }).state("individualPanExtraction", {
            url: "/individual-pan-extraction",
            templateUrl: "app/identities/individual-pan/pan-extraction.html",
            controller: "IndividualPANController"
        }).state("individualPanSignatureExtraction", {
            url: "/individual-pan-signature-extraction",
            templateUrl: "app/identities/individual-pan/pan-signature-extraction.html",
            controller: "IndividualPANController"
        }).state("individualPanFetch", {
            url: "/individual-pan-fetch",
            templateUrl: "app/identities/individual-pan/pan-fetch.html",
            controller: "IndividualPANController"
        }).state("panAadhaarLinkStatus", {
            url: "/pan-aadhaar-link-status",
            templateUrl: "app/identities/individual-pan/pan-aadhaar-link-status.html",
            controller: "IndividualPANController"
        }).state("individualPanAdvanceVerification", {
            url: "/individual-pan-advance-verification",
            templateUrl: "app/identities/individual-pan/pan-advance-verification.html",
            controller: "IndividualPANController"
        }).state("individualPanVerification1", {
            url: "/individual-pan-verification-1",
            templateUrl: "app/identities/individual-pan/pan-verification-1.html",
            controller: "IndividualPANController"
        }).state("individualPanFaceExtraction", {
            url: "/individual-pan-face-extraction",
            templateUrl: "app/identities/individual-pan/pan-face-extraction.html",
            controller: "IndividualPANController"
        }).state("individualPanOnPremExtraction", {
            url: "/individual-pan-onprem-extraction",
            templateUrl: "app/identities/individual-pan/pan-onpremextraction.html",
            controller: "IndividualPANController"
        }).state("drivingLicenceExtraction", {
            url: "/driving-licence-extraction",
            templateUrl: "app/identities/drivingLicence/driving-licence-extraction.html",
            controller: "DrivingLicenceController"
        }).state("drivingLicenceVerification", {
            url: "/driving-licence-verification",
            templateUrl: "app/identities/drivingLicence/driving-licence-verification.html",
            controller: "DrivingLicenceController"
        }).state("drivingLicenceFetch", {
            url: "/driving-licence-fetch",
            templateUrl: "app/identities/drivingLicence/driving-licence-fetch.html",
            controller: "DrivingLicenceController"
        }).state("drivingLicenceFaceExtraction", {
            url: "/driving-licence-face-extraction",
            templateUrl: "app/identities/drivingLicence/driving-licence-face-extraction.html",
            controller: "DrivingLicenceController"
        }).state("newCarManufacturer", {
            url: "/newcar-manufacturer",
            templateUrl: "app/identities/newCar/manufacturer.html",
            controller: "NewCarController"
        }).state("newCarModel", {
            url: "/newcar-model",
            templateUrl: "app/identities/newCar/model.html",
            controller: "NewCarController"
        }).state("newCarTrim", {
            url: "/newcar-trim",
            templateUrl: "app/identities/newCar/trim.html",
            controller: "NewCarController"
        }).state("newCarCity", {
            url: "/newcar-city",
            templateUrl: "app/identities/newCar/city.html",
            controller: "NewCarController"
        }).state("newCarPrice", {
            url: "/newcar-price",
            templateUrl: "app/identities/newCar/price.html",
            controller: "NewCarController"
        }).state("usedCarManufacturer", {
            url: "/usedcar-manufacturer",
            templateUrl: "app/identities/usedCar/manufacturer.html",
            controller: "UsedCarController"
        }).state("usedCarModel", {
            url: "/usedcar-model",
            templateUrl: "app/identities/usedCar/model.html",
            controller: "UsedCarController"
        }).state("usedCarTrim", {
            url: "/usedcar-trim",
            templateUrl: "app/identities/usedCar/trim.html",
            controller: "UsedCarController"
        }).state("usedCarYear", {
            url: "/usedcar-year",
            templateUrl: "app/identities/usedCar/year.html",
            controller: "UsedCarController"
        }).state("usedCarPrice", {
            url: "/usedcar-price",
            templateUrl: "app/identities/usedCar/price.html",
            controller: "UsedCarController"
        }).state("passportExtraction", {
            url: "/passport-extraction",
            templateUrl: "app/identities/passport/passport-extraction.html",
            controller: "PassportController"
        }).state("passportVerification", {
            url: "/passport-verification",
            templateUrl: "app/identities/passport/passport-verification.html",
            controller: "PassportController"
        }).state("passportFetch", {
            url: "/passport-fetch",
            templateUrl: "app/identities/passport/passport-fetch.html",
            controller: "PassportController"
        }).state("passportMrzDecoder", {
            url: "/passport-mzr-decoder",
            templateUrl: "app/identities/passport/passport-mzr-decoder.html",
            controller: "PassportController"
        }).state("passportFaceExtraction", {
            url: "/passport-face-extraction",
            templateUrl: "app/identities/passport/passport-face-extraction.html",
            controller: "PassportController"
        }).state("voteridExtraction", {
            url: "/voterid-extraction",
            templateUrl: "app/identities/voterid/voter-id-extraction.html",
            controller: "VoterIDController"
        }).state("voterIDVerification", {
            url: "/voter-id-verification",
            templateUrl: "app/identities/voterid/voter-id-verification.html",
            controller: "VoterIDController"
        }).state("detailedVoterIDEpicNumberSearch", {
            url: "/voter-id-detailed-epic-number-search",
            templateUrl: "app/identities/voterid/voter-id-detailed-epic-number-search.html",
            controller: "VoterIDController"
        }).state("voterIDEpicNumberSearch", {
            url: "/voter-id-epic-number-search",
            templateUrl: "app/identities/voterid/voter-id-epic-number-search.html",
            controller: "VoterIDController"
        }).state("globalverificationSearch", {
            url: "/global-verification",
            templateUrl: "app/foreignID/globalverification/globalverification.html",
            controller: "GlobalVerificationController"
        }).state("globalverificationssnVerification", {
            url: "/global-verification-ssn-verification",
            templateUrl: "app/foreignID/globalverification/globalverification-ssn-verification.html",
            controller: "GlobalVerificationController"
        }).state("globalUtilityGetProviders", {
            url: "/global-utility-get-providers",
            templateUrl: "app/foreignID/globalutility/global-utility-get-providers.html",
            controller: "GlobalUtilityController"
        }).state("globalUtilityFetchAddress", {
            url: "/global-utility-fetch-address",
            templateUrl: "app/foreignID/globalutility/global-utility-fetch-address.html",
            controller: "GlobalUtilityController"
        }).state("globalUtilityGetData", {
            url: "/global-utility-get-data",
            templateUrl: "app/foreignID/globalutility/global-utility-get-data.html",
            controller: "GlobalUtilityController"
        }).state("globalBusinessEntityName", {
            url: "/global-business-entity-name",
            templateUrl: "app/foreignID/globalbusiness/global-business-entity-name.html",
            controller: "GlobalBusinessController"
        }).state("globalBusinessEntityId", {
            url: "/global-business-entity-id",
            templateUrl: "app/foreignID/globalbusiness/global-business-entity-id.html",
            controller: "GlobalBusinessController"
        }).state("globalBusinessLiveEntityName", {
            url: "/global-business-live-entity-name",
            templateUrl: "app/foreignID/globalbusiness/global-business-live-entity-name.html",
            controller: "GlobalBusinessController"
        }).state("globalBusinessLiveEntityId", {
            url: "/global-business-live-entity-id",
            templateUrl: "app/foreignID/globalbusiness/global-business-live-entity-id.html",
            controller: "GlobalBusinessController"
        }).state("globalBusinessV2CompanyName", {
            url: "/global-businessv2-company-name",
            templateUrl: "app/foreignID/globalbusinessv2/global-businessv2-company-name.html",
            controller: "GlobalBusinessV2Controller"
        }).state("globalBusinessV2CompanyId", {
            url: "/global-businessv2-company-id",
            templateUrl: "app/foreignID/globalbusinessv2/global-businessv2-company-id.html",
            controller: "GlobalBusinessV2Controller"
        }).state("globalBusinessMENACompanySearch", {
            url: "/mena-company-search",
            templateUrl: "app/foreignID/globalbusiness/mena-company-search.html",
            controller: "GlobalBusinessController"
        }).state("usBankAuthorize", {
            url: "/us-bank-authorize",
            templateUrl: "app/foreignID/usbank/authorize.html",
            controller: "USBankController"
        }).state("usBankInvalidateToken", {
            url: "/us-bank-invalidate-token",
            templateUrl: "app/foreignID/usbank/invalidate-token.html",
            controller: "USBankController"
        }).state("usBankAccountDetails", {
            url: "/us-bank-account-details",
            templateUrl: "app/foreignID/usbank/account-details.html",
            controller: "USBankController"
        }).state("usBankAccountOwnerDetails", {
            url: "/us-bank-account-owner-details",
            templateUrl: "app/foreignID/usbank/account-owner-details.html",
            controller: "USBankController"
        }).state("usBankincomeDetails", {
            url: "/us-bank-income-details",
            templateUrl: "app/foreignID/usbank/income-details.html",
            controller: "USBankController"
        }).state("usBanktransactionDetails", {
            url: "/us-bank-transaction-details",
            templateUrl: "app/foreignID/usbank/transaction-details.html",
            controller: "USBankController"
        }).state("usPassport", {
            url: "/us-passport",
            templateUrl: "app/foreignID/passport/usPassport.html",
            controller: "InternationalPassport"
        }).state("emiratesId", {
            url: "/emirates-id",
            templateUrl: "app/foreignID/personalId/emiratesId.html",
            controller: "PersonalIdController"
        }).state("polandId", {
            url: "/poland-id",
            templateUrl: "app/foreignID/personalId/polandId.html",
            controller: "PersonalIdController"
        }).state("qatarId", {
            url: "/qatar-id",
            templateUrl: "app/foreignID/personalId/qatarId.html",
            controller: "PersonalIdController"
        }).state("omanId", {
            url: "/oman-id",
            templateUrl: "app/foreignID/personalId/omanid.html",
            controller: "PersonalIdController"
        }).state("kuwaitId", {
            url: "/kuwait-id",
            templateUrl: "app/foreignID/personalId/kuwaitId.html",
            controller: "PersonalIdController"
        }).state("egyptId", {
            url: "/egypt-id",
            templateUrl: "app/foreignID/personalId/egyptId.html",
            controller: "PersonalIdController"
        }).state("aepCard", {
            url: "/aep-card",
            templateUrl: "app/foreignID/personalId/aepcard.html",
            controller: "PersonalIdController"
        }).state("acrCard", {
            url: "/acr-card",
            templateUrl: "app/foreignID/personalId/acrcard.html",
            controller: "PersonalIdController"
        }).state("myKad", {
            url: "/mykad",
            templateUrl: "app/foreignID/personalId/mykad.html",
            controller: "PersonalIdController"
        }).state("foreignIdClassification", {
            url: "/foreignId-classification",
            templateUrl: "app/foreignID/classification/foreignIdClassification.html",
            controller: "foreignIdClassificationController"
        }).state("usDrivingLicence", {
            url: "/us-drivingLicence",
            templateUrl: "app/foreignID/dl/usDrivingLicence.html",
            controller: "usDrivingLicence"
        }).state("uenExtraction", {
            url: "/uen-extraction",
            templateUrl: "app/foreignID/uen/uenExtraction.html",
            controller: "UenController"
        }).state("uenFetch", {
            url: "/uen-fetch",
            templateUrl: "app/foreignID/uen/uenFetch.html",
            controller: "UenController"
        }).state("uenExtractionAndFetch", {
            url: "/uen-extractionfetch",
            templateUrl: "app/foreignID/uen/uenExtractionAndFetch.html",
            controller: "UenController"
        }).state("genericPassportExtraction", {
            url: "/generic-passport-extraction",
            templateUrl: "app/foreignID/genericPassport/genericPassportExtraction.html",
            controller: "GenericPassportController"
        }).state("genericPassportv2Extraction", {
            url: "/generic-passport-v2-extraction",
            templateUrl: "app/foreignID/genericPassport/genericPassportv2Extraction.html",
            controller: "GenericPassportController"
        }).state("genericPassportMRZBasedExtraction", {
            url: "/generic-passport-mrz-based-extraction",
            templateUrl: "app/foreignID/genericPassport/genericPassportMRZBasedExtraction.html",
            controller: "GenericPassportController"
        }).state("cancelledChequeExtraction", {
            url: "/cancelled-cheque-extraction",
            templateUrl: "app/docs/cheque/cancelled-cheque-extraction.html",
            controller: "ChequeController"
        }).state("forgeryExAadhaar", {
            url: "/forgery-ex-aadhaar",
            templateUrl: "app/forensics/forgerywithExraction/aadhaar.html",
            controller: "ForgeryExController"
        }).state("forgeryExIndividualPan", {
            url: "/forgery-ex-individual-pan",
            templateUrl: "app/forensics/forgerywithExraction/individualPan.html",
            controller: "ForgeryExController"
        }).state("forgeryExDL", {
            url: "/forgery-ex-dl",
            templateUrl: "app/forensics/forgerywithExraction/drivingLicence.html",
            controller: "ForgeryExController"
        }).state("forgeryExPassport", {
            url: "/forgery-ex-passport",
            templateUrl: "app/forensics/forgerywithExraction/passport.html",
            controller: "ForgeryExController"
        }).state("forgeryAadhaar", {
            url: "/forgery-aadhaar",
            templateUrl: "app/forensics/forgery/v1/aadhaar.html",
            controller: "ForgeryController"
        }).state("forgeryBusinessPan", {
            url: "/forgery-business-pan",
            templateUrl: "app/forensics/forgery/v1/businessPan.html",
            controller: "ForgeryController"
        }).state("forgeryIndividualPan", {
            url: "/forgery-individual-pan",
            templateUrl: "app/forensics/forgery/v1/individualPan.html",
            controller: "ForgeryController"
        }).state("forgeryDL", {
            url: "/forgery-dl",
            templateUrl: "app/forensics/forgery/v1/drivingLicence.html",
            controller: "ForgeryController"
        }).state("forgeryPassport", {
            url: "/forgery-passport",
            templateUrl: "app/forensics/forgery/v1/passport.html",
            controller: "ForgeryController"
        }).state("advanceForgery", {
            url: "/advance-forgery",
            templateUrl: "app/forensics/advanceForgery/advance-forgery.html",
            controller: "AdvanceForgeryController"
        }).state("photocopyDetect", {
            url: "/photocopy-detect",
            templateUrl: "app/forensics/imageForgery/forgery-photocopy.html",
            controller: "imageForgeryController"
        }).state("screenshotDetect", {
            url: "/screenshot-detect",
            templateUrl: "app/forensics/imageForgery/forgery-screenshot.html",
            controller: "imageForgeryController"
        }).state("webDetect", {
            url: "/web-detect",
            templateUrl: "app/forensics/imageForgery/forgery-web.html",
            controller: "imageForgeryController"
        }).state("basicForgery", {
            url: "/basic-forgery",
            templateUrl: "app/forensics/basicForgery/basic-forgery.html",
            controller: "BasicForgeryController"
        }).state("textMatch", {
            url: "/text-match",
            templateUrl: "app/matchers/text-match/text-match.html",
            controller: "TextMatchController"
        }).state("mrzDetector", {
            url: "/mrz-detector",
            templateUrl: "app/matchers/mrz-detect/mrz-detect.html",
            controller: "MrzDetectController"
        }).state("faceMatch", {
            url: "/face-match",
            templateUrl: "app/forensics/face-match/face-match.html",
            controller: "FaceMatchController"
        }).state("selfieLiveliness", {
            url: "/selfie-liveliness",
            templateUrl: "app/forensics/face-match/selfie-liveliness.html",
            controller: "FaceMatchController"
        }).state("indianIdCard", {
            url: "/id-classification-indianIdCard",
            templateUrl: "app/forensics/id-classification/indianIdCard.html",
            controller: "IdClassificationController"
        }).state("imageQuality", {
            url: "/image-quality",
            templateUrl: "app/forensics/image-quality/image-quality.html",
            controller: "ImageQualityController"
        }).state("ifscCode", {
            url: "/ifsc-code",
            templateUrl: "app/docs/banksearch/ifsc-code.html",
            controller: "BanksearchController"
        }).state("micrCode", {
            url: "/micr-code",
            templateUrl: "app/docs/banksearch/micr-code.html",
            controller: "BanksearchController"
        }).state("gstExtraction", {
            url: "/gst-extraction",
            templateUrl: "app/gstn/gst-extraction/gst-extraction.html",
            controller: "GstExtractionController"
        }).state("negativeCheck", {
            url: "/negative-duediligence-negative-check",
            templateUrl: "app/backgroundcheck/negativeDueDiligence/negative-duediligence-negative-check.html",
            controller: "negativeDueDiligenceController"
        }).state("neslIframeEsign", {
            url: "/nesl-esign",
            templateUrl: "app/nesl/nesl-esign.html",
            controller: "NeslController"
        }).state("neslIframeGetData", {
            url: "/nesl-getdata",
            templateUrl: "app/nesl/nesl-getdata.html",
            controller: "NeslController"
        }).state("batchmodeFetch", {
            url: "/batchmode-fetch",
            templateUrl: "app/batchmode/batchmode-input.html",
            controller: "batchmodeController"
        }).state("batchmodeStatus", {
            url: "/batchmode-status",
            templateUrl: "app/batchmode/batchmode-status.html",
            controller: "batchmodeController"
        }).state("neslIframeEStamp", {
            url: "/nesl-estamp",
            templateUrl: "app/nesl/nesl-estamp.html",
            controller: "NeslController"
        }).state("estamping", {
            url: "/estampingRequestEstamp",
            templateUrl: "app/estamping/request-estamp.html",
            controller: "EstampController"
        }).state("procureEstamp", {
            url: "/procure-estamp",
            templateUrl: "app/estamping/procure-estamp.html",
            controller: "EstampController"
        }).state("getStatus", {
            url: "/estamp-get-status",
            templateUrl: "app/estamping/estamp-get-status.html",
            controller: "EstampController"
        }).state("getUrnStatus", {
            url: "/estampingGetUrnStatus",
            templateUrl: "app/estamping/get-urn-status.html",
            controller: "EstampController"
        }).state("getDailyMis", {
            url: "/estampingGetDailyMis",
            templateUrl: "app/estamping/daily-mis.html",
            controller: "EstampController"
        }).state("createANewConf", {
            url: "/video-create-conference",
            templateUrl: "app/forensics/video-conf/video-create-conference.html",
            controller: "VideoConfController"
        }).state("videokyc", {
            url: "/video-kyc",
            templateUrl: "app/forensics/video-conf/video-kyc.html",
            controller: "VideoConfController"
        }).state("joinVideoConf", {
            url: "/video-join-conference",
            templateUrl: "app/forensics/video-conf/video-join-conference.html",
            controller: "VideoConfController"
        }).state("videoVerification", {
            url: "/video-verification",
            templateUrl: "app/forensics/video-verification/video.html",
            controller: "VideoController"
        }).state("videoLiveliness", {
            url: "/video-liveliness",
            templateUrl: "app/forensics/videoLiveliness/video-liveliness.html",
            controller: "VideoLivelinessController"
        }).state("gestureVideoVerification", {
            url: "/gesture-video-verification",
            templateUrl: "app/forensics/video-verification/gesture-video.html",
            controller: "VideoController"
        }).state("videoVerificationApiMode", {
            url: "/video-verification-api-mode",
            templateUrl: "app/forensics/videoForensics/video-api-mode.html",
            controller: "VideoForensicsController"
        }).state("aadhaarAuth", {
            url: "/aadhaar-auth",
            templateUrl: "app/identities/aadhaar-auth/aadhaarauth.html",
            controller: "AadhaarauthController"
        }).state("digilockerCreateUrl", {
            url: "/digi-locker",
            templateUrl: "app/identities/digilocker/digilocker-create-url.html",
            controller: "DigilockerController"
        }).state("digilockerEaadhaar", {
            url: "/digi-locker-eaadhaar",
            templateUrl: "app/identities/digilocker/digilocker-get-eaadhaar.html",
            controller: "DigilockerController"
        }).state("digilockerDeleteToken", {
            url: "/digi-locker-delete-token",
            templateUrl: "app/identities/digilocker/digilocker-delete-token.html",
            controller: "DigilockerController"
        }).state("digilockerGetDetails", {
            url: "/digilocker-get-details",
            templateUrl: "app/identities/digilocker/digilocker-get-details.html",
            controller: "DigilockerController"
        }).state("digilockerGetFiles", {
            url: "/digilocker-get-files",
            templateUrl: "app/identities/digilocker/digilocker-get-files.html",
            controller: "DigilockerController"
        }).state("digilockerPullDocuments", {
            url: "/digilocker-pull-document",
            templateUrl: "app/identities/digilocker/digilocker-pull-document.html",
            controller: "DigilockerController"
        }).state("digilockerGetListOfDocuments", {
            url: "/digilocker-listofdocuments",
            templateUrl: "app/identities/digilocker/digilocker-listofdocuments.html",
            controller: "DigilockerController"
        }).state("digilockerVerifyAccount", {
            url: "/digilocker-verifyaccount",
            templateUrl: "app/identities/digilocker/digilocker-verify-account.html",
            controller: "DigilockerController"
        }).state("vpaFetch", {
            url: "/upi-vpa-fetch",
            templateUrl: "app/docs/upi/upi-vpa-fetch.html",
            controller: "UpiController"
        }).state("getReferenceId", {
            url: "/itranalytics-get-referenceId",
            templateUrl: "app/docs/itranalytics/itranalytics-get-refenceId.html",
            controller: "ItrController"
        }).state("getAnalytics", {
            url: "/itranalytics-get-analytics",
            templateUrl: "app/docs/itranalytics/itranalytics-get-analytics.html",
            controller: "ItrController"
        }).state("bankAccountTransfer", {
            url: "/bank-account-transfer",
            templateUrl: "app/docs/bank/bank-account-transfer.html",
            controller: "BankAccountController"
        }).state("bankTransferLite", {
            url: "/bank-account-transfer-lite",
            templateUrl: "app/docs/bank/bank-account-transfer-lite.html",
            controller: "BankAccountController"
        }).state("bankAccountVerify", {
            url: "/bank-account-verify",
            templateUrl: "app/docs/bank/bank-account-verify.html",
            controller: "BankAccountController"
        }).state("bankStatement", {
            url: "/bank-statement",
            templateUrl: "app/docs/bank-statement/bank-statement.html",
            controller: "BankstatementController"
        }).state("bankStatementdetails", {
            url: "/bankStatement-details",
            templateUrl: "app/identities/bankStatement/bankStatement-details.html",
            controller: "BankStatementController"
        }).state("bankStatementanalytics", {
            url: "/bankStatement-analytics",
            templateUrl: "app/identities/bankStatement/bankStatement-analytics.html",
            controller: "BankStatementController"
        }).state("bankStatementSupportedBanks", {
            url: "/bankStatement-supportedBanks",
            templateUrl: "app/identities/bankStatement/bankStatement-supportedBanks.html",
            controller: "BankStatementController"
        }).state("ipQuality", {
            url: "/risk-ip-quality",
            templateUrl: "app/riskscore/ip-quality.html",
            controller: "RiskScoreController"
        }).state("creditScoreInitiate", {
            url: "/credit-score-initiate",
            templateUrl: "app/riskscore/creditscore/initiate.html",
            controller: "CreditScoreController"
        }).state("creditScoreAuthenticate", {
            url: "/credit-score-authenticate",
            templateUrl: "app/riskscore/creditscore/authenticate.html",
            controller: "CreditScoreController"
        }).state("creditScoreGetReport", {
            url: "/credit-score-get-report",
            templateUrl: "app/riskscore/creditscore/getreport.html",
            controller: "CreditScoreController"
        }).state("creditScoreGetData", {
            url: "/credit-score-get-data",
            templateUrl: "app/riskscore/creditscore/getdata.html",
            controller: "CreditScoreController"
        }).state("geoFencing", {
            url: "/geo-fencing",
            templateUrl: "app/riskscore/geofencing.html",
            controller: "RiskScoreController"
        }).state("dataBreach", {
            url: "/data-breach",
            templateUrl: "app/riskscore/databreach.html",
            controller: "RiskScoreController"
        }).state("ezmatch", {
            url: "/ezmatch",
            templateUrl: "app/riskscore/ezmatch.html",
            controller: "RiskScoreController"
        }).state("idIntelligence", {
            url: "/document-intelligence/id-intelligence",
            templateUrl: "app/documentIntelligence/idIntelligence/id-intelligence.html",
            controller: "IdIntelligenceController"
        }).state("lpgIdVerification", {
            url: "/lpgId-verification",
            templateUrl: "app/addressProof/lpg/lpgverification.html",
            controller: "LpgController"
        }).state("mobile", {
            url: "/mobile",
            templateUrl: "app/addressProof/phone/mobile.html",
            controller: "PhoneController"
        }).state("electricity", {
            url: "/electricity",
            templateUrl: "app/addressProof/electricity/electricity.html",
            controller: "ElectricityController"
        }).state("caseList", {
            url: "/case-list",
            templateUrl: "app/backgroundcheck/courtcases/case-list.html",
            controller: "CourtCaseController"
        }).state("form16", {
            url: "/form16",
            templateUrl: "app/docs/itr/form16.html",
            controller: "ITRController"
        }).state("form26", {
            url: "/form26",
            templateUrl: "app/docs/itr/form26.html",
            controller: "ITRController"
        }).state("form26as", {
            url: "/form26as",
            templateUrl: "app/docs/itr/form26as.html",
            controller: "ITRController"
        }).state("rocSmartSearch", {
            url: "/roc-smart-search",
            templateUrl: "app/organization/roc/smart-search.html",
            controller: "RocController"
        }).state("rocQuick", {
            url: "/roc-quick",
            templateUrl: "app/organization/roc/quick.html",
            controller: "RocController"
        }).state("rocSimple", {
            url: "/roc-simple",
            templateUrl: "app/organization/roc/simple.html",
            controller: "RocController"
        }).state("rocDetailed", {
            url: "/roc-detailed",
            templateUrl: "app/organization/roc/detail.html",
            controller: "RocController"
        }).state("rocAssetCharges", {
            url: "/roc-asset-charges",
            templateUrl: "app/organization/roc/asset-charges.html",
            controller: "RocController"
        }).state("rocFileDownload", {
            url: "/roc-file-download",
            templateUrl: "app/organization/roc/file-download.html",
            controller: "RocController"
        }).state("rocDinQuick", {
            url: "/roc-din-quick",
            templateUrl: "app/organization/roc/din-quick.html",
            controller: "RocController"
        }).state("rocDinSimple", {
            url: "/roc-din-simple",
            templateUrl: "app/organization/roc/din-simple.html",
            controller: "RocController"
        }).state("rocDinDetailed", {
            url: "/roc-din-detailed",
            templateUrl: "app/organization/roc/din-detail.html",
            controller: "RocController"
        }).state("centralServiceTax", {
            url: "/central-service-tax",
            templateUrl: "app/organization/centralServiceTax/central-service-tax.html",
            controller: "CentralServiceTaxController"
        }).state("cst", {
            url: "/cst",
            templateUrl: "app/organization/cst/cst.html",
            controller: "CstController"
        }).state("fssai", {
            url: "/fssai",
            templateUrl: "app/organization/fssai/fssai.html",
            controller: "FssaiController"
        }).state("icai", {
            url: "/icai",
            templateUrl: "app/organization/icai/icai.html",
            controller: "IcaiController"
        }).state("registrationNumberSearch", {
            url: "/coa-registration-number-search",
            templateUrl: "app/organization/coa/registration-number-search.html",
            controller: "CoaController"
        }).state("searchByPan", {
            url: "/esic-pan-number-search",
            templateUrl: "app/organization/esic/pan-number-search.html",
            controller: "EsicController"
        }).state("icwaiFirm", {
            url: "/icwai-firm",
            templateUrl: "app/organization/icwai/icwai-firm.html",
            controller: "IcwaiController"
        }).state("icwaiMember", {
            url: "/icwai-member",
            templateUrl: "app/organization/icwai/icwai-member.html",
            controller: "IcwaiController"
        }).state("basicEstablishmentSearch", {
            url: "/epfo-basic-establishment-search",
            templateUrl: "app/organization/epfo/basic-establishment-search.html",
            controller: "EpfoController"
        }).state("detailedEstablishmentSearch", {
            url: "/epfo-detailed-establishment-search",
            templateUrl: "app/organization/epfo/detailed-establishment-search.html",
            controller: "EpfoController"
        }).state("uanDetailed", {
            url: "/epfo-uan-detailed",
            templateUrl: "app/organization/epfo/uan-detailed.html",
            controller: "EpfoController"
        }).state("employeeNameSearch", {
            url: "/epfo-employee-name-search",
            templateUrl: "app/organization/epfo/employee-name-search.html",
            controller: "EpfoController"
        }).state("employeeNameSearchv2", {
            url: "/epfo-employee-name-search-v2",
            templateUrl: "app/organization/epfo/employee-name-search-v2.html",
            controller: "EpfoController"
        }).state("icsi", {
            url: "/icsi",
            templateUrl: "app/organization/icsi/icsi.html",
            controller: "IcsiController"
        }).state("basicVehicleSearch", {
            url: "/basic-vehicleregistration",
            templateUrl: "app/identities/vehicleregistration/basic-vehicleregistration.html",
            controller: "VehicleregistrationController"
        }).state("detailedVehicleSearch", {
            url: "/detailed-vehicleregistration",
            templateUrl: "app/identities/vehicleregistration/detailed-vehicleregistration.html",
            controller: "VehicleregistrationController"
        }).state("detailedSearchBeta", {
            url: "/detailed-vehicleregistration-beta",
            templateUrl: "app/identities/vehicleregistration/detailed-vehicleregistration-beta.html",
            controller: "VehicleregistrationController"
        }).state("checkStolenVehicle", {
            url: "/check-stolen-vehicle",
            templateUrl: "app/identities/vehicleregistration/check-stolen-vehicle.html",
            controller: "VehicleregistrationController"
        }).state("standardSearch", {
            url: "/global-standard-search",
            templateUrl: "app/identities/globalverification/standardsearch.html",
            controller: "GlobalVerificationKYCController"
        }).state("advancedSearch", {
            url: "/global-advanced-search",
            templateUrl: "app/identities/globalverification/advancedsearch.html",
            controller: "GlobalVerificationKYCController"
        }).state("tin", {
            url: "/tin",
            templateUrl: "app/organization/tin/tin.html",
            controller: "TinController"
        }).state("vat", {
            url: "/vat",
            templateUrl: "app/organization/vat/vat.html",
            controller: "VatController"
        }).state("iec", {
            url: "/iec",
            templateUrl: "app/organization/iec/iec.html",
            controller: "IecController"
        }).state("mci", {
            url: "/mci",
            templateUrl: "app/organization/mci/mci.html",
            controller: "MciController"
        }).state("tan", {
            url: "/tan",
            templateUrl: "app/organization/tan/tan.html",
            controller: "TANController"
        }).state("snec", {
            url: "/snec",
            templateUrl: "app/organization/snec/snec.html",
            controller: "SnecController"
        }).state("uan", {
            url: "/uan",
            templateUrl: "app/organization/udhyogAadhaar/uan.html",
            controller: "UdhyogAadhaarController"
        }).state("udyamregistration", {
            url: "/udyam-registration",
            templateUrl: "app/organization/udyamRegistration/udyam-registration.html",
            controller: "UdyamRegistrationController"
        }).state("pantoGst", {
            url: "/pan-to-gst",
            templateUrl: "app/gstn/pan-to-gst.html",
            controller: "GstnController"
        }).state("panToGstList", {
            url: "/pan-to-gst-list",
            templateUrl: "app/gstn/pan-to-gst-list.html",
            controller: "GstnController"
        }).state("companyNameToGst", {
            url: "/company-to-gst",
            templateUrl: "app/gstn/company-to-gst.html",
            controller: "GstnController"
        }).state("panV2Fetch", {
            url: "/panv2-fetch",
            templateUrl: "app/identities/panV2/panv2-fetch.html",
            controller: "panV2Controller"
        }).state("detailedGstinSearch", {
            url: "/detailed-gstin-search",
            templateUrl: "app/gstn/detailed-gstin-search.html",
            controller: "GstnController"
        }).state("gstinSearch", {
            url: "/gstin-search",
            templateUrl: "app/gstn/gstin-search.html",
            controller: "GstnController"
        }).state("gstToHsn", {
            url: "/gst-to-hsn",
            templateUrl: "app/gstn/gst-to-hsn.html",
            controller: "GstnController"
        }).state("gstrOtp", {
            url: "/gstr-otp-request",
            templateUrl: "app/gstr1/otp-request.html",
            controller: "Gstr1Controller"
        }).state("gstrAuthToken", {
            url: "/gstr-authtoken-request",
            templateUrl: "app/gstr1/authtoken-request.html",
            controller: "Gstr1Controller"
        }).state("gstrinitiationOtp", {
            url: "/gstr-initiation-otp-request",
            templateUrl: "app/lending/gstr/otp-request.html",
            controller: "GstrController"
        }).state("gstrinitiatioAuthToken", {
            url: "/gstr-initiation-authtoken-request",
            templateUrl: "app/lending/gstr/authtoken-request.html",
            controller: "GstrController"
        }).state("gstrturnover", {
            url: "/gstr-turn-over",
            templateUrl: "app/lending/gstr/turn-over.html",
            controller: "GstrController"
        }).state("gstrgrossprofit", {
            url: "/gstr-gross-profit",
            templateUrl: "app/lending/gstr/gross-profit.html",
            controller: "GstrController"
        }).state("companyconsolidatedFetch", {
            url: "/companyconsolidated-fetch-data",
            templateUrl: "app/lending/roc/companyconsolidated-fetch-data.html",
            controller: "CompanyController"
        }).state("companyconsolidatedFetchRealtime", {
            url: "/companyconsolidated-fetch-data-realtime",
            templateUrl: "app/lending/roc/companyconsolidated-fetch-realtime-data.html",
            controller: "CompanyController"
        }).state("companyconsolidatedFinancialRealtime", {
            url: "/companyconsolidated-fetch-financal-data-realtime",
            templateUrl: "app/lending/roc/companyconsolidated-fetch-financial-data-realtime.html",
            controller: "CompanyController"
        }).state("companyconsolidatedDataStatus", {
            url: "/companyconsolidated-data-status",
            templateUrl: "app/lending/roc/companyconsolidated-data-status.html",
            controller: "CompanyController"
        }).state("companyconsolidatedGet", {
            url: "/companyconsolidated-get-request-id",
            templateUrl: "app/lending/roc/companyconsolidated-get-request-id.html",
            controller: "CompanyController"
        }).state("profitAfterTax", {
            url: "/revenue-profit-after-tax",
            templateUrl: "app/lending/revenue/revenue-profit-after-tax.html",
            controller: "RevenueController"
        }).state("gstrdelinquency", {
            url: "/gstr-delinquency",
            templateUrl: "app/lending/gstr/delinquency.html",
            controller: "GstrController"
        }).state("gstrdiscrepancy", {
            url: "/gstr-discrepancy",
            templateUrl: "app/lending/gstr/discrepancy.html",
            controller: "GstrController"
        }).state("gstr1Summary", {
            url: "/gstr1-summary",
            templateUrl: "app/gstr1/gstr1-summary.html",
            controller: "Gstr1Controller"
        }).state("gstr2ab2b", {
            url: "/gstr2a-b2b",
            templateUrl: "app/gstr1/gstr2a-b2b.html",
            controller: "Gstr1Controller"
        }).state("gstr3bsummary", {
            url: "/gstr3b-summary",
            templateUrl: "app/gstr1/gstr3b-summary.html",
            controller: "Gstr1Controller"
        }).state("viewReturns", {
            url: "/gst-view-returns",
            templateUrl: "app/gstn/view-returns.html",
            controller: "GstnController"
        }).state("contact", {
            url: "/contact",
            templateUrl: "app/contact/contact.html"
        }).state("ptrc", {
            url: "/ptrc",
            templateUrl: "app/organization/ptrc/ptrc.html",
            controller: "PtrcController"
        }).state("aadhaarEsign", {
            url: "/aadhaar-esign",
            templateUrl: "app/digital-contracting/aadhaar-esign.html",
            controller: "EsignController"
        }).state("esign", {
            url: "/e-sign",
            templateUrl: "app/digital-contracting/esign.html",
            controller: "EsignController"
        }).state("kraService", {
            url: "/kra-pan",
            templateUrl: "app/kraservices/kraService.html",
            controller: "KraServiceController"
        }).state("peopleFinder", {
            url: "/peopleFinder",
            templateUrl: "app/identities/peoplesearch/peoplefinder.html",
            controller: "PeopleSearchController"
        }).state("emailverificationv2", {
            url: "/emailverificationv2",
            templateUrl: "app/identities/emailverificationv2/emailverificationv2.html",
            controller: "EmailVerificationv2Controller"
        }).state("emailvalidation", {
            url: "/emailvalidation",
            templateUrl: "app/identities/emailvalidation/emailvalidation.html",
            controller: "EmailValidationController"
        }).state("emailverification", {
            url: "/emailverification",
            templateUrl: "app/identities/emailverification/emailverification.html",
            controller: "EmailVerificationController"
        }).state("domainverification", {
            url: "/domainverification",
            templateUrl: "app/identities/domainverification/domainverification.html",
            controller: "DomainVerificationController"
        }).state("domainverificationlite", {
            url: "/domainverificationlite",
            templateUrl: "app/identities/domainverificationlite/domainverificationlite.html",
            controller: "DomainVerificationLiteController"
        }).state("cosmoIndividualPan", {
            url: "/cosmo-individual-pan",
            templateUrl: "app/vault/cosmoextraction/cosmo-individual-pan.html",
            controller: "CosmoExtractionController"
        }).state("cosmoBusinessPan", {
            url: "/cosmo-business-pan",
            templateUrl: "app/vault/cosmoextraction/cosmo-business-pan.html",
            controller: "CosmoExtractionController"
        }).state("cosmoAadhaar", {
            url: "/cosmo-aadhaar",
            templateUrl: "app/vault/cosmoextraction/cosmo-aadhaar.html",
            controller: "CosmoExtractionController"
        }).state("cosmoPassport", {
            url: "/cosmo-passport",
            templateUrl: "app/vault/cosmoextraction/cosmo-passport.html",
            controller: "CosmoExtractionController"
        }).state("cosmoDrivingLicence", {
            url: "/cosmo-driving-licence",
            templateUrl: "app/vault/cosmoextraction/cosmo-driving-licence.html",
            controller: "CosmoExtractionController"
        }).state("cosmoVoterid", {
            url: "/cosmo-voterid",
            templateUrl: "app/vault/cosmoextraction/cosmo-voterid.html",
            controller: "CosmoExtractionController"
        }).state("dashboard", {
            url: "/dashboard",
            templateUrl: "app/dashboard/dashboard.html",
            controller: "DashboardController"
        }).state("mpgsUpdateMerchant", {
            url: "/mpgs-update-merchant",
            templateUrl: "app/mpgs/updateMerchant.html",
            controller: "MpgsController"
        }).state("mpgsUpdatePayment", {
            url: "/mpgs-update-payment",
            templateUrl: "app/mpgs/updatePayment.html",
            controller: "MpgsController"
        }).state("mpgsUpdateAcquirer", {
            url: "/mpgs-update-acquirer",
            templateUrl: "app/mpgs/updateAcquirer.html",
            controller: "MpgsController"
        }).state("mpgsApproveMerchant", {
            url: "/mpgs-approve-merchant",
            templateUrl: "app/mpgs/approveMerchant.html",
            controller: "MpgsController"
        }).state("hdfcEmailFetchCreate", {
            url: "/email-fetch-create",
            templateUrl: "app/hdfc-email/email-fetch-create.html",
            controller: "hdfcEmailController"
        }).state("hdfcBatchModeCreate", {
            url: "/batch-mode-create",
            templateUrl: "app/hdfc-email/batch-mode-create.html",
            controller: "hdfcEmailController"
        }).state("hdfcBatchModeGetStatus", {
            url: "/batch-mode-status",
            templateUrl: "app/hdfc-email/batch-mode-get-data.html",
            controller: "hdfcEmailController"
        }).state("passiveLiveness", {
            url: "/passive-liveness",
            templateUrl: "app/passive-liveness/passive-liveness.html",
            controller: "PassiveLivenessController"
        }).state("udinInitiate", {
            url: "/udin-initiate",
            templateUrl: "app/organization/udin/initiate.html",
            controller: "UdinController"
        }).state("udinGetInfo", {
            url: "/udin-get-info",
            templateUrl: "app/organization/udin/getInfo.html",
            controller: "UdinController"
        }).state("leiSearch", {
            url: "/lei-search",
            templateUrl: "app/organization/lei/search.html",
            controller: "LEIController"
        }).state("ckycSearch", {
            url: "/ckyc-search",
            templateUrl: "app/identities/ckyc/search.html",
            controller: "CkycController"
        }).state("ckycFetch", {
            url: "/ckyc-fetch",
            templateUrl: "app/identities/ckyc/fetch.html",
            controller: "CkycController"
        }).state("passportV2Extraction", {
            url: "/passportV2-extraction",
            templateUrl: "app/identities/passportV2/extraction.html",
            controller: "passportV2"
        }).state("passportV2Fetch", {
            url: "/passportV2-fetch",
            templateUrl: "app/identities/passportV2/fetch.html",
            controller: "passportV2"
        }).state("passportV2Verification", {
            url: "/passportV2-verification",
            templateUrl: "app/identities/passportV2/verification.html",
            controller: "passportV2"
        }).state("voterIdV2Extraction", {
            url: "/voterIdV2-extraction",
            templateUrl: "app/identities/voterIdV2/extraction.html",
            controller: "voterIdV2"
        }).state("voterIdV2verification", {
            url: "/voterIdV2-verification",
            templateUrl: "app/identities/voterIdV2/verification.html",
            controller: "voterIdV2"
        }).state("voterIdV2EpicNumberSearch", {
            url: "/passportV2-epicNumberSearch",
            templateUrl: "app/identities/voterIdV2/epicNumberSearch.html",
            controller: "voterIdV2"
        }).state("drivingLicenceV2Fetch", {
            url: "/drivingLicence-fetch",
            templateUrl: "app/identities/drivingLicenceV2/fetch.html",
            controller: "drivingLicenceV2"
        }).state("drivingLicenceV2Extraction", {
            url: "/drivingLicence-extraction",
            templateUrl: "app/identities/drivingLicenceV2/extraction.html",
            controller: "drivingLicenceV2"
        }).state("drivingLicenceV2Verification", {
            url: "/drivingLicence-verification",
            templateUrl: "app/identities/drivingLicenceV2/verification.html",
            controller: "drivingLicenceV2"
        }).state("businessPanV2Extraction", {
            url: "/businessPan-extraction",
            templateUrl: "app/identities/businessPanV2/extraction.html",
            controller: "businessPanV2"
        }).state("businessPanV2Verification", {
            url: "/businessPan-verification",
            templateUrl: "app/identities/businessPanV2/verification.html",
            controller: "businessPanV2"
        }).state("challanSearch", {
            url: "/challanSearch",
            templateUrl: "app/identities/vehicleregistration/challan-search.html",
            controller: "VehicleregistrationController"
        }).state("panV2FetchV2", {
            url: "/panv2-fetchV2",
            templateUrl: "app/identities/panV2/panv2-fetch_v2.html",
            controller: "panV2Controller"
        }).state("panV2Compliance", {
            url: "/panv2-compliance",
            templateUrl: "app/identities/panV2/panv2-compliance.html",
            controller: "panV2Controller"
        }).state("panV2FetchCompliance", {
            url: "/panv2-fetchComplaince",
            templateUrl: "app/identities/panV2/panv2-fetchCompliance.html",
            controller: "panV2Controller"
        }).state("vaccineGenerateOTP", {
            url: "/vaccine-generateOTP",
            templateUrl: "app/identities/vaccine/vaccine-generateOTP.html",
            controller: "vaccineController"
        }).state("vaccineVaccinationDetails", {
            url: "/vaccine-vaccinationDetails",
            templateUrl: "app/identities/vaccine/vaccine-vaccinationDetails.html",
            controller: "vaccineController"
        }).state("basicVerifyAadhaar", {
            url: "/basic-Verify-aadhaar",
            templateUrl: "app/identities/aadhaar/basic-verify-aadhaar.html",
            controller: "AadhaarController"
        }).state("verifyAadhaarAsyncId", {
            url: "/verify-aadhaar-async",
            templateUrl: "app/identities/aadhaar/verify-aadhaar-async.html",
            controller: "AadhaarController"
        }).state("mfCASExtraction", {
            url: "/mf-cas-extraction",
            templateUrl: "app/investment/mutualFund/mfCASExtraction.html",
            controller: "mfController"
        }).state("rocAllFileDownload", {
            url: "/roc-All-File-Download",
            templateUrl: "app/organization/roc/file-all-download.html",
            controller: "RocController"
        }).state("createRequest", {
            url: "/gst-analytics-create-request",
            templateUrl: "app/lending/gstanalytics/create-request.html",
            controller: "GstAnalyticsController"
        }).state("submitOtp", {
            url: "/gst-analytics-submit-otp",
            templateUrl: "app/lending/gstanalytics/submit-otp.html",
            controller: "GstAnalyticsController"
        }).state("getAnalyticsReport", {
            url: "/gst-analytics-report",
            templateUrl: "app/lending/gstanalytics/get-report.html",
            controller: "GstAnalyticsController"
        }), a.otherwise("/")
    }
    e.$inject = ["$stateProvider", "$urlRouterProvider"], angular.module("signzySandbox").config(e)
}(),
function() {
    "use strict";
    angular.module("signzySandbox").constant("malarkey", malarkey).constant("moment", moment)
}(), angular.module("signzySandbox.config", []).constant("EnvironmentConfig", {
        baseUrl: "https://preproduction.signzy.tech",
        persistUrl: "https://preproduction-persist.signzy.tech",
        versionUrl: "https://preproduction.signzy.xyz",
        contractingUrl: "https://contracting.sdk.signzy.tech",
        videoVerificationUrl: "https://video-preproduction.signzy.tech",
        meterUrl: "https://adminconsole-preproduction.signzy.tech/meter",
        rocSmartFillUrl: "https://roc-smart-search.signzy.tech",
        esignIframeUrl: "https://esign-preproduction.signzy.tech",
        videoConfUrl: "https://video-conf-demo.signzy.app",
        ekycIframeUrl: "https://ekyc-preproduction.signzy.tech",
        blenderConfig: "https://blender-preproduction.signzy.app",
        dashboard: "https://dashboard-preproduction.signzy.app"
    }),
    function() {
        "use strict";

        function e(e, a, t) {
            e.debugEnabled(!0), t.html5Mode({
                enabled: !0,
                requireBase: !1
            }).hashPrefix("!"), a.allowHtml = !0, a.timeOut = 3e3, a.positionClass = "toast-top-right", a.preventDuplicates = !0, a.progressBar = !0
        }
        e.$inject = ["$logProvider", "toastrConfig", "$locationProvider"], angular.module("signzySandbox").config(e)
    }(), angular.module("signzySandbox").run(["$templateCache", function(e) {
        e.put("app/batchmode/batchmode-input.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>API Batch Mode Portal</a></h1><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0"><div class=pad-left0 uk-lightbox><div ng-if=data.files[0]><!-- <object data="https://spdf.signzy.tech/web/viewer.html?file={{data.files[0]}}" type="text/csv" width="300" height="300" ng-if="data.files[0].indexOf(\'csv\') != -1">\n                        </object> --> <span ngf-select=fileUpload($file,0) ng-model=data.files[0] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.files[0] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.files[0]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" name=batchmodeFetch id=batchmodeFetch><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Input CSV</label><input class=uk-input type=text ng-model=data.files[0] placeholder="Input CSV(URL)" required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Select API</label><select class=uk-select ng-model=data.api ng-init="data.api = apis[0].value; updateSampleUrl(apis[0].value)" ng-change=updateSampleUrl(data.api) placeholder="API To hit" id=apiselect><option ng-repeat="api in apis" ng-value=api.value>{{api.name}}</option></select><p>Sample: <a href={{data.sampleUrl}}>{{data.api}} CSV</a></p></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>E-mail IDs (comma seperated)</label><input class=uk-input type=text ng-model=data.emailId ng-change=filterEmails(data.emailId) placeholder="E-Mail ID (comma seperated)" required> <span ng-repeat="email in data.emailIds" style="background: lightgrey; margin-right: 3px; padding: 3px 15px; border-radius: 3000px; position: relative;top: 15px">{{email}}</span></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>E-Mail Subject</label><input class=uk-input type=text ng-model=data.emailSubject placeholder="E-Mail Subject" required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Callback URL (optional)</label><input class=uk-input type=text ng-model=data.callbackUrl placeholder=CallbackURL></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=isInvalid() ng-click=startBatchModeProcess()><span>Batch Mode Fetch</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div ng-show=transactionId>Transaction ID: {{transactionId}}</div><div ng-show=transactionId>Please save the above Transaction ID for your reference</div><div class="uk-card uk-card-body bg-grey" ng-show="data.batchmodeResponse && !loading"><pre pretty-json=data.batchmodeResponse></pre></div></div></div>'), e.put("app/batchmode/batchmode-status.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>API Batch Mode Portal</a></h1><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text required>Transaction ID</label><input class=uk-input type=text ng-model=data.transactionId ng-init=getTransactionId() placeholder="Transaction ID"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=isInvalidTxn() ng-click=checkBatchModeStatus()><span>Check Transaction ID</span> <span uk-spinner ng-show=loading_txn></span></button></p><hr class=uk-divider-icon><p uk-margin class=uk-text-center ng-show="data.batchmodeResponse.error.status && !loading"><span class=uk-text-center>You have entered an invalid Transaction Id. Please enter a correct Transaction Id</span></p><p uk-margin class=uk-text-center ng-show="data.batchmodeResponse && !data.batchmodeResponse.error.status && !loading"><span ng-show=!data.batchmodeResponse.record.outputUrl class=uk-text-center>Your transaction is still under processing, please try again later</span> <span ng-show=data.batchmodeResponse.record.outputUrl class=uk-text-center>Your transaction is ready to download, click the button below to download</span><br><a href={{data.batchmodeResponse.record.outputUrl}} ng-show=data.batchmodeResponse.record.outputUrl class="uk-button uk-button-primary uk-button-medium" ng-disabled=isInvalidTxn() ng-click=checkBatchModeStatus()><span>download</span></a></p><hr class=uk-divider-icon ng-show=data.batchmodeResponse><div class="uk-card uk-card-body bg-grey" ng-show="data.batchmodeResponse && !data.batchmodeResponse.error.status && !loading"><pre pretty-json=data.batchmodeResponse></pre></div></div></div>'), e.put("app/constants/apiStatus.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment">Api Status</h1><h3>Click <a target=_blank href=https://status.signzy.com/ >here</a> to visit our Status page to check the API Status</h3></div></div>'), e.put("app/constants/authentication.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment">Authentication</h1><p class=uk-text-lead>Authorizing your access</p><p>If you are seeing this page, you already have a <b>username</b> and an <b>API key</b>. The key also acts like your password to the APIs. You need to have an access token for making any further API calls, which you can receive by logging in manually or programmatically using these credentials.</p><p>Signzy APIs adhere to authentication defined by <b>Swagger 2.0</b> specifications. Each call to the APIs should include an <b>\'Authorization\'</b> header or <b>\'access_token\'</b> query parameter for authentication.</p><p><b>You can find working examples at the bottom of this page.</b></p><h3>Logging in</h3><p>Logging in into the API service requires a simple HTTP call. Following section mentions data to be input, expected output and meaning of fields.</p><pre><code class=language-javascript>\n  // Data exchange\n  For Test Credentials\n  // POST :: https://preproduction.signzy.tech/api/v2/patrons/login\n  For Production Credentials\n  // POST :: https://signzy.tech/api/v2/patrons/login\n  // Input post body\n  {\n    "username": "test",\n    "password": "test"\n  }\n  // Expected response\n  {\n    "id": "FHhRA6gSzUELkTvGLbUVDKyl1bbo6WHPCd5XZMScfA4CeNdy1K55jgCej23ovqDA",\n    "ttl": 1209600,\n    "created": "2016-06-28T10:11:37.364Z",\n    "userId": "57724d4ccd2b6569054dbb56"\n  }\n  // id => your access token for accessing Signzy APIs\n  // userId => your user ID as on file\n  // ttl => number of seconds for which the access token is valid\n  </code></pre><h3>Sending authenticated requests</h3><p>Once you have an access token from the login API call, you can send further calls to different endpoints by passing the access-token in Authorization header or in access_token query (GET) parameter.</p><p>It is advisable to send Access Token in header since, query parameters are sometimes saved in the log files thereby exposing vulnerabilities until the access_token is deleted from sessions.</p><h3>Security</h3><p>Anybody with your API key/password or an Access Token generated using them can access all information you have created and also send requests on your behalf. It is strongly recommended to not send API-key/Password to client side and instead use reverse proxy to call Signzy APIs.</p><p>If case you think an access token is compromised, you should delete it using logout. Let us know if your Signzy Password/API-key is compromised as soon as possible, so that we can disable & create new ones and prevent any misuse of your data.</p><div class=uk-text-right><a href=https://www.getpostman.com/run-collection/8adcfff50cd73a1f229c target=_blank><img src=https://run.pstmn.io/button.svg alt="Run in Postman"></a></div><h3>Code samples</h3><br><iframe src="//apiembed.signzy.tech/?source=https://signzy.xyz/cdn/indiagate/login.json" frameborder=0 scrolling=no width=100% height=500px seamless></iframe><h3>Logging out</h3><p>To logout you simply need to call the logout route with the access token in \'access_token\' query parameter or as \'Authorization\' header.</p><pre>\n    <code class=language-javascript>\n    // Logout\n    For Test Credentials\n    // POST :: https://preproduction.signzy.tech/api/v2/patrons/logout?access_token=6w3VAjJOQXA8SLHT5aTI9JvCL3FibcCUyAoya4vtj3PQE9tghpZyEbG5UPtvLjjO\n    For Production Credentials\n    // POST :: https://signzy.tech/api/v2/patrons/logout?access_token=6w3VAjJOQXA8SLHT5aTI9JvCL3FibcCUyAoya4vtj3PQE9tghpZyEbG5UPtvLjjO\n    // Response is 204 status code with no content, indicating the Access-token has been deleted.\n    </code>\n  </pre></div></div>'), e.put("app/constants/user-dashboard.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment">Usage Dashboard</h1><p class=uk-text-lead>Checking your usage</p><p>Click <a target=_blank href={{dashboardUrl}}>here</a> to visit our dashboard page to check your API usage</p></div></div>'), e.put("app/contact/contact.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Get in touch</a></h1><p class=uk-text-lead>Help & support</p><!-- <h1>Get in touch</h1> --><!-- <h3>Help & support</h3> --><p>In case you have any <b>queries</b>, need clarification or have any <b>suggestions/feedback</b> for improving any services or making the docs better, please feel free to tell us.</p><p>You can connect with us here:</p><p><a href="mailto:support@signzy.com?Subject=API%20Documentation%20Feedbacks" target=_top>support@signzy.com</a><br></p></div></div>'), e.put("app/converters/compressimage.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Compress Image</a></h1><p>Upload the image you want to compress</p><br><br><div class="test-upload uk-placeholder uk-text-center mar-0"><div uk-lightbox><div ng-if="data.converter_files[0].length > 0"><a class=uk-inline ng-href={{data.converter_files[0]}}><img ng-src={{data.converter_files[0]}} width=400 height=400 ng-if="data.converter_files[0].indexOf(\'pdf\') == -1"> </a><span ngf-select=fileUpload($file,0) ng-model=data.converter_files[0] uk-icon="icon: file-edit" class=uk-link ng-if="data.converter_files[0].length > 0">&nbsp;</span> <a ng-click="data.converter_files[0] =\'\'" uk-icon="icon: trash" ng-if="data.converter_files[0].length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.converter_files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($file, 0)" ng-model=data.converter_files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload File</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=compress()><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Compress Image</label><input class=uk-input type=text ng-model=data.converter_files[0] placeholder="Compress Image"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.converter_files.length == 0"><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.converterData && !loading"><pre pretty-json=data.converterData></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div></div>'), e.put("app/converters/compresspdf.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Compress Pdf</a></h1><p>Upload the Pdf you want to compress</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0"><div class=pad-left0 uk-lightbox><div ng-if=data.converter_files[0]><object data={{data.converter_files[0]}} ngf-pattern="\'application/pdf\'" ngf-accept="\'application/pdf\'" type=application/pdf width=300 height=300 ng-if="data.converter_files[0].indexOf(\'pdf\') != -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.converter_files[0] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.converter_files[0] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.converter_files[0]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($file, 0)" ng-model=data.converter_files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=compressPdf()><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Compress Pdf</label><input class=uk-input type=text ng-model=data.converter_files[0] placeholder="Compress Pdf"></div></div><p uk-margin class=uk-text-center><button type=button class="uk-button uk-button-primary uk-button-medium" ng-disabled=!compressedData ng-click=downloadFile()><span>Download</span></button></p><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.converter_files.length == 0"><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.converterData && !loading"><pre pretty-json=data.converterData></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div></div>'), e.put("app/converters/compressvideo.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Compress Video</a></h1><p>Upload the Video you want to compress</p><br><br><div class="test-upload uk-placeholder uk-text-center mar-0"><div class=pad-left0 uk-lightbox><div ng-if="data.converter_files[0].length > 0"><img src=assets/images/video.png class=ht100 ng-if="data.converter_files[0].toLowerCase().indexOf(\'.mp4\') != -1 || data.converter_files[0].toLowerCase().indexOf(\'.avi\') != -1 || data.converter_files[0].toLowerCase().indexOf(\'.blob\') != -1 || data.converter_files[0].toLowerCase().indexOf(\'.avi\') != -1"><br><br><span ngf-select=fileUploadForVideo($file,0) ng-model=data.converter_files[0] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.converter_files[0] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.converter_files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUploadForVideo($file, 0)" ng-model=data.converter_files[0] ngf-max-size=90MB ngf-drop="" class=uk-link>&nbsp;<span ng-bind="\'Upload \' + data.fileType.toUpperCase() + \' File\'"></span></span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=compressVideo()><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Compress Video</label><input class=uk-input type=text ng-model=data.converter_files[0] placeholder="Compress Video"></div></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Compression Quality</label><select class=uk-select ng-model=data.quality><option value=HIGH>HIGH</option><option value=MEDIUM>MEDIUM</option><option value=LOW>LOW</option></select></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.converter_files.length == 0"><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.converterData && !loading"><pre pretty-json=data.converterData></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div></div>'), e.put("app/converters/docx-templator.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Doc Templator</a></h1><p>The Doc Templator product takes a .docx file with variables and json key value pair as input and returns back a docx file and pdf file with variables with proper values present in json.</p><br><br><div class="test-upload uk-placeholder uk-text-center mar-0"><div class=pad-left0 uk-lightbox><div ng-if="data.converter_files[0].length > 0"><img src=assets/images/doc.png class=ht100 ng-if="data.converter_files[0].toLowerCase().indexOf(\'docx\') != -1"><br><br><span ngf-select=fileUploadForVideo($file,0) ng-model=data.converter_files[0] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.converter_files[0] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.converter_files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUploadForVideo($file, 0)" ng-model=data.converter_files[0] ngf-max-size=90MB ngf-drop="" class=uk-link>&nbsp;<span ng-bind="\'Upload \' + data.fileType.toUpperCase() + \' File\'"></span></span></div></div></div><form name=formHuMain class="uk-form-horizontal uk-margin-large" ng-submit=runTemplator()><!-- ng-submit="runAdvanceForgery()" --><h3 class=uk-text-bold>Run Doc Templator</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Uploaded Docx File</label><input class=uk-input type=text ng-model=data.converter_files[0] placeholder="Uploaded Uploaded Docx  URL"></div></div><div ng-repeat="inputField in inputsFields" uk-grid><div uk-width-1-3@s><label class=uk-form-label for=form-stacked-text>Field name {{$index + 1}}</label><input class=uk-input type=text required ng-model=inputsFields[$index][0] placeholder="Field name"></div><div uk-width-2-3@s><label class=uk-form-label for=form-stacked-text>Field value {{$index + 1}}</label><input class=uk-input type=text required ng-model=inputsFields[$index][1] placeholder="Field value"></div></div><br><button ng-hide=loading class="uk-button uk-button-default uk-button-medium" ng-click="inputsFields.push([\'\', \'\'])"><span>Add another field</span><!-- <span uk-spinner ng-show="loading"></span> --></button> <button ng-hide=loading class="uk-button uk-button-default uk-button-medium" ng-click=inputsFields.pop()><span>Remove field</span><!-- <span uk-spinner ng-show="loading"></span> --></button><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="formHuMain.$invalid ||!data.converter_files[0] ||  data.converter_files[0].length ==0"><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.matchData && !loading"><pre pretty-json=data.matchData></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div></div>'), e.put("app/converters/dscvalidator.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Digital Signature on Pdf Validator</a></h1><p>Upload the Pdf you want to find whether it is digitally signed or not</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0"><div class=pad-left0 uk-lightbox><div ng-if=data.converter_files[0]><object data={{data.converter_files[0]}} ngf-pattern="\'application/pdf\'" ngf-accept="\'application/pdf\'" type=application/pdf width=300 height=300 ng-if="data.converter_files[0].indexOf(\'pdf\') != -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.converter_files[0] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.converter_files[0] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.converter_files[0]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($file, 0)" ng-model=data.converter_files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=checkDsc()><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Pdf File</label><input class=uk-input type=text ng-model=data.converter_files[0] placeholder="Pdf File"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.converter_files.length == 0"><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.converterData && !loading"><pre pretty-json=data.converterData></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div></div>'), e.put("app/converters/image-converter.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Image Converter API</a></h1><p>Image Converter API</p><br><br><div class="test-upload uk-placeholder uk-text-center mar-0"><div class=pad-left0 uk-lightbox><div ng-if="data.converter_files[0].length > 0"><img src=assets/images/tiff.png class=ht100 ng-if="data.converter_files[0].toLowerCase().indexOf(\'tiff\') != -1 || data.converter_files[0].toLowerCase().indexOf(\'tif\') != -1"> <a class=uk-inline ng-href={{data.converter_files[0]}}><img width=300 ng-src={{data.converter_files[0]}} max-width=50%; height="" alt="" ng-if="data.converter_files[0].indexOf(\'pdf\') == -1"></a><object data={{data.converter_files[0]}} type=application/pdf width=300 height=300 ng-if="data.converter_files[0].indexOf(\'pdf\') != -1"></object><br><br><span ngf-select=fileUpload($file,0) ng-model=data.converter_files[0] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.converter_files[0] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.converter_files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUploadForVideo($file, 0)" ng-model=data.converter_files[0] ngf-max-size=90MB ngf-drop="" class=uk-link>&nbsp;<span ng-bind="\'Upload \' + data.fileType.toUpperCase() + \' File\'"></span></span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=convertImage()><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Image Converter (Upload either PDF, JPG, GIF, PDF, TIFF)</label><input class=uk-input type=text ng-model=data.converter_files[0] placeholder="Image Converter"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Target Format</label><select class=uk-input type=text ng-model=data.targetFormat placeholder="Select format"><option value=tiff selected>TIFF</option><option value=png>PNG</option><option value=jpg>JPG</option><option value=pdf>PDF</option></select></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.converter_files.length == 0"><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.converterData && !loading"><pre pretty-json=data.converterData></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div></div>'), e.put("app/converters/pdf-to-jpg.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>PDF to JPG</a></h1><p>Convert PDF file to JPG image</p><br><br><div class="test-upload uk-placeholder uk-text-center mar-0"><div uk-lightbox><div ng-if="data.converter_files[0].length > 0"><object data={{data.converter_files[0]}} ngf-pattern="\'application/pdf\'" ngf-accept="\'application/pdf\'" type=application/pdf width=300 height=300 ng-if="data.converter_files[0].indexOf(\'pdf\') != -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.converter_files[0] uk-icon="icon: file-edit" class=uk-link ng-if="data.converter_files[0].length > 0">&nbsp;</span> <a ng-click="data.converter_files[0] =\'\'" uk-icon="icon: trash" ng-if="data.converter_files[0].length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.converter_files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($file, 0)" ng-model=data.converter_files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload File</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=convert()><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Convert PDF file to JPG</label><input class=uk-input type=text ng-model=data.converter_files[0] placeholder="Convert PDF file to JPG"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.converter_files.length == 0"><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.converterData && !loading"><pre pretty-json=data.converterData></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div></div>'), e.put("app/converters/tiff-to-jpg.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>TIFF to JPG</a></h1><p>Convert TIFF file to JPG image</p><br><br><div class="test-upload uk-placeholder uk-text-center mar-0"><div class=pad-left0 uk-lightbox><div ng-if="data.converter_files[0].length > 0"><img src=assets/images/tiff.png class=ht100 ng-if="data.converter_files[0].toLowerCase().indexOf(\'tiff\') != -1"><br><br><span ngf-select=fileUploadForVideo($file,0) ng-model=data.converter_files[0] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.converter_files[0] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.converter_files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUploadForVideo($file, 0)" ng-model=data.converter_files[0] ngf-max-size=90MB ngf-drop="" class=uk-link>&nbsp;<span ng-bind="\'Upload \' + data.fileType.toUpperCase() + \' File\'"></span></span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=convertTiff()><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Convert TIFF file to JPG</label><input class=uk-input type=text ng-model=data.converter_files[0] placeholder="Convert TIFF file to JPG"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.converter_files.length == 0"><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.converterData && !loading"><pre pretty-json=data.converterData></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div></div>'), e.put("app/dashboard/dashboard.html", '<div><div ng-show="!weekData || weekData.length == 0" class="dashboardSpinner uk-text-center uk-margin-large-top"><div uk-spinner="ratio: 5"></div><div class=uk-margin-medium-top>Please Wait... Loading your Dashboard</div></div><div ng-show="dashboard && weekData.length > 0"><div class=top_sec><div class="uk-text-center h-100" uk-grid><div class="uk-width-1-3@m h-100"><div class="uk-child-width-expand@m uk-text-center top-head" uk-grid><div class="uk-text-left headline"><h3><b>DASHBOARD</b></h3></div><div class=search-api><div class=uk-margin><div class="uk-search uk-search-default"><span uk-search-icon></span> <input ng-model=searchApi class=uk-search-input type=search placeholder="Search API Name..."></div></div></div></div><div id=usage-api class=scroll-style><div ng-repeat="api in apiList | filter:searchApi" ng-click=apiClick(api.name) class=api-usage-card><div class="uk-text-left uk-card uk-card-default uk-card-body no-margin" ng-class="{active: apiName == api.name}"><img src=./assets/images/dash.svg class=dash2><h4><b ng-bind=api.name></b></h4></div></div></div></div><div class="uk-width-expand h-100"><div class="uk-text top-head2 dwnld"><button class="uk-button uk-button-secondary" ng-show="!fileDownloaded && tableView.length > 0" ng-click=getFile()><span><img width=20 height=30 src=./assets/images/download2.svg> </span><span uk-spinner ng-show=load></span> <span class=marlt10 ng-hide=load>Get Report</span></button> <a class="uk-button uk-button-success" ng-show="fileDownloaded && tableView.length > 0" download ng-href={{excelObj.uploadedFile}}><span><img width=20 height=30 src=./assets/images/download.svg> </span>Download XLSX</a></div><!-- {{$scope.tableView}} --><!-- {{tableView}} --><div id=chartbox class="uk-card uk-card-default uk-card-body custom-card"><img src=./assets/images/dash.svg class=dash1><div class=h-100><div class=uk-flex><h5 class=uk-text-left><span class=uk-text-bold>{{apiName}}</span> Usage Report</h5></div><div class="magic-buttons auto-right-btn" uk-switcher="animation: uk-animation-fade; active:0; toggle: > *"><button ng-disabled=week class="uk-button uk-button-default uk-button-small uk-active" ng-click="active(\'week\')" type=button>Week</button> <button ng-disabled=month class="uk-button uk-button-default uk-button-small" ng-click="active(\'month\')" type=button>Month</button> <button ng-disabled=year class="uk-button uk-button-default uk-button-small" ng-click="active(\'year\')" type=button>Year</button></div><div class="uk-text-left uk-flex" uk-switcher="animation: uk-animation-fade; active:0; toggle: > *"><button ng-click="viewType = \'chart\'" class="uk-button uk-button-default uk-button-small uk-margin-right" type=button>Chart View</button> <button ng-click="viewType = \'table\'" class="uk-button uk-button-default uk-button-small" type=button>Table View</button></div><ul ng-show="chatLoaded && tableView.length > 0" class="uk-switcher uk-margin magic-canvas"><li ng-show="viewType = \'chart\'"><canvas id=line height=150 class="chart chart-line" chart-data=data chart-labels=labels chart-series=series chart-colors=colors chart-options=options chart-dataset-override=datasetOverride chart-click=onClick></canvas></li><li class=h-100 ng-show="viewType = \'table\'"><div id=tableView class=scroll-style><table class="uk-table uk-table-middle uk-table-divider top-table"><thead><tr><th ng-bind="filterType == \'year\' ? \'Month\' : \'Date\'"></th><th>Product Name</th><!-- <th>API Name</th> --><th>Total Hits</th></tr></thead><tbody><tr ng-repeat="tab in tableView track by $index"><td ng-bind=tab.monthName.toLowerCase() style="text-transform: capitalize"></td><td ng-bind=tab.productName></td><td ng-bind=tab.total></td></tr></tbody></table></div></li></ul><div ng-show="!tableView || tableView.length == 0" class="uk-padding font20">No hits found for <span ng-bind=apiName></span></div><div ng-show=loading class="h-100 uk-flex uk-flex-middle uk-flex-center"><div uk-spinner="ratio: 4.5"></div></div><!-- <div ng-show="chartBegin" class="h-100 uk-flex uk-flex-middle uk-flex-center">\n                                <h4>Please select the API</h4>\n                            </div> --></div></div></div></div></div><div ng-show=totalProcessLoading class="h-100 uk-flex uk-flex-middle uk-flex-center bottom_sec"><div uk-spinner="ratio: 4.5"></div></div><div class=bottom_sec ng-hide=totalProcessLoading><div class="uk-flex uk-flex-stretch"><div class="uk-width-expand uk-card uk-text-center uk-card-default uk-card-body custom-card"><img src=./assets/images/dash.svg class=dash1><table class="uk-table no-margin"><thead><tr><th><h4 class=no-margin><strong>Total API</strong> Usage</h4></th><th class=uk-text-right><img width=50 height=50 src=./assets/images/stat.svg></th></tr></thead></table><div class="scroll-style usage-table"><table class="uk-table no-margin uk-table-middle uk-table-divider tb-no-margin"><thead></thead><tbody><tr ng-repeat="api in apiList"><td class="uk-text-left uk-align">{{api.name}}</td><td>{{api.successHits}} hits</td></tr></tbody></table></div></div><div class="uk-width-1-6@s uk-width-1-4@m"><div class="uk-card uk-card-default uk-text-center uk-card-body uk-flex uk-flex-middle uk-flex-center uk-flex-column custom-card data"><canvas width=100 height=100 id=circular-progress-bar1></canvas><h4><b><span class=green>{{success}}%</span> Success</b> rate</h4></div><div class="uk-card uk-card-default uk-text-center uk-card-body uk-flex uk-flex-middle uk-flex-center uk-flex-column custom-card data"><canvas width=100 height=100 id=circular-progress-bar2></canvas><h4><b><span class=blue>{{save}}</span> Tree[s]</b> Saved</h4></div></div></div></div></div></div>'),
            e.put("app/digital-contracting/aadhaar-esign.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Aadhaar ESign</a></h1><p class=uk-text-lead>Signing of PDF with Aadhaar Based DSC E-Sign</p><p>Each <b>pdf</b> should be less than <b>2MB</b>.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0"><div class=pad-left0 uk-lightbox><div ng-if=data.files[0]><object data={{data.files[0]}} ngf-pattern="\'application/pdf\'" ngf-accept="\'application/pdf\'" type=application/pdf width=300 height=300 ng-if="data.files[0].indexOf(\'pdf\') != -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.files[0] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.files[0] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.files[0]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit="createUrl(\'aadhaaresign\')"><h3 class=uk-text-bold>ESign a PDF</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Input PDF</label><input class=uk-input type=text ng-model=data.files[0] placeholder="Input PDF(URL)"></div></div><!-- <div class="uk-margin">\n                <div>\n                    <label class="uk-form-label" for="form-stacked-text">Aadhaar Number</label>\n                    <input class="uk-input"  type="text" ng-model="data.uid" placeholder="Aadhaar Number">\n                </div>\n            </div> --><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Name</label><input class=uk-input type=text ng-model=data.name placeholder="Name of Signee"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.files.length == 0 || data.name == \'\'"><span ng-hide=loading>ESign</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon></div></div>'), e.put("app/digital-contracting/esign.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Normal ESign</a></h1><p class=uk-text-lead>Signing of PDF</p><p>Each <b>pdf</b> should be less than <b>2MB</b>.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0"><div class=pad-left0 uk-lightbox><div ng-if=data.files[0]><object data={{data.files[0]}} ngf-pattern="\'application/pdf\'" ngf-accept="\'application/pdf\'" type=application/pdf width=300 height=300 ng-if="data.files[0].indexOf(\'pdf\') != -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.files[0] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.files[0] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.files[0]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit="createUrl(\'esign\')"><h3 class=uk-text-bold>ESign a PDF</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Input PDF</label><input class=uk-input type=text ng-model=data.files[0] placeholder="Input PDF(URL)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Name</label><input class=uk-input type=text ng-model=data.name placeholder="Name of Signee"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.files.length == 0 || data.name == \'\'"><span ng-hide=loading>ESign</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon></div></div>'), e.put("app/estamping/daily-mis.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>E-stamp Daily MIS Data sandbox</a></h1><p>Get Daily MIS here.</p><form class="uk-form-horizontal uk-margin-large" name=dailyMis><div class=uk-margin><label class=uk-form-label for=form-stacked-text>State</label><select class=uk-select ng-model=dailyMisData.stateCode ng-init="dailyMisData.stateCode=stateList[0].stateCode"><option ng-value=state.stateCode ng-repeat="state in stateList">{{ state.stateName }}</option></select></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>MIS Date</label><input class=uk-input type=date ng-model=dailyMisData.misDate required></div><div class=uk-margin-medium-top></div><p uk-margin class=uk-text-center><!-- <button class="uk-button uk-button-danger uk-button-medium" ng-click="setDefaultSsn()">\n                    <span>Set Default</span>\n                </button> --> <button class="uk-button uk-button-primary uk-button-medium" ng-disabled=dailyMis.$invalid ng-click=getDailyMis()><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="dailyMisData.dailyMisData && !loading"><pre pretty-json=dailyMisData.dailyMisData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="dailyMisData.error && !loading"><div class=responseCard><pre pretty-json=dailyMisData.error></pre></div></div></div>'), e.put("app/estamping/estamp-get-status.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>E-stamp get status sandbox</a></h1><p>Get get status here.</p><form class="uk-form-horizontal uk-margin-large" name=EstampStatus><div class=uk-margin><label class=uk-form-label for=form-stacked-text>TransactionId</label><input class=uk-input type=text ng-model=getEstampStatus.transactionId required></div><div class=uk-margin-medium-top></div><p uk-margin class=uk-text-center><!-- <button class="uk-button uk-button-danger uk-button-medium" ng-click="setDefaultSsn()">\n                    <span>Set Default</span>\n                </button> --> <button class="uk-button uk-button-primary uk-button-medium" ng-disabled=EstampStatus.$invalid ng-click=getEstampStatus()><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="getEstampStatus.getEstampStatus && !loading"><pre pretty-json=getEstampStatus.getEstampStatus></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="getEstampStatus.error && !loading"><div class=responseCard><pre pretty-json=getEstampStatus.error></pre></div></div></div>'), e.put("app/estamping/get-urn-status.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>E-stamp URN status sandbox</a></h1><p>Get URN status here.</p><form class="uk-form-horizontal uk-margin-large" name=urnStatus><div class=uk-margin><label class=uk-form-label for=form-stacked-text>URN</label><input class=uk-input type=text ng-model=urnStatusData.urn required></div><div class=uk-margin-medium-top></div><p uk-margin class=uk-text-center><!-- <button class="uk-button uk-button-danger uk-button-medium" ng-click="setDefaultSsn()">\n                    <span>Set Default</span>\n                </button> --> <button class="uk-button uk-button-primary uk-button-medium" ng-disabled=urnStatus.$invalid ng-click=getUrnStatus()><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="urnStatusData.urnStatusData && !loading"><pre pretty-json=urnStatusData.urnStatusData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="urnStatusData.error && !loading"><div class=responseCard><pre pretty-json=urnStatusData.error></pre></div></div></div>'), e.put("app/estamping/procure-estamp.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Procure E-Stamp sandbox</a></h1><p>Procure estamp here.</p><form class="uk-form-horizontal uk-margin-large" name=EstampProcure><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Consumer Id</label><input class=uk-input type=text required ng-model=procureEstamp.consumerId placeholder="Consumer Id"></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Consumer Name</label><input class=uk-input type=text ng-model=procureEstamp.consumerName placeholder="Consumer Name (optional)"></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>First Party</label><input class=uk-input type=text required ng-model=procureEstamp.firstParty placeholder="First Party"></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Second Party</label><input class=uk-input type=text required ng-model=procureEstamp.secondParty placeholder="Second Party"></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>State Code</label><input class=uk-input type=text required ng-model=procureEstamp.stateCode placeholder="State Code"></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Denomination</label><input class=uk-input type=number required ng-model=procureEstamp.denomination placeholder=Denomination></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Article Code</label><input class=uk-input type=text required ng-model=procureEstamp.articleCode placeholder="Article Code"></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Qty</label><input class=uk-input type=number required ng-model=procureEstamp.qty placeholder=Qty></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Address</label><input class=uk-input type=text required ng-model=procureEstamp.address placeholder=Address></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Support Email</label><textarea class=uk-textarea required ng-model=procureEstamp.supportEmail placeholder="Support email (comma separated)"></textarea></div><div class=uk-margin-medium-top></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-=EstampProcure.$invalid ng-click=procureEstamp()><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="procureEstamp.procureEstamp && !loading"><pre pretty-json=procureEstamp.procureEstamp></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="procureEstamp.error && !loading"><div class=responseCard><pre pretty-json=procureEstamp.error></pre></div></div></div>'), e.put("app/estamping/request-estamp.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Request E-Stamp sandbox</a></h1><p>Try using Estamping here.</p><form class="uk-form-horizontal uk-margin-large" name=estampForm><!-- Upload PDF Logic --><!-- <div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0">\n                <div class="pad-left0" uk-lightbox>\n                    <div ng-if="estampData.pdfUrl">\n                        <object data="{{estampData.pdfUrl}}" ngf-pattern="\'application/pdf\'"\n        ngf-accept="\'application/pdf\'" type="application/pdf" width="300" height="300" ng-if="estampData.pdfUrl.indexOf(\'pdf\') != -1">\n                        </object>\n                        <span ngf-select="fileUpload($file,0)" ng-model=\'estampData.pdfUrl\' uk-icon="icon: file-edit" class="uk-link">&nbsp;</span>\n                        <a ng-click="estampData.pdfUrl =\'\'" uk-icon="icon: trash"></a>\n                    </div>\n                    <div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="estampData.pdfUrl">\n                        <span uk-icon="icon: cloud-upload"></span>\n                        <span ngf-select=\'fileUpload($file, 0)\' ng-model=\'estampData.pdfData\' ngf-max-size="20MB" ngf-drop="" class="uk-link">&nbsp;Upload file</span>\n                    </div>\n                </div>\n            </div> --><p class=uk-text-lead>Signing of PDF</p><p><b>pdf</b> should be less than <b>2MB</b>.</p><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0"><div class=pad-left0 uk-lightbox><div ng-if=estampData.pdfUrl><object data={{estampData.pdfUrl}} ngf-pattern="\'application/pdf\'" ngf-accept="\'application/pdf\'" type=application/pdf width=300 height=300 ng-if="estampData.pdfUrl.indexOf(\'pdf\') != -1"></object><span ngf-select=fileUpload($file,0) ng-model=estampData.pdfData uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="estampData.pdfUrl =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=estampData.pdfUrl><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=estampData.pdfData ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload file</span></div></div></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Stamp Duty Value</label><input class=uk-input type=number required ng-model=estampData.stampDutyValue></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>First Party Name</label><input class=uk-input type=text ng-model=estampData.firstPartyName></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Second Party Name</label><input class=uk-input type=text ng-model=estampData.secondPartyName></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>State Code</label><select class=uk-select ng-model=estampData.stateCode><option ng-value=state.stateCode ng-init="estampData.stateCode=statesAllowed[0].stateCode" ng-repeat="state in statesAllowed">{{ state.stateName }}</option></select></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Consideration Price</label><input class=uk-input type=text ng-model=estampData.considerationPrice required></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Purpose of Stamp Duty</label><input class=uk-input type=text ng-model=estampData.purposeOfStampDuty required></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Stamp Duty Paid By</label><input class=uk-input type=text ng-model=estampData.stampDutyPaidBy required></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Article Code</label><input class=uk-input type=text ng-model=estampData.articleCode></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Callback URL</label><input class=uk-input type=text ng-model=estampData.callbackUrl></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>File TTL</label><select class=uk-select ng-model=estampData.fileTtl ng-init=estampData.fileTtl><option ng-value=ttl ng-repeat="ttl in listofTtl">{{ ttl }}</option></select></div><div class=uk-margin-medium-top></div><p uk-margin class=uk-text-center><!-- <button class="uk-button uk-button-danger uk-button-medium" ng-click="setDefaultSsn()">\n                    <span>Set Default</span>\n                </button> --> <button class="uk-button uk-button-primary uk-button-medium" ng-=estampForm.$invalid ng-click=requestEstamp()><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="estampData.estampData && !loading"><pre pretty-json=estampData.estampData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="estampData.error && !loading"><div class=responseCard><pre pretty-json=estampData.error></pre></div></div><!-- <div class="uk-placeholder" ng-show="estampDisplayResponse && !loading">\n        <p>&ast; Some States Such as Maharashtra(MH) don\'t support estamping so, we do traditional estamping there.</p>\n        <p>&ast; Click the below button to see to traditional estamping for Maharashtra(MH)</p>\n        <p class="uk-text-center">\n            <button class="uk-button uk-button-primary uk-button-medium" ng-click="openTraditionalPdf()">\n                Traditional E-Stamping\n            </button>\n        </p>\n    </div> --></div>'), e.put("app/gstn/company-to-gst.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Company Name to GST </a></h1><p class=uk-text-lead>Get GSTIN List from Company Name</p><form class="uk-form-horizontal uk-margin-large" ng-submit=companyNameToGst()><h3 class=uk-text-bold>Company Name to GSTIN List</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Company Name</label><input class=uk-input type=text ng-model=data.companyName placeholder="Company Name (Eg. signzy)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.companyName == \'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.companyNameToGstResponse && !loading"><pre pretty-json=data.companyNameToGstResponse></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div></div>'), e.put("app/gstn/detailed-gstin-search.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Detailed GSTIN Search</a></h1><p class=uk-text-lead>Get GSTIN details from GSTIN Number</p><form class="uk-form-horizontal uk-margin-large" ng-submit=detailedGstinSearch()><h3 class=uk-text-bold>Detailed GSTIN Search</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>GSTIN Number</label><input class=uk-input type=text ng-model=data.gstin placeholder="GSTIN Number (Eg. 27AOKPP9482P1ZQ)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.gstin ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.gstinResponse && !loading"><pre pretty-json=data.gstinResponse></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div></div>'), e.put("app/gstn/gst-to-hsn.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>GST to HSN List</a></h1><p class=uk-text-lead>Get HSN List from GST number</p><form class="uk-form-horizontal uk-margin-large" ng-submit=gstToHsn()><h3 class=uk-text-bold>GST to HSN</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>GSTIN Number</label><input class=uk-input type=text ng-model=data.gstin placeholder="GSTIN Number (Eg. 27AOKPP9482P1ZQ)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.gstin ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.hsnResponse && !loading"><pre pretty-json=data.hsnResponse></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div></div>'), e.put("app/gstn/gstin-search.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>GSTIN Search</a></h1><p class=uk-text-lead>Get GSTIN details from GSTIN Number</p><form class="uk-form-horizontal uk-margin-large" ng-submit=gstinSearch()><h3 class=uk-text-bold>GSTIN Search</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>GSTIN Number</label><input class=uk-input type=text ng-model=data.gstin placeholder="GSTIN Number (Eg. 27AOKPP9482P1ZQ)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.gstin ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.gstinResponse && !loading"><pre pretty-json=data.gstinResponse></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div></div>'), e.put("app/gstn/pan-to-gst-list.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>PAN to GST List</a></h1><p class=uk-text-lead>Get GSTIN List from PAN Number</p><form class="uk-form-horizontal uk-margin-large" ng-submit=pantoGstList()><h3 class=uk-text-bold>PAN to GSTIN List</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>PAN Number</label><input class=uk-input type=text ng-model=data.pan placeholder="PAN Number (Eg. AAWCS3552Q)"><div class=uk-text-danger ng-show=wrongInput>Please Enter a valid PAN Number</div></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Callback URL (optional)</label><input class=uk-input type=text ng-model=data.callbackUrl placeholder=CallbackURL></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.pan == \'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.pantoGstListResponse && !loading"><pre pretty-json=data.pantoGstListResponse></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div></div>'), e.put("app/gstn/pan-to-gst.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>PAN to GST</a></h1><p class=uk-text-lead>Get GSTIN details from PAN Number and State</p><form class="uk-form-horizontal uk-margin-large" ng-submit=pantoGst()><h3 class=uk-text-bold>PAN to GSTIN Details</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>PAN Number</label><input class=uk-input type=text ng-model=data.pan placeholder="PAN Number (Eg. AAWCS3552Q)"><div class=uk-text-danger ng-show=wrongInput>Please Enter a valid PAN Number</div></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>State</label><select class=uk-select ng-model=data.state ng-init="data.state = states[0].name"><option ng-value=state.name ng-repeat="state in states">{{ state.name }}</option></select></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Email</label><input class=uk-input type=email ng-model=data.email placeholder="Email (Eg. ankit@signzy.com)"><div class=uk-text-danger ng-show=wrongEmailInput>Please Enter a valid EmailID</div></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.pan ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.pantoGstResponse && !loading"><pre pretty-json=data.pantoGstResponse></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div></div>'), e.put("app/gstn/view-returns.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>View and Track GST Returns</a></h1><p class=uk-text-lead>Get Tax Returns from GSTIN and Financial Year</p><form class="uk-form-horizontal uk-margin-large" ng-submit=viewReturns()><h3 class=uk-text-bold>View and Track Returns</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>GSTIN Number</label><input class=uk-input type=text ng-model=data.gstin placeholder="GSTIN Number (Eg. 27AOKPP9482P1ZQ)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Financial Year</label><input class=uk-input type=text ng-model=data.financialYear placeholder="Financial Year (Eg. 2017-18)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.gstin ==\'\' || data.financialYear ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.returnResponse && !loading"><pre pretty-json=data.returnResponse></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div></div>'), e.put("app/gstr1/authtoken-request.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>GSTR Auth Token Request</a></h1><form class="uk-form-horizontal uk-margin-large" ng-submit=authTokenRequest()><h3 class=uk-text-bold>Auth Token Request</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>GSTIN Number</label><input class=uk-input type=text ng-model=data.gstin placeholder="GSTIN Number"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Username</label><input class=uk-input type=text ng-model=data.username placeholder=Username></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>OTP</label><input class=uk-input type=text ng-model=data.otp placeholder=OTP></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>APP KEY</label><input class=uk-input type=text ng-model=data.appKey placeholder="APP KEY"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.gstin ==\'\' || data.username ==\'\' || data.otp ==\'\' || data.appKey ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.authReponse && !loading"><pre pretty-json=data.authReponse></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div></div>'), e.put("app/gstr1/gstr1-summary.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>GSTR1 Summary Request</a></h1><p class=uk-text-lead>Get GSTR1 Summary from GSTIN and Username</p><form class="uk-form-horizontal uk-margin-large" ng-submit=gstr1SummaryRequest()><h3 class=uk-text-bold>GSTR1 Summary</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>GSTIN Number</label><input class=uk-input type=text ng-model=data.gstin placeholder="GSTIN Number"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Username</label><input class=uk-input type=text ng-model=data.username placeholder=Username></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Auth Token</label><input class=uk-input type=text ng-model=data.authToken placeholder="Auth Token"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Secret Key</label><input class=uk-input type=text ng-model=data.sek placeholder="Secret Key"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>APP KEY</label><input class=uk-input type=text ng-model=data.appKey placeholder="APP KEY"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Return Period</label><input class=uk-input type=text ng-model=data.retPeriod placeholder="Return Period (Eg: 12/2017)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.gstin ==\'\' || data.username ==\'\' || data.authToken ==\'\' || data.sek ==\'\' || data.retPeriod ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.returnResponse && !loading"><pre pretty-json=data.returnResponse></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div></div>'), e.put("app/gstr1/gstr2a-b2b.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>GSTR2A B2B Transactions Request</a></h1><p class=uk-text-lead>Get B2B Transactions from GSTIN and Username</p><form class="uk-form-horizontal uk-margin-large" ng-submit=gstr2b2bRequest()><h3 class=uk-text-bold>GSTR2a B2B Transactions</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>GSTIN Number</label><input class=uk-input type=text ng-model=data.gstin placeholder="GSTIN Number"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Username</label><input class=uk-input type=text ng-model=data.username placeholder=Username></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Auth Token</label><input class=uk-input type=text ng-model=data.authToken placeholder="Auth Token"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Secret Key</label><input class=uk-input type=text ng-model=data.sek placeholder="Secret Key"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>APP KEY</label><input class=uk-input type=text ng-model=data.appKey placeholder="APP KEY"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Return Period</label><input class=uk-input type=text ng-model=data.retPeriod placeholder="Return Period (Eg: 12/2017)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.gstin ==\'\' || data.username ==\'\' || data.authToken ==\'\' || data.sek ==\'\' || data.retPeriod ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.returnResponse && !loading"><pre pretty-json=data.returnResponse></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div></div>'), e.put("app/gstr1/gstr3b-summary.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>GSTR3b Summary Request</a></h1><p class=uk-text-lead>Get GSTR3b Summary from GSTIN and Username</p><form class="uk-form-horizontal uk-margin-large" ng-submit=gstr3bSummaryRequest()><h3 class=uk-text-bold>GSTR3b Summary</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>GSTIN Number</label><input class=uk-input type=text ng-model=data.gstin placeholder="GSTIN Number"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Username</label><input class=uk-input type=text ng-model=data.username placeholder=Username></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Auth Token</label><input class=uk-input type=text ng-model=data.authToken placeholder="Auth Token"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Secret Key</label><input class=uk-input type=text ng-model=data.sek placeholder="Secret Key"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>APP KEY</label><input class=uk-input type=text ng-model=data.appKey placeholder="APP KEY"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Return Period</label><input class=uk-input type=text ng-model=data.retPeriod placeholder="Return Period (Eg: 12/2017)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.gstin ==\'\' || data.username ==\'\' || data.authToken ==\'\' || data.sek ==\'\' || data.retPeriod ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.returnResponse && !loading"><pre pretty-json=data.returnResponse></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div></div>'),
            e.put("app/gstr1/otp-request.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>GSTR OTP Request</a></h1><form class="uk-form-horizontal uk-margin-large" ng-submit=otpRequest()><h3 class=uk-text-bold>OTP Request</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>GSTIN Number</label><input class=uk-input type=text ng-model=data.gstin placeholder="GSTIN Number"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Username</label><input class=uk-input type=text ng-model=data.username placeholder=Username></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.gstin ==\'\' || data.username ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.otpResponse && !loading"><pre pretty-json=data.otpResponse></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div></div>'), e.put("app/hdfc-email/batch-mode-create.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Process Batch Mode</a></h1><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0"><div class=pad-left0 uk-lightbox><div ng-if=batchModeData.url><!-- <object data="https://spdf.signzy.tech/web/viewer.html?file={{batchModeData.url}}" type="text/csv" width="300" height="300" ng-if="batchModeData.url.indexOf(\'csv\') != -1">\n                        </object> --> <span ngf-select=fileUpload($file,0) ng-model=batchModeData.url uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="batchModeData.url =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=batchModeData.url><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=batchModeData.url ngf-max-size=20MB accept=.csv ngf-drop="" class=uk-link>&nbsp;Upload file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" name=batchmodeFetch id=batchmodeFetch><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Input CSV</label><input class=uk-input type=text ng-model=batchModeData.url placeholder="Input CSV(URL)" required></div><p>Sample: <a href={{batchModeData.sampleUrl}}>{{data.api}} CSV</a></p></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>E-mail IDs (comma seperated)</label><input class=uk-input type=text ng-model=batchModeData.emailId ng-change=filterEmails(batchModeData.emailId) placeholder="E-Mail ID (comma seperated)" required> <span ng-repeat="email in batchModeData.emailIds" style="background: lightgrey; margin-right: 3px; padding: 3px 15px; border-radius: 3000px; position: relative;top: 15px">{{email}}</span></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>E-Mail Subject</label><input class=uk-input type=text ng-model=batchModeData.emailSubject placeholder="E-Mail Subject" required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Callback URL (optional)</label><input class=uk-input type=text ng-model=batchModeData.callbackUrl placeholder=CallbackURL></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=batchmodeFetch.$invalid ng-click=startBatchModeProcess()><span>Start Batch Mode</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div ng-show=transactionId>Transaction ID: {{transactionId}}</div><div ng-show=transactionId>Please save the above Transaction ID for your reference</div><div class="uk-card uk-card-body bg-grey" ng-show="batchModeData.batchmodeResponse && !loading"><pre pretty-json=batchModeData.batchmodeResponse></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div></div>'), e.put("app/hdfc-email/batch-mode-get-data.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Batch Processing</a></h1><form class="uk-form-horizontal uk-margin-large" ng-submit=checkBatchModeStatus()><h3 class=uk-text-bold>Enter request ID below</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Request ID</label><input class=uk-input type=text ng-model=batchModeData.transactionId placeholder="Request ID"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium"><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><p uk-margin class=uk-text-center ng-if="batchModeData.batchmodeResponse && !loading"><a download href={{batchModeData.batchmodeResponse.record.outputUrl}}>Download Output file</a></p><div class="uk-card uk-card-body bg-grey" ng-show="batchModeData.batchmodeResponse && !loading"><pre pretty-json=batchModeData.batchmodeResponse></pre></div></div></div><div class="uk-card uk-card-body bg-grey" ng-show="batchModeData.error && !loading"><div class=responseCard><pre pretty-json=batchModeData.error></pre></div></div>'), e.put("app/hdfc-email/email-fetch-create.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Email Verification</a></h1><form class="uk-form-horizontal uk-margin-large" name=emailForm><h3 class=uk-text-bold>Enter data as below</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>First Name</label><input class=uk-input type=text ng-model=data.firstName placeholder="First Name" required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Last Name</label><input class=uk-input type=text ng-model=data.lastName placeholder="Last Name" required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Email</label><input class=uk-input type=email ng-model=data.emailId placeholder=Email ng-pattern=^([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$ required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Employer Name</label><input class=uk-input type=text ng-model=data.employerName placeholder="Employer Name" required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Employment Month</label><input class=uk-input ng-pattern=/[\\d]{2}\\/[\\d]{4}/ type=text ng-model=data.employmentMonth placeholder="Employment Month" maxlength=7 required></div></div><p uk-margin class=uk-text-center><button type=submit ng-disabled=emailForm.$invalid ng-click=extract() class="uk-button uk-button-primary uk-button-medium"><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button> <button ng-click=emailGetData() ng-disabled=disableResult class="uk-button uk-button-primary uk-button-medium"><span>Get results</span> <span uk-spinner ng-show=resLoading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.getDataResponse && !loading"><pre pretty-json=data.getDataResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/hdfc-email/email-fetch-get-data.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Email Verification</a></h1><form class="uk-form-horizontal uk-margin-large" ng-submit=emailGetData()><h3 class=uk-text-bold>Enter data as below</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Request ID</label><input class=uk-input type=text ng-model=fetchData.requestId placeholder="Request ID"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium"><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="fetchData.getDataResponse && !loading"><pre pretty-json=fetchData.getDataResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="fetchData.error && !loading"><div class=responseCard><pre pretty-json=fetchData.error></pre></div></div></div>'), e.put("app/identities/identities-flow.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Identities workflow</a></h1><p class=uk-text-lead>Entire identity workflow involves the following stages.</p><ol><li>Auto read (Extraction)</li><li>Data verification</li><li>Forgery check</li></ol><p>Read through this document to get a broad idea of how the <b>Identity APIs</b> work.</p><i>Use the navigation on the left to walk through each ID-card.</i><h3>Auto reading</h3><p>This API reads the fields mentioned on an ID card. The API accepts image(s) of Identity cards and returns the fields it could read from them.</p><p>You could <b>prefill form fields</b> using the auto read output and ensure that user does not have to type all the information from his card. The autofill data can then be <b>validated</b> to make sure any mistakes that might have crept in from the machine reading are removed before sending it for verification.</p><h3>Data verification</h3><p>The verification step should be executed once the data has been <b>validated</b> for correctness. The input data is checked against <b>government</b> and other <b>trusted ledgers</b> for correctness. The API returns with <b>true/false</b> indicating the input information is correct.</p><h3>Forgery check</h3><p>This API performs a large set of checks on the ID card images and flags if any possible forgery are detected.</p><p>Coming soon ..</p><i>Use the navigation on the left to walk through each ID-card.</i><h3>** Task parameters & snoop requests. **</h3><p>After you create an Identity object as described in the following section, you can perform the following tasks in the name of <b>snoop requests</b>.</p><ul><li>autoRecognition</li><li>verification</li></ul><p>To know more about snoop requests, please navigate through each identity\'s own documentation from the left menu.</p><h2>Creating an Identity card object</h2><p>Creating an Identity object will require you to be logged in using the <b>username</b> and <b>API-key</b>. To know how to authenticate visit the <a href ui-sref=home.auth>Authentication</a> section.</p><p>Before performing any auto recognition, verification or forgery check, you need to create an Identity object. All operations related to a particular ID card are executed through this object.</p><b>Supported type parameter for creation of Identity objects</b><ul><li>individualPan</li><li>businessPan</li><li>aadhaar</li><li>passport</li><li>drivingLicence</li><li>cheque</li></ul><b>Creating Identity object:</b><p>The following example demonstrates creation of an Identity object for verifying an \'individualPan\'.</p><hr class=uk-margin><div class=uk-margin-medium><pre class=language-javascript><code class=js>\n\n            // Data exchange\n            For Test Credentials\n            // POST :: https://preproduction.signzy.tech/api/v2/patrons/&lt;patron-id&gt;/identities\n            For Production Credentials\n            // POST :: https://signzy.tech/api/v2/patrons/&lt;patron-id&gt;/identities\n            // *** patron-id = ..your-id-into-signzy-system-(userId-returned-from-the-login-call)..\n\n            // Headers\n            {\n              \'Content-Type\': \'application/json\',\n              \'Authorization\': \'..id-parameter-returned-from-the-login-step..\'\n            }\n\n            // Input post body\n            {\n              "type": "individualPan",\n              "email": "admin@signzy.com",\n              "callbackUrl": "https://your-domain.com/your-callback-system",\n              "images": [\n                "&lt;urls-to-uploaded-files&gt;"\n              ]\n            }\n            // callbackUrl is where the data is posted on each activity performed on this Identity object\n            // Expected response\n            {\n              "type": "individualPan",\n              "email": "admin@signzy.com",\n              "callbackUrl": "https://your-domain.com/your-callback-system",\n              "images": [\n                "&lt;urls-to-uploaded-files&gt;"\n              ],\n              "autoRecognition": [],\n              "verification": [],\n              "forgeryCheck": [],\n              "accessToken": "..access-token-for-the-snoop-request..",\n              "id": "..itemId-for-the-snoop-request....",\n              "patronId": "..your-id-into-signzy-system-(userId-returned-from-the-login-call).."\n            }\n        </code>\n        </pre></div><hr class=uk-margin><!-- <h3>Driving licence verification code samples</h3> --><p>Code samples corresponding to the above example for creating a Identity Request.</p><iframe src="//apiembed.signzy.tech/?source=https://signzy.xyz/cdn/indiagate/individualPan.identity.json" frameborder=0 scrolling=no width=100% height=500px seamless></iframe></div></div>'), e.put("app/kraservices/kraService.html", '``<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>KRA Services Sandbox</a></h1><p>Get PAN Data from KRA.</p><form class="uk-form-horizontal uk-margin-large" name=panKraForm autocomplete=false><h6 class=uk-text-bold>Address</h6><div class="uk-child-width-1-2@s uk-child-width-1-2@m" uk-grid><div><label class=uk-form-label for=form-stacked-text>KRA Provider</label><select class=uk-select ng-model=data.credentials.kraProvider><option value=cvlkra>CVL KRA</option></select></div><div><label class=uk-form-label for=form-stacked-text>POS Code</label><input class=uk-input type=text ng-model=data.credentials.posCode placeholder="POS Code" required></div></div><div class="uk-child-width-1-2@s uk-child-width-1-2@m" uk-grid><div><label class=uk-form-label for=form-stacked-text>PAN</label><input class=uk-input type=text ng-model=data.panNumber ng-pattern=/^[a-zA-Z]{5}[0-9]{4}[a-zA-Z]{1}$/ placeholder="PAN Number" required></div><div class=uk-inline><label class=uk-form-label for=form-stacked-text>DOB</label><datepicker date-format=dd/MM/yyyy><input class=uk-input placeholder=dd/mm/yyyy ng-model=data.dob type=text></datepicker></div></div><div class="uk-child-width-1-2@s uk-child-width-1-2@m" uk-grid><div><div><label class=uk-form-label for=form-stacked-text>Username</label><input class=uk-input type=text ng-model=data.credentials.username placeholder=Username required></div></div><div><label class=uk-form-label for=form-stacked-text>Password</label><input class=uk-input type=password ng-model=data.credentials.password placeholder=Password required></div></div><div class=uk-margin-medium-top></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=panKraForm.$invalid ng-click=kraService()><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.kraData && !loading"><pre pretty-json=data.kraData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/matchers/addressGeocoder.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Address Geocoder sandbox</a></h1><p>Get latitude / longitude from given address and vice versa</p><form class="uk-form-horizontal uk-margin-large" name=geoCoderForm><div class="uk-child-width-1-2@s uk-child-width-1-2@m" uk-grid><div><label class=uk-form-label for=form-stacked-text>Task</label><select class=uk-select ng-model=addressGeocoderData.task><option value=geocode>Address Geocoding</option><option value=reversegeocode>Reverse Geocoding</option></select><!-- <input class="uk-input"  type="text" ng-model="data.geoFencing.country"  placeholder="Country" required> --></div></div><div class="uk-child-width-1-2@s uk-child-width-1-2@m" uk-grid ng-hide="addressGeocoderData.task == \'reversegeocode\'"><div><label class=uk-form-label for=form-stacked-text>Address</label><input class=uk-input type=text ng-model=addressGeocoderData.address placeholder=Address ng-required="addressGeocoderData.task == \'geocode\'"></div></div><p ng-if="addressGeocoderData.task == \'geocode\'"><i>Distance in Kms will be given if Latitude / Longitude are provided.</i></p><div class="uk-child-width-1-2@s uk-child-width-1-2@m" uk-grid><div><label class=uk-form-label for=form-stacked-text>Latitude</label><input class=uk-input type=text ng-model=addressGeocoderData.latitude ng-pattern=/^[0-9]+\\.?[0-9]*$/ placeholder=Latitude ng-required="addressGeocoderData.task == \'reversegeocode\'"></div><div><label class=uk-form-label for=form-stacked-text>Longitude</label><input class=uk-input type=text ng-model=addressGeocoderData.longitude ng-pattern=/^[0-9]+\\.?[0-9]*$/ placeholder=Longitude ng-required="addressGeocoderData.task == \'reversegeocode\'"></div></div><div class=uk-margin-medium-top></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=geoCoderForm.$invalid ng-click=addressGeocoder()><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.addressGeocoderData && !loading"><pre pretty-json=data.addressGeocoderData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/matchers/addressMatcher.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Address Matcher</a></h1><p>Match Two Address</p><br><br><form class="uk-form-horizontal uk-margin-large" ng-submit=addressChecker()><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Address 1</label><input class=uk-input type=text ng-model=addressMatcher.address1 placeholder="Address 1"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Address 2</label><input class=uk-input type=text ng-model=addressMatcher.address2 placeholder="Address 2"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="addressMatcher.address1.length == 0 || addressMatcher.address2.length == 0 "><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.matcherData && !loading"><pre pretty-json=data.matcherData></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div></div>'), e.put("app/matchers/dateMatcher.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Date Matcher</a></h1><p>Match Two Dates</p><br><br><form class="uk-form-horizontal uk-margin-large" ng-submit=dobChecker()><div class=uk-margin-medium><div class=uk-form-label for=form-horizontal-text>Date 1</div><div class=uk-form-controls><div class=uk-inline><datepicker date-format=dd/MM/yyyy><input class="uk-input w350" placeholder=dd/mm/yyyy ng-model=dateMatcher.date1 type=text></datepicker></div></div></div><div class=uk-margin-medium><div class=uk-form-label for=form-horizontal-text>Date 2</div><div class=uk-form-controls><div class=uk-inline><datepicker date-format=dd/MM/yyyy><input class="uk-input w350" placeholder=dd/mm/yyyy ng-model=dateMatcher.date2 type=text></datepicker></div></div></div><div uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="dateMatcher.date1.length == 0 || dateMatcher.date2.length == 0 "><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></div></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.matcherData && !loading"><pre pretty-json=data.matcherData></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div></div>'), e.put("app/matchers/nameMatcher.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Name Matcher</a></h1><p>Match Two Names</p><br><br><p>Task</p><input name=response ng-model=nameMatcher.response type=radio value=v1 checked> Name Match V1 <input name=response ng-model=nameMatcher.response type=radio value=v2 checked> Name Match V2<form *ngif=options class="uk-form-horizontal uk-margin-large" ng-submit=nameChecker()><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Name 1</label><input class=uk-input type=text ng-model=nameMatcher.name1 placeholder="Name 1"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Name 2</label><input class=uk-input type=text ng-model=nameMatcher.name2 placeholder="Name 2"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="nameMatcher.name1.length == 0 || nameMatcher.name2.length == 0 "><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.matcherData && !loading"><pre pretty-json=data.matcherData></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div></div>'), e.put("app/mpgs/approveMerchant.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Approve Merchant (MPGS) test sandbox</a></h1><p>Try using the API here.</p><form class="uk-form-horizontal uk-margin-large" name=mpgsam><div class=uk-margin><label class=uk-form-label for=form-stacked-text>MSO Id</label><input class=uk-input type=text ng-model=data.mpgs.approveInformation.msoId placeholder=msoId required></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Merchant Id</label><input class=uk-input type=text ng-model=data.mpgs.approveInformation.merchantId placeholder=merchantId required></div><div class=uk-margin-medium-top></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=mpgsam.$invalid ng-click=mpgsApproveMerchant()><span ng-hide=loading>Approve</span> <span uk-spinner ng-show=loading></span></button></p></form></div><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.approveInformationResult && !loading"><pre pretty-json=data.approveInformationResult></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div>'), e.put("app/mpgs/updateAcquirer.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Update Acquirer (MPGS) test sandbox</a></h1><p>Try using the API here.</p><form class="uk-form-horizontal uk-margin-large" name=mpgsua><div class=uk-margin><label class=uk-form-label for=form-stacked-text>MSO Id</label><input class=uk-input type=text ng-model=data.mpgs.acquirerInformation.msoId placeholder=msoId required></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Merchant Id</label><input class=uk-input type=text ng-model=data.mpgs.acquirerInformation.merchantId placeholder=merchantId required></div><h6 class=uk-text-bold>Acquirer Link</h6><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Default Transaction Frequency</label><input class=uk-input type=text ng-model=data.mpgs.acquirerInformation.acquirerLink.defaultTransactionFrequency placeholder=defaultTransactionFrequency required></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Default Transaction Source</label><input class=uk-input type=text ng-model=data.mpgs.acquirerInformation.acquirerLink.defaultTransactionSource placeholder=defaultTransactionSource required></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Payment Type</label><input class=uk-input type=text ng-model=data.mpgs.acquirerInformation.acquirerLink.paymentType placeholder=paymentType required></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Status</label><input class=uk-input type=text ng-model=data.mpgs.acquirerInformation.acquirerLink.status placeholder=status required></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Acquirer Id</label><input class=uk-input type=text ng-model=data.mpgs.acquirerInformation.acquirerLink.acquirerId placeholder=acquirerId required></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Bank Merchant Id</label><input class=uk-input type=text ng-model=data.mpgs.acquirerInformation.acquirerLink.bankMerchantId placeholder=bankMerchantId required></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Id</label><input class=uk-input type=text ng-model=data.mpgs.acquirerInformation.acquirerLink.id placeholder=id required></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Currency</label><textarea class=uk-textarea ng-model=data.mpgs.paymentInformation.acquirerLink.currency placeholder="Comma seperated List of Currency"></textarea></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Allowable Transaction Frequency</label><textarea class=uk-textarea ng-model=data.mpgs.paymentInformation.acquirerLink.allowableTransactionFrequency placeholder="Comma seperated List of Allowable Transaction Frequency"></textarea></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Allowable Transaction Source</label><textarea class=uk-textarea ng-model=data.mpgs.paymentInformation.acquirerLink.allowableTransactionSource placeholder="Comma seperated List of Allowable Transaction Source"></textarea></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Card Type</label><textarea class=uk-textarea ng-model=data.mpgs.paymentInformation.acquirerLink.cardType placeholder="Comma seperated List of Card Type"></textarea></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Terminal Id</label><textarea class=uk-textarea ng-model=data.mpgs.paymentInformation.acquirerLink.terminalId placeholder="Comma seperated List of Terminal Id"></textarea></div><div class=uk-margin-medium-top></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=mpgsua.$invalid ng-click=mpgsUpdateAcquirer()><span ng-hide=loading>Update</span> <span uk-spinner ng-show=loading></span></button></p></form></div><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.acquirerInformationResult && !loading"><pre pretty-json=data.acquirerInformationResult></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div>'), e.put("app/mpgs/updateMerchant.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Update Merchant (MPGS) test sandbox</a></h1><p>Try using the API here.</p><form class="uk-form-horizontal uk-margin-large" name=mpgsum><div class=uk-margin><label class=uk-form-label for=form-stacked-text>MSO Id</label><input class=uk-input type=text ng-model=data.mpgs.merchantInformation.msoId placeholder=msoId required></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Category Code</label><input class=uk-input type=text ng-model=data.mpgs.merchantInformation.categoryCode placeholder=categoryCode required></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Goods Description</label><input class=uk-input type=text ng-model=data.mpgs.merchantInformation.goodsDescription placeholder=goodsDescription required></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Locale</label><input class=uk-input type=text ng-model=data.mpgs.merchantInformation.locale placeholder=locale required></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Name</label><input class=uk-input type=text ng-model=data.mpgs.merchantInformation.name placeholder=name required></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Time Zone</label><input class=uk-input type=text ng-model=data.mpgs.merchantInformation.timeZone placeholder=timeZone required></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Phone</label><input class=uk-input type=text ng-model=data.mpgs.merchantInformation.phone placeholder=phone required></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Trading Name</label><input class=uk-input type=text ng-model=data.mpgs.merchantInformation.tradingName placeholder=tradingName required></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Website</label><input class=uk-input type=text ng-model=data.mpgs.merchantInformation.webSite placeholder=webSite required></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Administrative Password</label><input class=uk-input type=text ng-model=data.mpgs.merchantInformation.administrativePassword placeholder=administrativePassword required></div><h6 class=uk-text-bold>Address</h6><div class="uk-child-width-1-2@s uk-child-width-1-2@m" uk-grid><div><label class=uk-form-label for=form-stacked-text>City</label><input class=uk-input type=text ng-model=data.mpgs.merchantInformation.address.city placeholder=city required></div><div><label class=uk-form-label for=form-stacked-text>State</label><input class=uk-input type=text ng-model=data.mpgs.merchantInformation.address.state placeholder=state></div></div><div class="uk-child-width-1-2@s uk-child-width-1-2@m" uk-grid><div><label class=uk-form-label for=form-stacked-text>Country Code</label><input class=uk-input type=text ng-model=data.mpgs.merchantInformation.address.countryCode placeholder=countryCode required></div><div><label class=uk-form-label for=form-stacked-text>Postal Code</label><input class=uk-input type=text ng-model=data.mpgs.merchantInformation.address.postcode placeholder=postcode required></div></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Street</label><textarea class=uk-textarea type=text ng-model=data.mpgs.merchantInformation.address.street placeholder=street required></textarea></div><div class=uk-margin-medium-top></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=mpgsum.$invalid ng-click=mpgsUpdateMerchant()><span ng-hide=loading>Update</span> <span uk-spinner ng-show=loading></span></button></p></form></div><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.merchantInformationResult && !loading"><pre pretty-json=data.merchantInformationResult></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div>'),
            e.put("app/mpgs/updatePayment.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Update Payment (MPGS) test sandbox</a></h1><p>Try using the API here.</p><form class="uk-form-horizontal uk-margin-large" name=mpgsup><div class=uk-margin><label class=uk-form-label for=form-stacked-text>MSO Id</label><input class=uk-input type=text ng-model=data.mpgs.paymentInformation.msoId placeholder=msoId required></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Merchant Id</label><input class=uk-input type=text ng-model=data.mpgs.paymentInformation.merchantId placeholder=merchantId required></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Card Masking Format</label><input class=uk-input type=text ng-model=data.mpgs.paymentInformation.cardMaskingFormat placeholder=cardMaskingFormat required></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>System Captured Card Masking Format</label><input class=uk-input type=text ng-model=data.mpgs.paymentInformation.systemCapturedCardMaskingFormat placeholder=systemCapturedCardMaskingFormat required></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Transaction Mode</label><input class=uk-input type=text ng-model=data.mpgs.paymentInformation.transactionMode placeholder=transactionMode required></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Service</label><textarea class=uk-textarea ng-model=data.mpgs.paymentInformation.service placeholder="Comma seperated List of services"></textarea></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Privilege</label><textarea class=uk-textarea ng-model=data.mpgs.paymentInformation.privilege placeholder="Comma seperated List of privileges"></textarea></div><h6 class=uk-text-bold>Tokenization</h6><div><label class=uk-form-label for=form-stacked-text>Verification Strategy</label><input class=uk-input type=text ng-model=data.mpgs.paymentInformation.tokenization.verificationStrategy placeholder=verificationStrategy required></div><h6 class=uk-text-bold>Token Repository</h6><div><label class=uk-form-label for=form-stacked-text>Token Generation</label><input class=uk-input type=text ng-model=data.mpgs.paymentInformation.tokenization.tokenRepository.tokenGeneration placeholder=tokenGeneration required></div><div><label class=uk-form-label for=form-stacked-text>Token Management Strategy</label><input class=uk-input type=text ng-model=data.mpgs.paymentInformation.tokenization.tokenRepository.tokenManagementStrategy placeholder=tokenManagementStrategy required></div><div class=uk-margin-medium-top></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=mpgsup.$invalid ng-click=mpgsUpdatePayment()><span ng-hide=loading>Update</span> <span uk-spinner ng-show=loading></span></button></p></form></div><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.paymentInformationResult && !loading"><pre pretty-json=data.paymentInformationResult></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div>'), e.put("app/nesl/nesl-esign.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>NESL ESign Portal</a></h1><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0"><div class=pad-left0 uk-lightbox><div ng-if=data.files[0]><object data="https://spdf.signzy.tech/web/viewer.html?file={{data.files[0]}}" type=application/pdf width=300 height=300 ng-if="data.files[0].indexOf(\'pdf\') != -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.files[0] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.files[0] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.files[0]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" name=neslEsign id=neslEsign><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Input PDF</label><input class=uk-input type=text ng-model=data.files[0] placeholder="Input PDF(URL)" required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Callback URL</label><input class=uk-input type=text ng-model=data.callbackUrl placeholder="Callback URL" optional></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Redirect URL</label><input class=uk-input type=text ng-model=data.redirectUrl placeholder="Redirect URL" optional></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Redirect Time</label><input class=uk-input type=string ng-model=data.redirectTime placeholder="Redirect Time" optional></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Loan Number</label><input class=uk-input type=text ng-model=data.loanNo placeholder="Loan Number" required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Sanction Number</label><input class=uk-input type=text ng-model=data.sanctionNo placeholder="Sanction Number" required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>RegType</label><select class=uk-select ng-model=data.regType ng-init="data.regType = Object.keys(regTypeData)[0]"><option ng-value=regTypeKey ng-repeat="regTypeKey in Object.keys(regTypeData)">{{ regTypeData[regTypeKey] }}</option></select></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>State</label><select class=uk-select ng-model=data.state ng-init="data.state = stateData[0].stateCode"><option ng-value=state.stateCode ng-repeat="state in stateData">{{ state.stateName }}</option></select></div></div><hr><h3>Signer Details Section</h3><div ng-repeat="signerNo in range(noOfSigners) track by $index"><h4>Signer No. {{$index+1}}</h4><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Participant Name</label><input class=uk-input type=text ng-model=data.signerDetails[$index].participantName placeholder="Participant Name" required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Contact Person Name</label><input class=uk-input type=text ng-model=data.signerDetails[$index].contactPersonName placeholder="Contact Person Name" required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Related To Contract</label><select class=uk-select ng-model=data.signerDetails[$index].relatedToContract ng-init="data.signerDetails[$index].relatedToContract = Object.keys(relatedToContractData)[1]"><option ng-value=key ng-repeat="key in Object.keys(relatedToContractData)">{{ relatedToContractData[key] }}</option></select></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Email</label><input class=uk-input type=email ng-model=data.signerDetails[$index].email placeholder=Email required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Mobile</label><input class=uk-input type=string ng-model=data.signerDetails[$index].mobile placeholder=Mobile required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>PAN</label><input class=uk-input type=text ng-model=data.signerDetails[$index].pan placeholder=PAN optional></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>DOB</label><input class=uk-input type=text ng-model=data.signerDetails[$index].dob placeholder="DOB (YY/MM/YYY)" required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Legal Constitution</label><select class=uk-select ng-model=data.signerDetails[$index].legalConstitution ng-init="data.signerDetails[$index].legalConstitution = Object.keys(legalConstitutionData)[0]"><option ng-value=key ng-repeat="key in Object.keys(legalConstitutionData)">{{ legalConstitutionData[key] }}</option></select></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Party Type</label><select class=uk-select ng-model=data.signerDetails[$index].partyType ng-init="data.signerDetails[$index].partyType = Object.keys(partyTypeData)[0]"><option ng-value=key ng-repeat="key in Object.keys(partyTypeData)">{{ partyTypeData[key] }}</option></select></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Other ID Type</label><select class=uk-select ng-model=data.signerDetails[$index].ovdType ng-init="data.signerDetails[$index].ovdType = Object.keys(ovdTypeData)[0]"><option ng-value=key ng-repeat="key in Object.keys(ovdTypeData)">{{ ovdTypeData[key] }}</option></select></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Other ID Number</label><input class=uk-input type=text ng-model=data.signerDetails[$index].ovdId placeholder="Other ID Number" optional></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Permanent Address</label><input class=uk-input type=text ng-model=data.signerDetails[$index].permanentAddress placeholder="Permanent Address" optional></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Permanent Address Pincode</label><input class=uk-input type=string ng-model=data.signerDetails[$index].permanentAddressPincode placeholder="Permanent Address Pincode" optional></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Communication Address</label><input class=uk-input type=text ng-model=data.signerDetails[$index].communicationAddress placeholder="Communication Address" optional></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Communication Address Pincode</label><input class=uk-input type=string ng-model=data.signerDetails[$index].communicationAddressPincode placeholder="Communication Address Pincode" optional></div></div><hr><h4>E-Signature Section</h4><div ng-repeat="no in range(data.signerDetails[$index].signatureCoordinates.length) track by $index"><p>{{$signatureNo}}</p><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Page Number</label><input class=uk-input type=string ng-model=data.signerDetails[signerNo].signatureCoordinates[$index].pageNo placeholder="Page Number" required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>X-Coordinate</label><input class=uk-input type=string ng-model=data.signerDetails[signerNo].signatureCoordinates[$index].xCoordinate placeholder=X-Coordinate required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Y-Coordinate</label><input class=uk-input type=string ng-model=data.signerDetails[signerNo].signatureCoordinates[$index].yCoordinate placeholder=Y-Coordinate required></div></div><p uk-margin class=uk-text-center ng-hide="data.signerDetails[signerNo].signatureCoordinates.length <= 1"><button type=button class="uk-button uk-button-danger uk-button-medium" ng-click="removeSignature(signerNo, $index)"><span>Remove Signature</span></button></p><p uk-margin class=uk-text-center ng-hide="data.signerDetails[signerNo].signatureCoordinates.length !== $index+1"><button type=button class="uk-button uk-button-primary uk-button-medium" ng-click=addSignature(signerNo)><span>Add Signature</span></button></p></div><hr><p uk-margin class=uk-text-center ng-hide="noOfSigners <= 1"><button type=button class="uk-button uk-button-danger uk-button-medium" ng-click=removeSigner($index)><span>Remove Signer</span></button></p></div><p uk-margin class=uk-text-center><button type=button class="uk-button uk-button-primary uk-button-medium" ng-click=addSigner()><span>Add Another Signer</span></button></p><hr><h3>Loan Detail Section</h3><div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Date Of Sanction</label><input class=uk-input type=text ng-model=data.loanDetails.dateOfSanction placeholder="Date Of Sanction (YY/MM/YYY)" required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>EMI Amount</label><input class=uk-input type=string ng-model=data.loanDetails.emiAmount placeholder="EMI Amount" required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Rate Of Interest</label><input class=uk-input type=string step=0.01 ng-model=data.loanDetails.rateOfInterest placeholder="Rate Of Interest" required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Sanction Amount</label><input class=uk-input type=string ng-model=data.loanDetails.sanctionAmount placeholder="Sanction Amount" required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Tenure</label><input class=uk-input type=string ng-model=data.loanDetails.tenure placeholder=Tenure required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Nature Of Credit</label><select class=uk-select ng-model=data.loanDetails.natureOfCredit ng-init="data.loanDetails.natureOfCredit = Object.keys(natureOfCreditData)[1]"><option ng-value=key ng-repeat="key in Object.keys(natureOfCreditData)">{{ natureOfCreditData[key] }}</option></select></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Is Account Closed</label><select class=uk-select ng-model=data.loanDetails.isAccountClosed ng-init="data.loanDetails.isAccountClosed = Object.keys(isAccountClosedData)[1]"><option ng-value=key ng-repeat="key in Object.keys(isAccountClosedData)">{{ isAccountClosedData[key] }}</option></select></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Fund Type</label><select class=uk-select ng-model=data.loanDetails.fundType ng-init="data.loanDetails.fundType = Object.keys(fundTypeData)[0]"><option ng-value=key ng-repeat="key in Object.keys(fundTypeData)">{{ fundTypeData[key] }}</option></select></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Currency Of Sanction</label><select class=uk-select ng-model=data.loanDetails.currencyOfSanction ng-init="data.loanDetails.currencyOfSanction = Object.keys(currencyOfSanctionData)[0]"><option ng-value=key ng-repeat="key in Object.keys(currencyOfSanctionData)">{{ currencyOfSanctionData[key] }}</option></select></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Credit Sub Type</label><select class=uk-select ng-model=data.loanDetails.creditSubType ng-init="data.loanDetails.creditSubType = Object.keys(creditSubTypeData)[0]"><option ng-value=key ng-repeat="key in Object.keys(creditSubTypeData)">{{ creditSubTypeData[key] }}</option></select></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Facility Name</label><input class=uk-input type=text ng-model=data.loanDetails.facilityName placeholder="Facility Name" required></div></div></div><hr><h3>Security Details Section</h3><div ng-repeat="no in range(data.securityDetails.length) track by $index"><h4>Security No - {{ $index+1 }}</h4><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Description Of Security</label><input class=uk-input type=text ng-model=data.securityDetails[$index].descriptionOfSecurity placeholder="Description Of Security" required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Asset Type</label><select class=uk-select ng-model=data.securityDetails[$index].assetType ng-init="data.securityDetails[$index].assetType = Object.keys(assetTypeData)[0]"><option ng-value=key ng-repeat="key in Object.keys(assetTypeData)">{{ assetTypeData[key] }}</option></select></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Type Of Charge</label><select class=uk-select ng-model=data.securityDetails[$index].typeOfCharge ng-init="data.securityDetails[$index].typeOfCharge = Object.keys(typeOfChargeData)[0]"><option ng-value=key ng-repeat="key in Object.keys(typeOfChargeData)">{{ typeOfChargeData[key] }}</option></select></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Asset ID</label><input class=uk-input type=text ng-model=data.securityDetails[$index].assetId placeholder="Asset ID" required></div></div><p uk-margin class=uk-text-center><button type=button class="uk-button uk-button-danger uk-button-medium" ng-click=removeSecurity($index) ng-hide="data.securityDetails.length <= 0"><span>Remove Loan Security</span></button></p></div><p uk-margin class=uk-text-center><button type=button class="uk-button uk-button-primary uk-button-medium" ng-click=addSecurity()><span>Add Loan Security</span></button></p><hr><p uk-margin class=uk-text-center><button class="uk-button uk-button-danger uk-button-medium" ng-click=setDefaultEsign()><span>Set Default</span></button> <button class="uk-button uk-button-primary uk-button-medium" ng-click=startEsignTransaction() ng-disabled=neslEsign.$invalid><span ng-hide=loading>Start</span> <span uk-spinner ng-show=loading></span></button> <button class="uk-button uk-button-primary uk-button-medium" ng-disabled="enableResult == false" ng-click=getData()><span ng-hide=loading1>Result</span> <span uk-spinner ng-show=loading1></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.neslResponse && !loading"><pre pretty-json=data.neslResponse></pre></div></div></div>'), e.put("app/nesl/nesl-estamp.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>NESL EStamp Portal</a></h1><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0"><div class=pad-left0 uk-lightbox><div ng-if=data.files[0]><object data="https://spdf.signzy.tech/web/viewer.html?file={{data.files[0]}}" type=application/pdf width=300 height=300 ng-if="data.files[0].indexOf(\'pdf\') != -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.files[0] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.files[0] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.files[0]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" name=neslEStamp id=neslEStamp><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Input PDF</label><input class=uk-input type=text ng-model=data.files[0] placeholder="Input PDF(URL)" required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Callback URL</label><input class=uk-input type=text ng-model=data.callbackUrl placeholder="Callback URL" optional></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Redirect URL</label><input class=uk-input type=text ng-model=data.redirectUrl placeholder="Redirect URL" optional></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Redirect Time</label><input class=uk-input type=string ng-model=data.redirectTime placeholder="Redirect Time" optional></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Loan Number</label><input class=uk-input type=text ng-model=data.loanNo placeholder="Loan Number" required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Sanction Number</label><input class=uk-input type=text ng-model=data.sanctionNo placeholder="Sanction Number" required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>RegType</label><select class=uk-select ng-model=data.regType ng-init="data.regType = Object.keys(regTypeData)[0]"><option ng-value=regTypeKey ng-repeat="regTypeKey in Object.keys(regTypeData)">{{ regTypeData[regTypeKey] }}</option></select></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>State</label><select class=uk-select ng-model=data.state ng-init="data.state = stateData[0].stateCode"><option ng-value=state.stateCode ng-repeat="state in stateData">{{ state.stateName }}</option></select></div></div><hr><h3>E-Stamping Section</h3><div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>First Party Name</label><input class=uk-input type=text ng-model=data.estampDetails.firstParty placeholder="First Party Name" required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Second Party Name</label><input class=uk-input type=text ng-model=data.estampDetails.secondParty placeholder="Second Party Name" required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Stamp Duty Amount</label><input class=uk-input ng-init="data.estampDetails.stampDutyAmount = 10" type=text ng-model=data.estampDetails.stampDutyAmount placeholder="Stamp Duty Amount" disabled required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Consideration Price</label><input class=uk-input type=text ng-model=data.estampDetails.considerationPrice placeholder="Consideration Price" required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Description Of Document</label><input class=uk-input type=text ng-model=data.estampDetails.descriptionOfDocument placeholder="Description Of Document" required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Stamp Duty Paid By</label><input class=uk-input type=text ng-model=data.estampDetails.stampDutyPaidBy placeholder="Stamp Duty Paid By" required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Article Code</label><input class=uk-input type=text ng-model=data.estampDetails.articleCode placeholder="Article Code" required></div></div></div><hr><h3>Signer Details Section</h3><div ng-repeat="signerNo in range(noOfSigners) track by $index"><h4>Signer No. {{$index+1}}</h4><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Participant Name</label><input class=uk-input type=text ng-model=data.signerDetails[$index].participantName placeholder="Participant Name" required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Contact Person Name</label><input class=uk-input type=text ng-model=data.signerDetails[$index].contactPersonName placeholder="Contact Person Name" required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Related To Contract</label><select class=uk-select ng-model=data.signerDetails[$index].relatedToContract ng-init="data.signerDetails[$index].relatedToContract = Object.keys(relatedToContractData)[1]"><option ng-value=key ng-repeat="key in Object.keys(relatedToContractData)">{{ relatedToContractData[key] }}</option></select></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Email</label><input class=uk-input type=email ng-model=data.signerDetails[$index].email placeholder=Email required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Mobile</label><input class=uk-input type=string ng-model=data.signerDetails[$index].mobile placeholder=Mobile required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>PAN</label><input class=uk-input type=text ng-model=data.signerDetails[$index].pan placeholder=PAN optional></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>DOB</label><input class=uk-input type=text ng-model=data.signerDetails[$index].dob placeholder="DOB (YY/MM/YYY)" required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Legal Constitution</label><select class=uk-select ng-model=data.signerDetails[$index].legalConstitution ng-init="data.signerDetails[$index].legalConstitution = Object.keys(legalConstitutionData)[0]"><option ng-value=key ng-repeat="key in Object.keys(legalConstitutionData)">{{ legalConstitutionData[key] }}</option></select></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Party Type</label><select class=uk-select ng-model=data.signerDetails[$index].partyType ng-init="data.signerDetails[$index].partyType = Object.keys(partyTypeData)[0]"><option ng-value=key ng-repeat="key in Object.keys(partyTypeData)">{{ partyTypeData[key] }}</option></select></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Other ID Type</label><select class=uk-select ng-model=data.signerDetails[$index].ovdType ng-init="data.signerDetails[$index].ovdType = Object.keys(ovdTypeData)[0]"><option ng-value=key ng-repeat="key in Object.keys(ovdTypeData)">{{ ovdTypeData[key] }}</option></select></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Other ID Number</label><input class=uk-input type=text ng-model=data.signerDetails[$index].ovdId placeholder="Other ID Number" optional></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Permanent Address</label><input class=uk-input type=text ng-model=data.signerDetails[$index].permanentAddress placeholder="Permanent Address" optional></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Permanent Address Pincode</label><input class=uk-input type=string ng-model=data.signerDetails[$index].permanentAddressPincode placeholder="Permanent Address Pincode" optional></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Communication Address</label><input class=uk-input type=text ng-model=data.signerDetails[$index].communicationAddress placeholder="Communication Address" optional></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Communication Address Pincode</label><input class=uk-input type=string ng-model=data.signerDetails[$index].communicationAddressPincode placeholder="Communication Address Pincode" optional></div></div><hr><h4>E-Signature Section For Signer No. {{$index+1}}</h4><div ng-repeat="no in range(data.signerDetails[$index].signatureCoordinates.length) track by $index"><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Page Number</label><input class=uk-input type=string ng-model=data.signerDetails[signerNo].signatureCoordinates[$index].pageNo placeholder="Page Number" required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>X-Coordinate</label><input class=uk-input type=string ng-model=data.signerDetails[signerNo].signatureCoordinates[$index].xCoordinate placeholder=X-Coordinate required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Y-Coordinate</label><input class=uk-input type=string ng-model=data.signerDetails[signerNo].signatureCoordinates[$index].yCoordinate placeholder=Y-Coordinate required></div></div><p uk-margin class=uk-text-center ng-hide="data.signerDetails[signerNo].signatureCoordinates.length <= 1"><button type=button class="uk-button uk-button-danger uk-button-medium" ng-click="removeSignature(signerNo, $index)"><span>Remove Signature</span></button></p><p uk-margin class=uk-text-center ng-hide="data.signerDetails[signerNo].signatureCoordinates.length !== $index+1"><button type=button class="uk-button uk-button-primary uk-button-medium" ng-click=addSignature(signerNo)><span>Add Signature</span></button></p></div><hr><p uk-margin class=uk-text-center ng-hide="noOfSigners <= 1"><button type=button class="uk-button uk-button-danger uk-button-medium" ng-click=removeSigner($index)><span>Remove Signer</span></button></p></div><p uk-margin class=uk-text-center><button type=button class="uk-button uk-button-primary uk-button-medium" ng-click=addSigner()><span>Add Another Signer</span></button></p><hr><h3>Loan Detail Section</h3><div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Date Of Sanction</label><input class=uk-input type=text ng-model=data.loanDetails.dateOfSanction placeholder="Date Of Sanction (YY/MM/YYY)" required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>EMI Amount</label><input class=uk-input type=string ng-model=data.loanDetails.emiAmount placeholder="EMI Amount" required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Rate Of Interest</label><input class=uk-input type=string step=0.01 ng-model=data.loanDetails.rateOfInterest placeholder="Rate Of Interest" required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Sanction Amount</label><input class=uk-input type=string ng-model=data.loanDetails.sanctionAmount placeholder="Sanction Amount" required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Tenure</label><input class=uk-input type=string ng-model=data.loanDetails.tenure placeholder=Tenure required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Nature Of Credit</label><select class=uk-select ng-model=data.loanDetails.natureOfCredit ng-init="data.loanDetails.natureOfCredit = Object.keys(natureOfCreditData)[1]"><option ng-value=key ng-repeat="key in Object.keys(natureOfCreditData)">{{ natureOfCreditData[key] }}</option></select></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Is Account Closed</label><select class=uk-select ng-model=data.loanDetails.isAccountClosed ng-init="data.loanDetails.isAccountClosed = Object.keys(isAccountClosedData)[1]"><option ng-value=key ng-repeat="key in Object.keys(isAccountClosedData)">{{ isAccountClosedData[key] }}</option></select></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Fund Type</label><select class=uk-select ng-model=data.loanDetails.fundType ng-init="data.loanDetails.fundType = Object.keys(fundTypeData)[0]"><option ng-value=key ng-repeat="key in Object.keys(fundTypeData)">{{ fundTypeData[key] }}</option></select></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Currency Of Sanction</label><select class=uk-select ng-model=data.loanDetails.currencyOfSanction ng-init="data.loanDetails.currencyOfSanction = Object.keys(currencyOfSanctionData)[0]"><option ng-value=key ng-repeat="key in Object.keys(currencyOfSanctionData)">{{ currencyOfSanctionData[key] }}</option></select></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Credit Sub Type</label><select class=uk-select ng-model=data.loanDetails.creditSubType ng-init="data.loanDetails.creditSubType = Object.keys(creditSubTypeData)[0]"><option ng-value=key ng-repeat="key in Object.keys(creditSubTypeData)">{{ creditSubTypeData[key] }}</option></select></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Facility Name</label><input class=uk-input type=text ng-model=data.loanDetails.facilityName placeholder="Facility Name" required></div></div></div><hr><h3>Security Details Section</h3><div ng-repeat="no in range(data.securityDetails.length) track by $index"><h4>Security No - {{ $index+1 }}</h4><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Description Of Security</label><input class=uk-input type=text ng-model=data.securityDetails[$index].descriptionOfSecurity placeholder="Description Of Security" required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Asset Type</label><select class=uk-select ng-model=data.securityDetails[$index].assetType ng-init="data.securityDetails[$index].assetType = Object.keys(assetTypeData)[0]"><option ng-value=key ng-repeat="key in Object.keys(assetTypeData)">{{ assetTypeData[key] }}</option></select></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Type Of Charge</label><select class=uk-select ng-model=data.securityDetails[$index].typeOfCharge ng-init="data.securityDetails[$index].typeOfCharge = Object.keys(typeOfChargeData)[0]"><option ng-value=key ng-repeat="key in Object.keys(typeOfChargeData)">{{ typeOfChargeData[key] }}</option></select></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Asset ID</label><input class=uk-input type=text ng-model=data.securityDetails[$index].assetId placeholder="Asset ID" required></div></div><p uk-margin class=uk-text-center><button type=button class="uk-button uk-button-danger uk-button-medium" ng-click=removeSecurity($index) ng-hide="data.securityDetails.length <= 0"><span>Remove Loan Security</span></button></p></div><p uk-margin class=uk-text-center><button type=button class="uk-button uk-button-primary uk-button-medium" ng-click=addSecurity()><span>Add Loan Security</span></button></p><hr><p uk-margin class=uk-text-center><button class="uk-button uk-button-danger uk-button-medium" ng-click=setDefaultEstamp()><span>Set Default</span></button> <button class="uk-button uk-button-primary uk-button-medium" ng-click=startEStampTransaction() ng-disabled=neslEStamp.$invalid><span ng-hide=loading>Start</span> <span uk-spinner ng-show=loading></span></button> <button class="uk-button uk-button-primary uk-button-medium" ng-disabled="enableResult == false" ng-click=getData()><span ng-hide=loading1>Result</span> <span uk-spinner ng-show=loading1></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.neslResponse && !loading"><pre pretty-json=data.neslResponse></pre></div></div></div>'),
            e.put("app/nesl/nesl-getdata.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>NESL Get Data Portal</a></h1><p>Use this API to check status or get information on NESL (esign/estamp) transactions.</p><form class="uk-form-horizontal uk-margin-large" name=neslGetData id=neslGetData><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Patron ID</label><input class=uk-input type=text ng-model=data.patronId placeholder="Patron ID" required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Token</label><input class=uk-input type=text ng-model=data.token placeholder=Token required></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=neslGetData.$invalid ng-click=getData()><span ng-hide=loading1>Get Data</span> <span uk-spinner ng-show=loading1></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.neslResponse && !loading"><pre pretty-json=data.neslResponse></pre></div></div></div>'), e.put("app/passive-liveness/passive-liveness.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Image Passive Liveness Check</a></h1><p>You need to upload an image for which you want to check forgery. You may put direct URLs of the image, in case you have them.</p><p></p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and is horizontally-aligned.</p><p>Each <b>image</b> should be less than <b>50MB.</b></p><p>Supported file formats are ".jpeg", ".png", ".tiff" and ".pdf".</p><p>Please refer docs for more info on image and face specification.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0" uk-grid><div class="uk-width-1-1@s pad-left0" uk-lightbox><div ng-if="data.url.length > 0"><a class=uk-inline ng-href={{data.url}}><img ng-src={{data.url}} width=400 height=400 ng-if="data.url.indexOf(\'pdf\') == -1"></a><object data={{data.url}} type=application/pdf width=400 height=400 ng-if="data.url.indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.url uk-icon="icon: file-edit" class=uk-link ng-if="data.url.length > 0">&nbsp;</span> <a ng-click="data.url =\'\'" uk-icon="icon: trash" ng-if="data.url.length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.url.length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.url ngf-max-size=50MB ngf-drop="" class=uk-link>&nbsp;Upload Front file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=runPassiveLiveness()><h3 class=uk-text-bold>Try Image Passive Liveness Check</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Image</label><input class=uk-input type=text ng-model=data.url placeholder="Image (URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=!data.url><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.passiveLivenessData && !loading"><pre pretty-json=data.passiveLivenessData></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div></div>'), e.put("app/reset-password/reset-password.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Reset password</a></h1><p>This resets your API key, using which you create the access tokens as mentioned in the <a href=login>Authentication section </a>above.</p><p>Please make sure you remember the new password and old password</p><p></p><form class="uk-form-horizontal uk-margin-large" ng-submit=resetPassword()><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Current password</label><input class=uk-input type=password ng-model=resetData.current placeholder="Current password"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>New password</label><input class=uk-input type=password ng-model=resetData.new placeholder="New password"></div><span ng-show="resetData.new && resetData.current && resetData.new != \'\' && resetData.current != \'\' && resetData.new == resetData.current" class=danger-text>New password and the current password are same. </span><span ng-show="resetData.new && resetData.new != \'\' && !strongPassword(resetData.new)" class=danger-text>Password should be of minimum 12 characters and have at least one:<ol><li>uppercase letter</li><li>lowercase letter</li><li>number</li><li>special character</li></ol></span></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Confirm new password</label><input class=uk-input type=password ng-model=resetData.newConfirm placeholder="Confirm new password"></div><span ng-show="resetData.new && resetData.newConfirm && resetData.new != \'\' && resetData.newConfirm != \'\' && resetData.new != resetData.newConfirm" class=danger-text>New password and the confirmation don\'t match.</span></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="!resetData.new || !resetData.current || !resetData.newConfirm || resetData.new == \'\' || resetData.current==\'\' || resetData.newConfirm == \'\' || resetData.new == resetData.current || resetData.new != resetData.newConfirm || !strongPassword(resetData.new)"><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form></div></div>'), e.put("app/riskscore/consumerBureau.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Consumer Bureau(Experian) test sandbox</a></h1><p>Try using Consumer Bureau Search here.</p><form class="uk-form-horizontal uk-margin-large" name=consumerBureau><h6 class=uk-text-bold>Application</h6><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Enquiry Reason</label><select class=uk-select ng-model=data.consumerBureau.application.enquiryReason><option value={{eq.id}} ng-repeat="eq in enquiryReasons">{{ eq.name }}</option></select><!-- <input class="uk-input" type="text" ng-model="data.consumerBureau.application.enquiryReason" placeholder="enquiryReason" required> --></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Amount Financed</label><input class=uk-input type=text ng-model=data.consumerBureau.application.amountFinanced placeholder=amountFinanced required></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Duration of Agreement</label><input class=uk-input type=text ng-model=data.consumerBureau.application.durationOfAgreement placeholder=durationOfAgreement required></div><h6 class=uk-text-bold>Applicant</h6><div class="uk-child-width-1-2@s uk-child-width-1-2@m" uk-grid><div><label class=uk-form-label for=form-stacked-text>First Name</label><input class=uk-input type=text ng-model=data.consumerBureau.applicant.firstName placeholder=firstName required></div><div><label class=uk-form-label for=form-stacked-text>Last Name</label><input class=uk-input type=text ng-model=data.consumerBureau.applicant.lastName placeholder=lastName required></div></div><div class="uk-child-width-1-2@s uk-child-width-1-2@m" uk-grid><div><label class=uk-form-label for=form-stacked-text>Middle Name</label><input class=uk-input type=text ng-model=data.consumerBureau.applicant.middleName placeholder=middleName></div><div class="uk-child-width-1-1@s uk-child-width-1-1@m" uk-grid><label class=uk-form-label for=form-stacked-text>Gender</label><!-- <input class="uk-input" type="text" ng-model="data.consumerBureau.applicant.gender" placeholder="gender" required> --><div class=uk-margin-small><label><input type=radio class=uk-radio ng-model=data.consumerBureau.applicant.gender value=1><span class=marlt10>Male</span></label><label><input type=radio class=uk-radio ng-model=data.consumerBureau.applicant.gender value=2><span class=marlt10>Female</span></label><label><input type=radio class=uk-radio ng-model=data.consumerBureau.applicant.gender value=3><span class=marlt10>Other</span></label></div></div></div><div class="uk-child-width-1-2@s uk-child-width-1-2@m" uk-grid><div><label class=uk-form-label for=form-stacked-text>PAN Number</label><input class=uk-input type=text ng-model=data.consumerBureau.applicant.panNumber placeholder=panNumber></div><div><label class=uk-form-label for=form-stacked-text>Passport Number</label><input class=uk-input type=text ng-model=data.consumerBureau.applicant.passportNumber placeholder=passportNumber></div></div><div class="uk-child-width-1-2@s uk-child-width-1-2@m" uk-grid><div><label class=uk-form-label for=form-stacked-text>VoterId Number</label><input class=uk-input type=text ng-model=data.consumerBureau.applicant.voterIdNumber placeholder=voterIdNumber></div><div><label class=uk-form-label for=form-stacked-text>Date Of Birth</label><datepicker date-format=dd/MM/yyyy><input class=uk-input placeholder=dd/mm/yyyy ng-model=data.consumerBureau.applicant.dateOfBirth type=text required></datepicker></div></div><div><label class=uk-form-label for=form-stacked-text>Mobile Phone</label><input class=uk-input type=text ng-model=data.consumerBureau.applicant.mobilePhone placeholder=mobilePhone required></div><h6 class=uk-text-bold>Address</h6><div class="uk-child-width-1-2@s uk-child-width-1-2@m" uk-grid><div><label class=uk-form-label for=form-stacked-text>Flat Number / Plot Number / House Number</label><input class=uk-input type=text ng-model=data.consumerBureau.address.flatNoPlotNoHouseNo placeholder=flatNoPlotNoHouseNo></div><div><label class=uk-form-label for=form-stacked-text>Building Number / Society Name</label><input class=uk-input type=text ng-model=data.consumerBureau.address.bldgNoSocietyName placeholder=bldgNoSocietyName></div></div><div class="uk-child-width-1-2@s uk-child-width-1-2@m" uk-grid><div><label class=uk-form-label for=form-stacked-text>Road Name / Area / Locality</label><input class=uk-input type=text ng-model=data.consumerBureau.address.roadNoNameAreaLocality placeholder=roadNoNameAreaLocality></div><div><label class=uk-form-label for=form-stacked-text>Landmark</label><input class=uk-input type=text ng-model=data.consumerBureau.address.landmark placeholder=landmark></div></div><div class="uk-child-width-1-2@s uk-child-width-1-2@m" uk-grid><div><label class=uk-form-label for=form-stacked-text>City</label><input class=uk-input type=text ng-model=data.consumerBureau.address.city placeholder=city required></div><div><label class=uk-form-label for=form-stacked-text>State</label><select class=uk-select ng-model=data.consumerBureau.address.state ng-init="data.consumerBureau.address.state = states[0].id"><option value={{state.id}} ng-repeat="state in states">{{ state.name }}</option></select></div></div><div><label class=uk-form-label for=form-stacked-text>Pincode</label><input class=uk-input type=text ng-model=data.consumerBureau.address.pinCode placeholder=pinCode required></div></form></div><div class=uk-margin-medium-top></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-click=consumerBureauSearch() ng-disabled=consumerBureau.$invalid><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.consumerBureauData && !loading"><pre pretty-json=data.consumerBureauData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div>'), e.put("app/riskscore/databreach.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Data Breach API test sandbox</a></h1><p>Try using to search if your data has been breached.</p><form class="uk-form-horizontal uk-margin-large" name=dataBreachForm><h6 class=uk-text-bold>Address</h6><div class="uk-child-width-1-2@s uk-child-width-1-2@m" uk-grid><div><label class=uk-form-label for=form-stacked-text>Email</label><input class=uk-input type=text ng-model=data.dataBreach.email placeholder="Email Address"></div><div><div><label class=uk-form-label for=form-stacked-text>Mobile</label><input class=uk-input type=text ng-model=data.dataBreach.mobile placeholder="Mobile Number"></div></div></div><div class="uk-child-width-1-2@s uk-child-width-1-2@m" uk-grid><div><label class=uk-form-label for=form-stacked-text>Username</label><input class=uk-input type=text ng-model=data.dataBreach.username placeholder=Username></div><div><div><label class=uk-form-label for=form-stacked-text>Domain</label><input class=uk-input type=text ng-model=data.dataBreach.domain placeholder=Domain></div></div></div><div class=uk-margin-medium-top></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=dataBreachForm.$invalid ng-click=dataBreach()><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.dataBreachResp && !loading"><pre pretty-json=data.dataBreachResp></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/riskscore/ezmatch.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Risk Score(EZMATCH) test sandbox</a></h1><p>Try using EZMATCH here.</p><form class="uk-form-horizontal uk-margin-large" name=riskscoreForm><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Acquirer Id</label><input class=uk-input type=text ng-model=data.ezmatch.merchantInformation.acquirerId placeholder=acquirerId required></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Name</label><input class=uk-input type=text ng-model=data.ezmatch.merchantInformation.merchant.name placeholder="Name (Eg. Robert \'s Great Business)" required></div><h6 class=uk-text-bold>Address</h6><div class="uk-child-width-1-2@s uk-child-width-1-2@m" uk-grid><div><label class=uk-form-label for=form-stacked-text>City</label><input class=uk-input type=text ng-model=data.ezmatch.merchantInformation.merchant.address.city placeholder="City (Eg. Denver)" required></div><div><label class=uk-form-label for=form-stacked-text>Country Sub Division Code</label><input class=uk-input type=text ng-model=data.ezmatch.merchantInformation.merchant.address.countrySubdivision placeholder="Country Sub Division (Eg. CO)"></div></div><div class="uk-child-width-1-2@s uk-child-width-1-2@m" uk-grid><div><label class=uk-form-label for=form-stacked-text>Country</label><input class=uk-input type=text ng-model=data.ezmatch.merchantInformation.merchant.address.country placeholder="Country (Eg. USA)" required></div><div><label class=uk-form-label for=form-stacked-text>Postal Code</label><input class=uk-input type=text ng-model=data.ezmatch.merchantInformation.merchant.address.postalCode placeholder="Postal Code (Eg. 80204)" required></div></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Address Line</label><textarea class=uk-textarea type=text ng-model=data.ezmatch.merchantInformation.merchant.address.line1 placeholder="Address Line1 (Eg. 123 Main St)" required></textarea></div><h3 class=uk-text-bold>Principal Information</h3><div><label class=uk-form-label for=form-stacked-text>Name</label><br></div><div class=uk-margin><div class="uk-child-width-1-2@s uk-child-width-1-2@m" uk-grid><div><label class=uk-form-label for=form-stacked-text>First Name</label><input class=uk-input type=text ng-model=data.ezmatch.merchantInformation.merchant.principal[0].firstName placeholder="First Name" required></div><div><label class=uk-form-label for=form-stacked-text>Last Name</label><input class=uk-input type=text ng-model=data.ezmatch.merchantInformation.merchant.principal[0].lastName placeholder="Middle Name" required></div></div></div><h6 class=uk-text-bold>Address</h6><div class="uk-child-width-1-2@s uk-child-width-1-2@m" uk-grid><div><label class=uk-form-label for=form-stacked-text>City</label><input class=uk-input type=text ng-model=data.ezmatch.merchantInformation.merchant.principal[0].address.city placeholder="City (Eg. Denver)" required></div><div><label class=uk-form-label for=form-stacked-text>Country Sub Division Code</label><input class=uk-input type=text ng-model=data.ezmatch.merchantInformation.merchant.principal[0].address.countrySubdivision placeholder="Country Sub Division Code (Eg. CO)" required></div></div><div class="uk-child-width-1-2@s uk-child-width-1-2@m" uk-grid><div><label class=uk-form-label for=form-stacked-text>Country</label><input class=uk-input type=text ng-model=data.ezmatch.merchantInformation.merchant.principal[0].address.country placeholder="Country (Eg. USA)" required></div><div><label class=uk-form-label for=form-stacked-text>Postal Code</label><input class=uk-input type=text ng-model=data.ezmatch.merchantInformation.merchant.principal[0].address.postalCode placeholder="Postal Code (Eg. 80204)" required></div></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Line 1</label><input class=uk-input type=text ng-model=data.ezmatch.merchantInformation.merchant.principal[0].address.line1 placeholder="Address Line1 (Eg. 123 Main St)" required></div></form></div><div class=uk-margin-medium-top></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-danger uk-button-medium" ng-click=setDefaultEzmatch()><span>Set Default</span></button> <button class="uk-button uk-button-primary uk-button-medium" ng-disabled="riskscoreForm.$invalid || ((data.ezmatch.merchantInformation.merchant.address.country.toUpperCase() == \'USA\' || data.ezmatch.merchantInformation.merchant.address.country.toUpperCase() == \'CAN\') && (!data.ezmatch.merchantInformation.merchant.address.countrySubdivision || data.ezmatch.merchantInformation.merchant.address.countrySubdivision.length == 0) )" ng-click=ezmatchSearch()><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.ezmatchData && !loading"><pre pretty-json=data.ezmatchData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div>'), e.put("app/riskscore/geofencing.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Geofencing test sandbox</a></h1><p>Try using Geofencing here.</p><form class="uk-form-horizontal uk-margin-large" name=geofencingForm><h6 class=uk-text-bold>Address</h6><div class="uk-child-width-1-2@s uk-child-width-1-2@m" uk-grid><div><label class=uk-form-label for=form-stacked-text>IP Address</label><input class=uk-input type=text ng-model=data.geoFencing.ip placeholder="IP Address" required></div><div><label class=uk-form-label for=form-stacked-text>Country</label><select class=uk-select ng-model=data.geoFencing.country ng-change=selectState(data.geoFencing.country) ng-init="data.geoFencing.country = geoFencingCountries[0].value"><option ng-value=country.value ng-repeat="country in geoFencingCountries">{{ country.name }}</option></select><!-- <input class="uk-input"  type="text" ng-model="data.geoFencing.country"  placeholder="Country" required> --></div></div><div class="uk-child-width-1-2@s uk-child-width-1-2@m" uk-grid ng-if=geoFencingStateData><div><label class=uk-form-label for=form-stacked-text>State</label><select class=uk-select ng-model=data.geoFencing.state><option ng-value=state.code ng-repeat="state in geoFencingStateData">{{ state.name }}</option></select></div></div><div class=uk-margin-medium-top></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=geofencingForm.$invalid ng-click=geoFencing()><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.geoFencingData && !loading"><pre pretty-json=data.geoFencingData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/riskscore/ip-quality.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>IP Quality Check</a></h1><p class=uk-text-lead>Get IP details from IP</p><form class="uk-form-horizontal uk-margin-large" ng-submit=ipSearch()><h3 class=uk-text-bold>IP Check</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>IP</label><input class=uk-input type=text ng-model=data.ip placeholder="IP (Eg. 49.204.93.54)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.ip ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.ipData && !loading"><pre pretty-json=data.ipData></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div></div>'), e.put("app/riskscore/mobiscore.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Risk Score(Mobi Score) test sandbox</a></h1><p>Try searching for any mobile Number here.</p><form class="uk-form-horizontal uk-margin-large" name=riskscoreForm ng-submit=mobiSearch()><h3 class=uk-text-bold>Mobile Number Search</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Mobile Number</label><input class=uk-input type=text ng-model=data.mobileNumber placeholder="Mobile Number" ng-pattern=/^[0-9]*$/ name=mobileNumber ng-minlength=10 ng-maxlength=10 maxlength=10 required><div ng-show="riskscoreForm.$submitted || riskscoreForm.mobileNumber.$touched"><span ng-show=riskscoreForm.mobileNumber.$error.required class=uk-text-danger>Mobile Number is required.</span> <span ng-show="riskscoreForm.mobileNumber.$error.pattern || riskscoreForm.mobileNumber.$error.minlength || riskscoreForm.mobileNumber.$error.maxlength" class=uk-text-danger>This is not a valid Mobile Number.</span></div></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="!data.mobileNumber || data.mobileNumber ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.riskData && !loading"><p><span class="uk-text-bold uk-text-capitalize">Mobile</span>&nbsp;-&nbsp; {{data.riskData.mobile}}</p><p><span class="uk-text-bold uk-text-capitalize">Digital Affluence Score Min</span>&nbsp;-&nbsp; {{data.riskData.digitalAffluenceScore.min}}</p><p><span class="uk-text-bold uk-text-capitalize">Digital Affluence Score Max</span>&nbsp;-&nbsp; {{data.riskData.digitalAffluenceScore.max}}</p><p><span class="uk-text-bold uk-text-capitalize">Digital Engagement Score Min</span>&nbsp;-&nbsp; {{data.riskData.digitalEngagementScore.min}}</p><p><span class="uk-text-bold uk-text-capitalize">Digital Engagement Score Max</span>&nbsp;-&nbsp; {{data.riskData.digitalEngagementScore.max}}</p><p><span class="uk-text-bold uk-text-capitalize">Digital Risk Score Min</span>&nbsp;-&nbsp; {{data.riskData.digitalRiskScore.min}}</p><p><span class="uk-text-bold uk-text-capitalize">Digital Risk Score Max</span>&nbsp;-&nbsp; {{data.riskData.digitalRiskScore.max}}</p><pre pretty-json=data.riskData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/utils/reorientid.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Reorient Id Card</a></h1><p>Upload the image you want to reorient</p><br><br><div class="test-upload uk-placeholder uk-text-center mar-0"><div uk-lightbox><div ng-if="data.converter_files[0].length > 0"><a class=uk-inline ng-href={{data.converter_files[0]}}><img ng-src={{data.converter_files[0]}} width=400 height=400 ng-if="data.converter_files[0].indexOf(\'pdf\') == -1"> </a><span ngf-select=fileUpload($file,0) ng-model=data.converter_files[0] uk-icon="icon: file-edit" class=uk-link ng-if="data.converter_files[0].length > 0">&nbsp;</span> <a ng-click="data.converter_files[0] =\'\'" uk-icon="icon: trash" ng-if="data.converter_files[0].length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.converter_files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($file, 0)" ng-model=data.converter_files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload File</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=reorient()><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Reorient Id Card</label><input class=uk-input type=text ng-model=data.converter_files[0] placeholder="Compress Image"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.converter_files.length == 0"><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.converterData && !loading"><pre pretty-json=data.converterData></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div></div>'), e.put("app/addressProof/activeaddress/activeaddress.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Active Addresss Verification test sandbox</a></h1><p class=uk-text-lead>Verify Entity Active address details from Entity Name and Registered address</p><form class="uk-form-horizontal uk-margin-large" ng-submit=search()><h3 class=uk-text-bold>Search by Consumer No</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Entity Name</label><input class=uk-input type=text ng-model=data.name placeholder="Name (Eg. Signzy Technologies)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Registered Address</label><input class=uk-input type=text ng-model=data.registeredAddress placeholder="Address (Eg. 18 B, KUBERA BAHAR BUNGLOWS, SOC 131 2, BANER PASHAN LINK ROAD PUNE MH 411021 IN)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.name ==\'\' || data.registeredAddress == \'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.activeAddressResponse && !loading"><pre pretty-json=data.activeAddressResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/addressProof/electricity/electricity.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Address Proofs(Consumer) test sandbox</a></h1><p class=uk-text-lead>Get Consumer details from Consumer No</p><h3>ConsumerNo Format</h3><ul><li>For Electricity Board <strong>SUPPLY COMPANY OF ORISSA LIMITED (ORISSA):</strong><ul><li>This electricity board requires three number instead of one consumer number.</li><li>Concatenate these three numbers with <strong>"-" (Hyphen)</strong> in between.</li><li>For Example, if the numbers are XXXX, YYYY and ZZZZ, then pass them to consumerNo as <strong>XXXX-YYYY-ZZZZ</strong>.</li></ul></li><li>For all other electricity board pass them as given by the electricity provider</li></ul><h3>Note:</h3><ul><li>Installation Number is Mandatory for <strong>WEST BENGAL STATE ELECTRICITY DISTRIBUTION COMPANY LTD (WBSEDCL)</strong></li><li>Mobile Number is Mandatory for <strong>KERALA STATE ELECTRICITY BOARD (KSEB)</strong></li></ul><form class="uk-form-horizontal uk-margin-large" ng-submit=search()><h3 class=uk-text-bold>Search by Consumer No</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Consumer Number</label><input class=uk-input type=text ng-model=data.consumerNo placeholder="Consumer Number (Eg. 7108990480)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Electricity Board</label><select class=uk-select ng-model=data.electricityProvider ng-init="data.electricityProvider = electricityObject[0].electricityProvider"><option ng-value=obj.electricityProvider ng-repeat="obj in electricityObject" ng-bind="obj.area + \' - \' + obj.name + \' (\' + obj.electricityProvider + \')\'"></option></select></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Installation Number</label><input class=uk-input type=text ng-model=data.installationNumber placeholder="Installation Number" ng-disabled="data.electricityProvider != \'WBSEDCL\'" required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Mobile Number</label><input class=uk-input type=text ng-model=data.mobileNo placeholder="Mobile Number" ng-disabled="data.electricityProvider != \'KSEB\'" required></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.consumerNo ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.electricityResponse && !loading"><p ng-repeat="(key,value) in data.electricityResponse" ng-hide="key == \'splitAddress\' || key == \'listOfPayments\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.electricityResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/addressProof/lpg/lpgId.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Address Proofs(LPG) test sandbox</a></h1><p class=uk-text-lead>Get LPG details from LPGID</p><form class="uk-form-horizontal uk-margin-large" ng-submit=lpgIdSearch()><h3 class=uk-text-bold>LPGID Search</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>LPG ID</label><input class=uk-input type=text ng-model=data.lpgId placeholder="LPG ID (Eg. 10000000056254123)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.lpgId ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.lpgIdResponse && !loading"><p ng-repeat="(key,value) in data.lpgIdResponse" ng-hide="key == \'splitAddress\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.lpgIdResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'),
            e.put("app/addressProof/lpg/lpgverification.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Address Proofs(LPG) test sandbox</a></h1><p class=uk-text-lead>LPG Verification from LPGID</p><form class="uk-form-horizontal uk-margin-large" ng-submit=lpgIdVerification()><h3 class=uk-text-bold>LPGID Verification</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>LPG ID</label><input class=uk-input type=text ng-model=data.lpgId placeholder="LPG ID (Eg. 10000000056254123)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.lpgId ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.lpgIdResponse && !loading"><p ng-repeat="(key,value) in data.lpgIdResponse" ng-hide="key == \'splitAddress\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.lpgIdResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/addressProof/lpg/mobile.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Address Proofs(LPG) test sandbox</a></h1><p class=uk-text-lead>Get LPG details from Mobile Number and LPG Provider Name</p><form class="uk-form-horizontal uk-margin-large" ng-submit=mobileSearch()><h3 class=uk-text-bold>Mobile Number seacrch</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Mobile Number</label><input class=uk-input type=text ng-model=data.mobile placeholder="Mobile Number (Eg. 9845325914)"><div class=uk-text-danger ng-show=wrongInput>Please Enter a valid PAN Number</div></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>LPG Provider</label><select class=uk-select ng-model=data.lpgProvider ng-init="data.lpgProvider = lpgProviders[0].value"><option ng-value=lpg.value ng-repeat="lpg in lpgProviders">{{ lpg.name }}</option></select></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.mobile ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.mobileResponse && !loading"><p ng-repeat="(key,value) in data.mobileResponse" ng-hide="key == \'splitAddress\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.mobileResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/addressProof/phone/landline.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Address Proofs(Phone) test sandbox</a></h1><p class=uk-text-lead>Get Details from Landline Number</p><form class="uk-form-horizontal uk-margin-large" ng-submit=search()><h3 class=uk-text-bold>Search by Landline number</h3><div class="uk-child-width-1-2@s uk-child-width-1-2@m" uk-grid><div><label class=uk-form-label for=form-stacked-text>Std Code</label><input class=uk-input type=text ng-model=data.stdCode placeholder="Std Code (Eg. 033)"></div><div><label class=uk-form-label for=form-stacked-text>Landline Number</label><input class=uk-input type=text ng-model=data.landlineNumber placeholder="Landline Number (Eg. 23375452)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Select Provider</label><select class=uk-select ng-model=data.providerName ng-init="data.providerName = phoneProviders[0].value"><option ng-value=phone.value ng-repeat="phone in phoneProviders">{{ phone.name }}</option></select></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.landlineNumber ==\'\' || data.stdCode ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.landlineReponse && !loading"><p ng-repeat="(key,value) in data.landlineReponse" ng-hide="key == \'splitAddress\' || key == \'listOfPayments\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.landlineReponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/addressProof/phone/mobile.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Address Proofs(Phone) test sandbox</a></h1><p class=uk-text-lead>Get Details from Mobile Number</p><form class="uk-form-horizontal uk-margin-large" ng-submit=generateOtp() name=otpForm><h3 class=uk-text-bold>Generate OTP</h3><div class="uk-child-width-1-2@s uk-child-width-1-2@m" uk-grid><div><label class=uk-form-label for=form-stacked-text>Country Code</label><select class=uk-select ng-model=otpData.countryCode ng-init="otpData.countryCode = otpCountryCodes[0].value"><option ng-value=code.value ng-repeat="code in otpCountryCodes">{{ code.name }}</option></select></div><div><label class=uk-form-label for=form-stacked-text>Mobile Number</label><input class=uk-input type=text ng-model=otpData.mobileNumber maxlength=10 minlength=10 ng-pattern=/^[0-9]*$/ required placeholder="Mobile Number (Eg. 23375452)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=otpForm.$invalid><span ng-hide=loading2>Generate OTP</span> <span uk-spinner ng-show=loading2></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="otpData.otpResponse && otpData.otpResponse.detailed && !loading2"><!-- <p ng-repeat="(key,value) in otpData.otpResponse.detailed" ng-hide="key == \'splitAddress\' || key == \'listOfPayments\'">\n            <span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class="pad-left10" ng-bind="value"></span>\n        </p> --><pre pretty-json=otpData.otpResponse.detailed></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="otpData.error && !loading2"><div class=responseCard><pre pretty-json=otpData.error></pre></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=mobileSearch() name=mobileForm><h3 class=uk-text-bold>Search by Mobile number</h3><div class="uk-child-width-1-2@s uk-child-width-1-2@m" uk-grid><div><label class=uk-form-label for=form-stacked-text>Country Code</label><select class=uk-select ng-model=mobileData.countryCode ng-init="mobileData.countryCode = countryCodes[0].value"><option ng-value=code.value ng-repeat="code in countryCodes">{{ code.name }}</option></select></div><div><label class=uk-form-label for=form-stacked-text>Mobile Number</label><input class=uk-input type=text ng-model=mobileData.mobileNumber maxlength=10 minlength=10 ng-pattern=/^[0-9]*$/ required placeholder="Mobile Number (Eg. 23375452)"></div></div><div class="uk-child-width-1-2@s uk-child-width-1-2@m" uk-grid ng-if="mobileData.countryCode == \'91\'"><div><label class=uk-form-label for=form-stacked-text>OTP</label><input class=uk-input type=text ng-model=mobileData.otp maxlength=6 minlength=4 ng-pattern=/^[0-9]*$/ required placeholder="OTP (Eg. 1234)"></div><div><label class=uk-form-label for=form-stacked-text>Reference ID</label><input class=uk-input type=text ng-model=mobileData.referenceId required placeholder="Reference ID"></div></div><div class="uk-child-width-1-2@s uk-child-width-1-2@m" uk-grid ng-if="mobileData.countryCode == \'91\'"><div><label class=uk-form-label for=form-stacked-text>Extra Feilds Required ?</label><select class=uk-select ng-model=mobileData.extraFields><option value=true>Yes</option><option value=false selected>No</option></select></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=mobileForm.$invalid><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="mobileData.mobileResponse && !loading"><p ng-repeat="(key,value) in mobileData.mobileResponse.detailed" ng-hide="key == \'splitAddress\' || key == \'listOfPayments\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=mobileData.mobileResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="mobileData.error && !loading"><div class=responseCard><pre pretty-json=mobileData.error></pre></div></div>'), e.put("app/backgroundcheck/amlcft/basic-search.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Organizational(AML/CFT) Basic test sandbox</a></h1><p>Try searching for any person/organization here.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=basicSearch()><h3 class=uk-text-bold>Basic Search</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Name</label><input class=uk-input type=text ng-model=data.name placeholder="Name (Eg. AKAR LEASING FINANCIAL LTD)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>User Type</label><select class=uk-select ng-model=data.type><option value=entity>Entity</option><option value=individual>Individual</option></select></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Year of Birth</label><input class=uk-input type=text ng-model=data.yob placeholder=YOB></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Age</label><input class=uk-input type=text ng-model=data.age placeholder=Age></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Country</label><input class=uk-input type=text ng-model=data.country placeholder="Country (Eg. INDIA)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Alias Names</label><textarea class=uk-textarea ng-model=data.aliasArray placeholder="Alias Names"></textarea></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.name ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.amlcftData && !loading"><pre pretty-json=data.amlcftData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/backgroundcheck/amlcft/director-negative-list.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Director/Secretary Negative List test sandbox</a></h1><p>Try searching for any director/secretary here.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=directorNegativeDataSearch()><h3 class=uk-text-bold>Director/Secretary Negative List</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>din/pan</label><input class=uk-input type=text ng-model=data.din placeholder="DIN/PAN (Eg. 01900025)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="!data.din || data.din ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.directorNegativeData && !loading"><pre pretty-json=data.directorNegativeData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/backgroundcheck/amlcft/entity-negative-list.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Entity Negative List test sandbox</a></h1><p>Try searching for any organization here.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=entityNegativeDataSearch()><h3 class=uk-text-bold>Entity Negative List</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>cin</label><input class=uk-input type=text ng-model=data.cin placeholder="CIN (Eg. U92190MH2007PTC174851)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="!data.cin || data.cin ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.entityNegativeData && !loading"><pre pretty-json=data.entityNegativeData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/backgroundcheck/courtcases/case-count.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Court Cases (Case Count) test sandbox</a></h1><p>Try searching for any Entity or Individual here.The API returns no of court cases against the name in different courts in India</p><form class="uk-form-horizontal uk-margin-large" ng-submit=caseCountSearch()><h3 class=uk-text-bold>Court Cases Count Search</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Name</label><input class=uk-input type=text ng-model=data.name placeholder="Names (Eg. Jasper Insfotech)"></div></div><div class="uk-margin uk-grid-small uk-child-width-auto uk-grid"><label class=uk-form-label for=form-stacked-text style=margin-top:0>Additional Filters Required</label><label><input class=uk-radio type=radio ng-model=data.additionalFiltersRequired value=yes name=radio2> Yes</label><label><input class=uk-radio type=radio ng-model=data.additionalFiltersRequired value=no name=radio2> No</label></div><div ng-show="data.additionalFiltersRequired==\'yes\'" class="scol c100"><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Filter Results By</label><select class=uk-select ng-model=data.filterType ng-change=getData()><option value=state>State</option><option value=city>City</option></select></div><div class=uk-margin ng-show="data.filterType == \'state\'"><label class=uk-form-label for=form-stacked-text>State</label><select class=uk-select ng-model=data.stateId ng-init="data.stateId =  data.stateList[0].name"><option ng-value=state.stateId ng-repeat="state in data.stateList">{{ state.stateName }}</option></select></div><div class=uk-margin ng-show="data.filterType == \'city\'"><label class=uk-form-label for=form-stacked-text>City</label><select class=uk-select ng-model=data.cityId ng-init="data.cityId =  data.cityList[0].name"><option ng-value=city.cityId ng-repeat="city in data.cityList">{{ city.cityName }}</option></select></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.name ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.countData && !loading"><pre pretty-json=data.countData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/backgroundcheck/courtcases/case-detail.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Court Cases (Case Detail) test sandbox</a></h1><p>Try searching for the Case Reference Id to return the details particular case</p><form class="uk-form-horizontal uk-margin-large" ng-submit=caseDetailSearch()><h3 class=uk-text-bold>Court Cases Detail Search</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Case Reference Id</label><input class=uk-input type=text ng-model=data.caseReferenceId placeholder="Case Reference Id (Eg. sc-78802)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.caseReferenceId ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.listData && !loading"><pre pretty-json=data.listData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/backgroundcheck/courtcases/case-list.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Court Cases List Search test sandbox</a></h1><p>Try searching for any Entity or Individual here.The API returns list of court cases against the name in different courts in India</p><form class="uk-form-horizontal uk-margin-large" ng-submit=caseListSearch()><h3 class=uk-text-bold>Court Cases List Search</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Name</label><input class=uk-input type=text ng-model=data.caseList.name placeholder="Names (Eg. Jasper Insfotech)" required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>address</label><input class=uk-input type=text ng-model=data.caseList.address placeholder=Address></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Father Name</label><input class=uk-input type=text ng-model=data.caseList.fatherName placeholder="Father Name"></div></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Type</label><select class=uk-select ng-model=data.caseList.type ng-init="data.caseList.type = validCourtCaseListTypeList[0]"><option ng-value=type ng-repeat="type in validCourtCaseListTypeList">{{ type }}</option></select></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>State</label><select class=uk-select ng-model=data.caseList.state ng-init="data.caseList.state =  validCourtCaseListStateList[0].stateCode"><option ng-value=state.stateCode ng-repeat="state in validCourtCaseListStateList">{{ state.stateName }}</option></select></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Case Filter</label><select class=uk-select ng-model=data.caseList.caseFilter ng-init=""><option ng-value=filter ng-repeat="filter in validCourtCaseListCaseFilterList">{{ filter }}</option></select></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Source</label><select class=uk-select ng-model=data.caseList.source ng-init=""><option ng-value=source ng-repeat="source in validCourtCaseListSourceList">{{ source }}</option></select></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Case Category</label><select class=uk-select ng-model=data.caseList.caseCategory ng-init=""><option ng-value=category ng-repeat="category in validCourtCaseListCaseCategoryList">{{ category }}</option></select></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Case Type</label><select class=uk-select ng-model=data.caseList.caseType ng-init=""><option ng-value=type ng-repeat="type in validCourtCaseListCaseTypeList">{{ type }}</option></select></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Case Year</label><input class=uk-input type=text ng-model=data.caseList.caseYear placeholder="Year Or Range Of Years"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.caseList.name ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.listData && !loading"><pre pretty-json=data.listData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/backgroundcheck/dowjones/entity-search.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Entity Search (AML/CFT) sandbox</a></h1><p>Try searching for any Entity here.</p><form class="uk-form-horizontal uk-margin-large" name=EntitySearchForm ng-submit=entitySearch()><h3 class=uk-text-bold>Entity Search</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Name</label><input class=uk-input type=text ng-model=data.name placeholder=Name required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Country Code</label><input class=uk-input type=text ng-model=data.country placeholder="Country Code" required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>State Own Company</label><select class=uk-select ng-model=data.stateOwnCompany><option value=true>True</option><option value=false>False</option></select></div></div><div class=uk-margin><label for="">Description</label><!-- Category --></div><div class=uk-margin><div><input class=uk-checkbox type=checkbox ng-model=entityData.description.sanctions><span class=check-pad>Sanctions</span> <input class=uk-checkbox type=checkbox ng-model=entityData.description.criminal><span class=check-pad>Criminal</span> <input class=uk-checkbox type=checkbox ng-model=entityData.description.financialRisk><span class=check-pad>FinancialRisk</span> <input class=uk-checkbox type=checkbox ng-model=entityData.description.regulatory><span class=check-pad>Regulatory</span></div></div><div class=uk-margin><label for="">Sanctions List</label><!-- Category --></div><div class=uk-margin><div><input class=uk-checkbox type=checkbox ng-model=entityData.sanctionsList.INDIA><span class=check-pad>INDIA</span> <input class=uk-checkbox type=checkbox ng-model=entityData.sanctionsList.UN><span class=check-pad>UN</span> <input class=uk-checkbox type=checkbox ng-model=entityData.sanctionsList.ALL><span class=check-pad>ALL</span></div></div><p uk-margin class="uk-margin uk-text-center"><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=EntitySearchForm.$invalid><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.entityResult && !loading"><pre pretty-json=data.entityResult></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/backgroundcheck/dowjones/person-search.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Person Search(AML/CFT) sandbox</a></h1><p>Try searching for any person/organization here.</p><form class="uk-form-horizontal uk-margin-large" name=personSearchForm ng-submit=personSearch()><h3 class=uk-text-bold>Person Search</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Name</label><input class=uk-input type=text ng-model=data.name placeholder=Name required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Country Code</label><input class=uk-input type=text ng-model=data.country placeholder="Country Code" required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>pep</label><select class=uk-select ng-model=data.pep><option value=true>True</option><option value=false>False</option></select></div></div><div class=uk-margin><label for="">Description</label><!-- Category --></div><div class=uk-margin><div><input class=uk-checkbox type=checkbox ng-model=personData.description.sanctions><span class=check-pad>Sanctions</span> <input class=uk-checkbox type=checkbox ng-model=personData.description.criminal><span class=check-pad>Criminal</span> <input class=uk-checkbox type=checkbox ng-model=personData.description.financialRisk><span class=check-pad>FinancialRisk</span></div></div><div class=uk-margin><label for="">Sanctions List</label><!-- Category --></div><div class=uk-margin><div><input class=uk-checkbox type=checkbox ng-model=personData.sanctionsList.INDIA><span class=check-pad>INDIA</span> <input class=uk-checkbox type=checkbox ng-model=personData.sanctionsList.UN><span class=check-pad>UN</span> <input class=uk-checkbox type=checkbox ng-model=personData.sanctionsList.ALL><span class=check-pad>ALL</span></div></div><p uk-margin class="uk-margin uk-text-center"><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=personSearchForm.$invalid><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.personResult && !loading"><pre pretty-json=data.personResult></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/backgroundcheck/negativeDueDiligence/negative-duediligence-negative-check.html", "<div><div><h1 id=right-to-left-support class=\"uk-h1 tm-heading-fragment\"><a href=#right-to-left-support>Negative Due Diligence test sandbox</a></h1><p>Try searching for any person/organization here.</p><form class=\"uk-form-horizontal uk-margin-large\" ng-submit=basicSearch()><h3 class=uk-text-bold>Negative Due Diligence</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Name*</label><input class=uk-input type=text ng-model=data.name placeholder=\"Name (Eg. AKAR LEASING FINANCIAL LTD)\"></div></div><div class=\"uk-child-width-1-2@s uk-child-width-1-2@m\" uk-grid><div><label class=uk-form-label for=form-stacked-text>User Type*</label><select class=uk-select ng-model=data.type ng-change=changeType()><option value=entity>Entity</option><option value=individual>Individual</option></select></div><div><label class=uk-form-label for=form-stacked-text>Date of Incorporation</label><input class=uk-input type=text ng-model=data.dateOfBirthOrIncorporation placeholder=\"{{data.type == 'entity' ? 'Date of Incorporation (Eg. DD/MM/YYYY)' : 'Date of Birth (Eg. DD/MM/YYYY)'}}\"></div></div><div class=\"uk-child-width-1-2@s uk-child-width-1-2@m\" uk-grid><div><label class=uk-form-label for=form-stacked-text>Identification Number</label><input class=uk-input type=text ng-model=data.identificationNumber placeholder=\"Identification Number\"></div><div><label class=uk-form-label for=form-stacked-text>Zipcode</label><input class=uk-input type=text ng-model=data.zipcode placeholder=ZIPCODE></div></div><div class=\"uk-child-width-1-2@s uk-child-width-1-2@m\" uk-grid><div><label class=uk-form-label for=form-stacked-text>Country</label><input class=uk-input type=text ng-model=data.country placeholder=\"Country (Eg. INDIA)\"></div><div><label class=uk-form-label for=form-stacked-text>Match Score Threshold</label><select class=uk-select ng-model=data.matchScoreThreshold><option ng-value=n ng-repeat=\"n in data.matchScoreRange track by $index\" ng-bind=n></option></select></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Alias Names</label><textarea class=uk-textarea ng-model=data.aliasArray placeholder=\"Alias Names\"></textarea></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Search Text</label><textarea class=uk-textarea ng-model=data.searchText placeholder=\"Search Text(Eg. crime)\"></textarea></div></div><div class=uk-margin ng-show=mcInputShowFlag><div><label class=uk-form-label for=form-stacked-text>Acquirer Id*</label><textarea class=uk-textarea ng-model=data.acquirerId placeholder=\"Acquirer Id\"></textarea></div></div><div class=uk-margin ng-show=mcInputShowFlag><div><label class=uk-form-label for=form-stacked-text>Merchant Name*</label><textarea class=uk-textarea ng-model=data.merchantName placeholder=\"Merchant Name\" ng-change=\"data.name=data.merchantName\"></textarea></div></div><div class=uk-margin ng-show=mcInputShowFlag><div><label class=uk-form-label for=form-stacked-text>Merchant Business Name</label><textarea class=uk-textarea ng-model=data.merchantDoingBusinessAsName placeholder=\"Merchant Business Name\"></textarea></div></div><div class=\"uk-child-width-1-2@s uk-child-width-1-2@m\" uk-grid ng-show=mcInputShowFlag><div><label class=uk-form-label for=form-stacked-text>Merchant Phone Number</label><input class=uk-input type=text ng-model=data.merchantAltPhoneNumber placeholder=\"Merchant Phone Number\"></div><div><label class=uk-form-label for=form-stacked-text>Merchant URL</label><input class=uk-input type=text ng-model=data.merchantURL placeholder=\"Merchant URL\"></div></div><div class=\"uk-child-width-1-2@s uk-child-width-1-2@m\" uk-grid ng-show=mcInputShowFlag><div><label class=uk-form-label for=form-stacked-text>Merchant Address Line1*</label><input class=uk-input type=text ng-model=data.merchantAddress.Line1 placeholder=\"Merchant Address Line1\"></div><div><label class=uk-form-label for=form-stacked-text>Merchant Address Line2</label><input class=uk-input type=text ng-model=data.merchantAddress.Line2 placeholder=\"Merchant Address Line2\"></div></div><div class=\"uk-child-width-1-2@s uk-child-width-1-2@m\" uk-grid ng-show=mcInputShowFlag><div><label class=uk-form-label for=form-stacked-text>Merchant Address City*</label><input class=uk-input type=text ng-model=data.merchantAddress.City placeholder=\"Merchant Address City\"></div><div><label class=uk-form-label for=form-stacked-text>Merchant Address CountrySubdivision</label><input class=uk-input type=text ng-model=data.merchantAddress.CountrySubdivision placeholder=\"Merchant Address CountrySubdivision\"></div></div><div class=\"uk-child-width-1-2@s uk-child-width-1-2@m\" uk-grid ng-show=mcInputShowFlag><div><label class=uk-form-label for=form-stacked-text>Merchant Address PostalCode</label><input class=uk-input type=text ng-model=data.merchantAddress.PostalCode placeholder=\"Merchant Address PostalCode\"></div><div><label class=uk-form-label for=form-stacked-text>Merchant Country</label><input class=uk-input type=text ng-model=data.merchantAddress.Country placeholder=\"Enter 3 letter country code\"></div></div><div class=uk-margin ng-show=mcInputShowFlag><div><label class=uk-form-label for=form-stacked-text>Principal First Name*</label><textarea class=uk-textarea ng-model=data.principalFirstName placeholder=\"Principal First Name\"></textarea></div></div><div class=uk-margin ng-show=mcInputShowFlag><div><label class=uk-form-label for=form-stacked-text>Principal Middle Name</label><textarea class=uk-textarea ng-model=data.principalMiddleInitial placeholder=\"First letter of principal middle name\"></textarea></div></div><div class=uk-margin ng-show=mcInputShowFlag><div><label class=uk-form-label for=form-stacked-text>Principal Last Name*</label><textarea class=uk-textarea ng-model=data.principalLastName placeholder=\"Principal Last Name\"></textarea></div></div><div class=uk-margin ng-show=mcInputShowFlag><div><label class=uk-form-label for=form-stacked-text>Principal Phone Number</label><textarea class=uk-textarea ng-model=data.principalPhoneNumber placeholder=\"Principal Phone Number\"></textarea></div></div><div class=\"uk-child-width-1-2@s uk-child-width-1-2@m\" uk-grid ng-show=mcInputShowFlag><div><label class=uk-form-label for=form-stacked-text>Principal Address Line1*</label><input class=uk-input type=text ng-model=data.principalAddress.Line1 placeholder=\"Principal Address Line1\"></div><div><label class=uk-form-label for=form-stacked-text>Principal Address City*</label><input class=uk-input type=text ng-model=data.principalAddress.City placeholder=\"Principal Address City\"></div></div><div class=\"uk-child-width-1-2@s uk-child-width-1-2@m\" uk-grid ng-show=mcInputShowFlag><div><label class=uk-form-label for=form-stacked-text>Principal Address PostalCode*</label><input class=uk-input type=text ng-model=data.principalAddress.PostalCode placeholder=\"Principal Address PostalCode\"></div><div><label class=uk-form-label for=form-stacked-text>Principal Address CountrySubdivision</label><input class=uk-input type=text ng-model=data.principalAddress.CountrySubdivision placeholder=\"Principal Address CountrySubdivision\"></div></div><div class=\"uk-child-width-1-2@s uk-child-width-1-2@m\" uk-grid ng-show=mcInputShowFlag><div><label class=uk-form-label for=form-stacked-text>Principal Country*</label><input class=uk-input type=text ng-model=data.principalAddress.Country placeholder=\"Enter 3 letter country code\"></div></div><div class=uk-margin><label for=form-stacked-text>Category</label></div><div class=uk-margin><input class=uk-checkbox type=checkbox ng-model=aml ng-change=\"handleArray('aml',aml,'aml','category');\"><span class=check-pad>AML</span><input class=uk-checkbox type=checkbox ng-model=cft ng-change=\"handleArray('cft',cft,'cft','category');\"><span class=check-pad>CFT</span><input class=uk-checkbox type=checkbox ng-model=lending ng-change=\"handleArray('lending',lending,'lending','category');\"><span class=check-pad>LENDING</span><input class=uk-checkbox type=checkbox ng-model=noncompliance ng-change=\"handleArray('noncompliance',noncompliance,'noncompliance','category');\"><span class=check-pad>NON-COMPLIANCE</span></div><div class=\"uk-margin uk-margin-large-top\"><label for=form-stacked-text>Database List</label><span class=pad-left20><input class=uk-checkbox ng-model=allDatabases type=checkbox><span class=check-pad>All Databases</span></span></div><div class=\"scol c100\" ng-show=\"data.type == 'entity' && !allDatabases\"><div class=\"scol c100\"><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=blacklistedEntities ng-change=\"handleArray('blacklistedEntities',blacklistedEntities,'blacklistedEntities','databaseList');\"><span class=check-pad>Blacklisted Entities</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=usSanctionList ng-change=\"handleArray('usSanctionList',usSanctionList,'usSanctionList','databaseList');\"><span class=check-pad>US Sanction List</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=nbfc ng-change=\"handleArray('nbfc',nbfc,'nbfc','databaseList');\"><span class=check-pad>NBFC</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=MCAdefaulterEntities ng-change=\"handleArray('MCAdefaulterEntities',MCAdefaulterEntities,'MCAdefaulterEntities','databaseList');\"><span class=check-pad>MCA Defaulter Entities</span></div></div><div class=\"uk-margin scol c100\"><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=nseDefaulters ng-change=\"handleArray('nseDefaulters',nseDefaulters,'nseDefaulters','databaseList');\"><span class=check-pad>NSE Defaulter Entities</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=sebiIlegalMoneyList ng-change=\"handleArray('sebiIlegalMoneyList',sebiIlegalMoneyList,'sebiIlegalMoneyList','databaseList');\"><span class=check-pad>SEBI Illegal Money List</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=fcracancelled ng-change=\"handleArray('fcracancelled',fcracancelled,'fcracancelled','databaseList');\"><span class=check-pad>FCRA Cancelled List</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=fcraSuspended ng-change=\"handleArray('fcraSuspended',fcraSuspended,'fcraSuspended','databaseList');\"><span class=check-pad>FCRA Suspended List</span></div></div><div class=\"uk-margin scol c100\"><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=blacklistedNgos ng-change=\"handleArray('blacklistedNgos',blacklistedNgos,'blacklistedNgos','databaseList');\"><span class=check-pad>Blacklisted NGOs</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=irdaDefaulters ng-change=\"handleArray('irdaDefaulters',irdaDefaulters,'irdaDefaulters','databaseList');\"><span class=check-pad>IRDA Defaulters List</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=mcxDefaulters ng-change=\"handleArray('mcxDefaulters',mcxDefaulters,'mcxDefaulters','databaseList');\"><span class=check-pad>MCX Defaulters List</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=financialIntelligenceUnitDefaulters ng-change=\"handleArray('financialIntelligenceUnitDefaulters',financialIntelligenceUnitDefaulters,'financialIntelligenceUnitDefaulters','databaseList');\"><span class=check-pad>Financial Intelligence Unit Defaulters List</span></div></div><div class=\"uk-margin scol c100\"><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=dvatDefaulterDealers ng-change=\"handleArray('dvatDefaulterDealers',dvatDefaulterDealers,'dvatDefaulterDealers','databaseList');\"><span class=check-pad>Department of Trade & Taxes, Government of NCT of Delhi Defaulters Dealers List</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=ofacSDNCriminalList ng-change=\"handleArray('ofacSDNCriminalList',ofacSDNCriminalList,'ofacSDNCriminalList','databaseList');\"><span class=check-pad>OFAC SDN Criminal Entities List</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=cibilDefaulters ng-change=\"handleArray('cibilDefaulters',cibilDefaulters,'cibilDefaulters','databaseList');\"><span class=check-pad>CIBIL Defaulters List</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=UNSanctions ng-change=\"handleArray('UNSanctions',UNSanctions,'UNSanctions','databaseList');\"><span class=check-pad>Un Sanction List</span></div></div><div class=\"uk-margin scol c100\"><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=mastercardMatch ng-change=\"handleArray('mastercardMatch',mastercardMatch,'mastercardMatch','databaseList'); showMcMatchInput();\"><span class=check-pad>Mastercard Match</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=adverseMedia ng-change=\"handleArray('adverseMedia',adverseMedia,'adverseMedia','databaseList');\"><span class=check-pad>Adverse Media</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=bseDefaultersExpelled ng-change=\"handleArray('bseDefaultersExpelled',bseDefaultersExpelled,'bseDefaultersExpelled','databaseList');\"><span class=check-pad>BSE Defaulters & Expelled</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=bseDelistedCompanies ng-change=\"handleArray('bseDelistedCompanies',bseDelistedCompanies,'bseDelistedCompanies','databaseList');\"><span class=check-pad>BSE Delisted Companies</span></div></div><div class=\"uk-margin scol c100\"><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=bseSuspendedCompanies ng-change=\"handleArray('bseSuspendedCompanies',bseSuspendedCompanies,'bseSuspendedCompanies','databaseList');\"><span class=check-pad>BSE Suspended Companies</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=enforcement ng-change=\"handleArray('enforcement',enforcement,'enforcement','databaseList');\"><span class=check-pad>Enforcement</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=centralVigilanceCommission ng-change=\"handleArray('centralVigilanceCommission',centralVigilanceCommission,'centralVigilanceCommission','databaseList');\"><span class=check-pad>Central Vigilance Commission</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=cibilDefaulters ng-change=\"handleArray('cibilDefaulters',cibilDefaulters,'cibilDefaulters','databaseList');\"><span class=check-pad>Cibil Defaulters</span></div></div><div class=\"uk-margin scol c100\"><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=MCAMLMCompany ng-change=\"handleArray('MCAMLMCompany',MCAMLMCompany,'MCAMLMCompany','databaseList');\"><span class=check-pad>MCA MLM Company</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=OFSIUKSanctionList ng-change=\"handleArray('OFSIUKSanctionList',OFSIUKSanctionList,'OFSIUKSanctionList','databaseList');\"><span class=check-pad>OFSI UK Sanction List</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=NCDEXCessationMembers ng-change=\"handleArray('NCDEXCessationMembers',NCDEXCessationMembers,'NCDEXCessationMembers','databaseList');\"><span class=check-pad>NCDEX Cessation Members</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=NCDEXDefaulterMembers ng-change=\"handleArray('NCDEXDefaulterMembers',NCDEXDefaulterMembers,'NCDEXDefaulterMembers','databaseList');\"><span class=check-pad>NCDEX Defaulter Members</span></div></div><div class=\"uk-margin scol c100\"><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=NCDEXExpelledMembers ng-change=\"handleArray('NCDEXExpelledMembers',NCDEXExpelledMembers,'NCDEXExpelledMembers','databaseList');\"><span class=check-pad>NCDEX Expelled Members</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=Registrations ng-change=\"handleArray('Registrations',Registrations,'Registrations','databaseList');\"><span class=check-pad>Registrations</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=SFIOConviction ng-change=\"handleArray('SFIOConviction','SFIOConviction',SFIOConviction,'databaseList');\"><span class=check-pad>SFIO Conviction</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=SFIOProsecution ng-change=\"handleArray('SFIOProsecution','SFIOProsecution',SFIOProsecution,'databaseList');\"><span class=check-pad>SFIO Prosecution</span></div></div><div class=\"uk-margin scol c100\"><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=SFIOProclaimed ng-change=\"handleArray('SFIOProclaimed','SFIOProclaimed',SFIOProclaimed,'databaseList');\"><span class=check-pad>SFIO Proclaimed</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=SOE ng-change=\"handleArray('SOE','SOE',SOE,'databaseList');\"><span class=check-pad>SOE</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=SanctionList ng-change=\"handleArray('SanctionList','SanctionList',SanctionList,'databaseList');\"><span class=check-pad>Sanction List</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=EUSanctionList ng-change=\"handleArray('EUSanctionList','EUSanctionList',EUSanctionList,'databaseList');\"><span class=check-pad>EU Sanction List</span></div></div><div class=\"uk-margin scol c100\"><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=fatf ng-change=\"handleArray('fatf',fatf,'fatf','databaseList');\"><span class=check-pad>FATF</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=mcaProclaimedOffendors ng-change=\"handleArray('mcaProclaimedOffendors',mcaProclaimedOffendors,'mcaProclaimedOffendors','databaseList');\"><span class=check-pad>MCA Proclaimed Offendors</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=associatedEntity ng-change=\"handleArray('associatedEntity',associatedEntity,'associatedEntity','databaseList');\"><span class=check-pad>Associated Entity</span></div></div></div><div class=\"scol c100\" ng-show=\"data.type == 'individual' && !allDatabases\"><div class=\"scol c100\"><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=blacklistedIndividuals ng-change=\"handleArray('blacklistedIndividuals',blacklistedIndividuals,'blacklistedIndividuals','databaseList');\"><span class=check-pad>Blacklisted Individuals</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=politicallyExposedPerson ng-change=\"handleArray('politicallyExposedPerson',politicallyExposedPerson,'politicallyExposedPerson','databaseList');\"><span class=check-pad>Politically Exposed Person</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=MCAdefaulterdirectors ng-change=\"handleArray('MCAdefaulterdirectors',MCAdefaulterdirectors,'MCAdefaulterdirectors','databaseList');\"><span class=check-pad>MCA Defaulter Directors</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=MCAdormantdirectors ng-change=\"handleArray('MCAdormantdirectors',MCAdormantdirectors,'MCAdormantdirectors','databaseList');\"><span class=check-pad>MCA Dormant Directors</span></div></div><div class=\"uk-margin scol c100\"><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=bseDefaulters ng-change=\"handleArray('bseDefaulters',bseDefaulters,'bseDefaulters','databaseList');\"><span class=check-pad>BSE Defaulter Individuals</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=niaMostWanted ng-change=\"handleArray('niaMostWanted',niaMostWanted,'niaMostWanted','databaseList');\"><span class=check-pad>NIA Most Wanted</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=interpol ng-change=\"handleArray('interpol',interpol,'interpol','databaseList');\"><span class=check-pad>Interpol</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=blacklistedDoctors ng-change=\"handleArray('blacklistedDoctors',blacklistedDoctors,'blacklistedDoctors','databaseList');\"><span class=check-pad>Blacklisted Doctors</span></div></div><div class=\"uk-margin scol c100\"><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=abscondingCriminals ng-change=\"handleArray('abscondingCriminals',abscondingCriminals,'abscondingCriminals','databaseList');\"><span class=check-pad>CID Maharashtra Absconders List</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=mseiDefaulters ng-change=\"handleArray('mseiDefaulters',mseiDefaulters,'mseiDefaulters','databaseList');\"><span class=check-pad>MSEI Defaulters List</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=ofacSDNCriminalList ng-change=\"handleArray('ofacSDNCriminalList',ofacSDNCriminalList,'ofacSDNCriminalList','databaseList');\"><span class=check-pad>OFAC SDN Criminal Individuals List</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=crimeBureauMostWanted ng-change=\"handleArray('crimeBureauMostWanted',crimeBureauMostWanted,'crimeBureauMostWanted','databaseList');\"><span class=check-pad>Crime Bureau Most Wanted List</span></div></div><div class=\"uk-margin scol c100\"><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=UNSanctions ng-change=\"handleArray('UNSanctions',UNSanctions,'UNSanctions','databaseList');\"><span class=check-pad>Un Sanction List</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=mastercardMatch ng-change=\"handleArray('mastercardMatch',mastercardMatch,'mastercardMatch','databaseList'); showMcMatchInput();\"><span class=check-pad>Mastercard Match</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=adverseMedia ng-change=\"handleArray('adverseMedia',adverseMedia,'adverseMedia','databaseList');\"><span class=check-pad>Adverse Media</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=centralVigilanceCommission ng-change=\"handleArray('centralVigilanceCommission',centralVigilanceCommission,'centralVigilanceCommission','databaseList');\"><span class=check-pad>Central Vigilance Commission</span></div></div><div class=\"uk-margin scol c100\"><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=Enforcement ng-change=\"handleArray('Enforcement',Enforcement,'Enforcement','databaseList');\"><span class=check-pad>Enforcement</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=MCADisqualifiedDirectors ng-change=\"handleArray('MCADisqualifiedDirectors',MCADisqualifiedDirectors,'MCADisqualifiedDirectors','databaseList');\"><span class=check-pad>MCA Disqualified Directors</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=incomeTaxDepartmentTaxDefaulters ng-change=\"handleArray('incomeTaxDepartmentTaxDefaulters',incomeTaxDepartmentTaxDefaulters,'incomeTaxDepartmentTaxDefaulters','databaseList');\"><span class=check-pad>Income Tax Department Tax Defaulters</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=NIAArrestedPerson ng-change=\"handleArray('NIAArrestedPerson',NIAArrestedPerson,'NIAArrestedPerson','databaseList');\"><span class=check-pad>NIA Arrested Person</span></div></div><div class=\"uk-margin scol c100\"><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=nseDefaulters ng-change=\"handleArray('nseDefaulters',nseDefaulters,'nseDefaulters','databaseList');\"><span class=check-pad>NSE Defaulters</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=SFIOConviction ng-change=\"handleArray('SFIOConviction',SFIOConviction,'SFIOConviction','databaseList');\"><span class=check-pad>SFIO Conviction</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=SFIOProclaimed ng-change=\"handleArray('SFIOProclaimed',SFIOProclaimed,'SFIOProclaimed','databaseList');\"><span class=check-pad>SFIO Proclaimed</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=SFIOProsecution ng-change=\"handleArray('SFIOProsecution',SFIOProsecution,'SFIOProsecution','databaseList');\"><span class=check-pad>SFIO Prosecution</span></div></div><div class=\"uk-margin scol c100\"><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=SanctionList ng-change=\"handleArray('SanctionList',SanctionList,'SanctionList','databaseList');\"><span class=check-pad>Sanction List</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=sebiIlegalMoneyList ng-change=\"handleArray('sebiIlegalMoneyList',sebiIlegalMoneyList,'sebiIlegalMoneyList','databaseList');\"><span class=check-pad>SEBI Ilegal Money List</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=EUSanctionList ng-change=\"handleArray('EUSanctionList',EUSanctionList,'EUSanctionList','databaseList');\"><span class=check-pad>EU Sanction List</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=incomeTaxDefaulters ng-change=\"handleArray('incomeTaxDefaulters',incomeTaxDefaulters,'incomeTaxDefaulters','databaseList');\"><span class=check-pad>Income Tax Defaulters</span></div></div><div class=\"uk-margin scol c100\"><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=cibilDefaulters ng-change=\"handleArray('cibilDefaulters',cibilDefaulters,'cibilDefaulters','databaseList');\"><span class=check-pad>Cibil Defaulters</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=OFSIUKSanctionList ng-change=\"handleArray('OFSIUKSanctionList',OFSIUKSanctionList,'OFSIUKSanctionList','databaseList');\"><span class=check-pad>OFSI UK Sanction List</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=fatf ng-change=\"handleArray('fatf',fatf,'fatf','databaseList');\"><span class=check-pad>FATF</span></div><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=mcaProclaimedOffendors ng-change=\"handleArray('mcaProclaimedOffendors',mcaProclaimedOffendors,'mcaProclaimedOffendors','databaseList');\"><span class=check-pad>MCA Proclaimed Offendors</span></div></div><div class=\"uk-margin scol c100\"><div class=\"scol c25\"><input class=uk-checkbox type=checkbox ng-model=associatedEntity ng-change=\"handleArray('associatedEntity',associatedEntity,'associatedEntity','databaseList');\"><span class=check-pad>Associated Entity</span></div></div></div><p uk-margin class=uk-text-center><button class=\"uk-button uk-button-primary uk-button-medium\" ng-disabled=\"data.name ==''\"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class=\"uk-card uk-card-body bg-grey\" ng-show=\"data.negativeData && !loading\"><pre pretty-json=data.negativeData></pre></div></div><div class=\"uk-card uk-card-body bg-grey\" ng-show=\"data.error && !loading\"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>"),
            e.put("app/components/navbar/navbar.html", "<nav class=navbar><a href=https://github.com/Swiip/generator-gulp-angular>Gulp Angular</a><ul><li class=active><a ng-href=#>Home</a></li><li><a ng-href=#>About</a></li><li><a ng-href=#>Contact</a></li></ul><ul class=acme-navbar-text><li>Application was created {{ vm.relativeDate }}.</li></ul></nav>"), e.put("app/docs/bank/bank-account-transfer-lite.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Bank Account Verification Lite test sandbox</a></h1><form class="uk-form-horizontal uk-margin-large" ng-submit=transferLite()><h3 class=uk-text-bold>Bank Account Transfer Lite</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>AccountNo</label><input class=uk-input type=text ng-model=data.transferData.beneficiaryAccount placeholder="Account No"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Account Name</label><input class=uk-input type=text ng-model=data.transferData.beneficiaryName placeholder="Account Name"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Mobile No</label><input class=uk-input type=text ng-model=data.transferData.beneficiaryMobile placeholder="Mobile No"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>IFSC Code</label><input class=uk-input type=text ng-model=data.transferData.beneficiaryIFSC placeholder="IFSC Code"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Remarks</label><input class=uk-input type=text ng-model=data.transferData.remarks placeholder=Remarks></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>NameMatch Score</label><input class=uk-input type=text ng-model=data.transferData.nameMatchScore placeholder="NameMatch Score"></div></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Name Fuzzy Required</label><select class=uk-select ng-model=data.transferData.nameFuzzy><option value=true>TRUE</option><option value=false>FALSE</option></select></div><div class=uk-margin><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Email</label><input class=uk-input type=email ng-model=data.transferData.emailID placeholder="Email ID"><div class=uk-text-danger ng-show=wrongEmailInput>Please Enter a valid EmailID</div></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.transferData.beneficiaryAccount == \'\' || data.transferData.beneficiaryIFSC == \'\'"><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></div></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.transferOutputData && !loading"><!-- <p ng-repeat="(key,value) in data.transferOutputData" ng-hide ="key == \'auditTrail\'">\n                        <span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class="pad-left10" ng-bind="value"></span>\n                </p> --><pre pretty-json=data.transferOutputData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/docs/bank/bank-account-transfer.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Bank Account Verification test sandbox</a></h1><p>Try Penny transfer Here</p><form class="uk-form-horizontal uk-margin-large" ng-submit=transfer()><h3 class=uk-text-bold>Bank Account Transfer</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>AccountNo</label><input class=uk-input type=text ng-model=data.transferData.beneficiaryAccount placeholder="Account No"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Account Name</label><input class=uk-input type=text ng-model=data.transferData.beneficiaryName placeholder="Account Name"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Mobile No</label><input class=uk-input type=text ng-model=data.transferData.beneficiaryMobile placeholder="Mobile No"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>IFSC Code</label><input class=uk-input type=text ng-model=data.transferData.beneficiaryIFSC placeholder="IFSC Code"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Remarks</label><input class=uk-input type=text ng-model=data.transferData.remarks placeholder=Remarks></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>NameMatch Score</label><input class=uk-input type=text ng-model=data.transferData.nameMatchScore placeholder="NameMatch Score"></div></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Name Fuzzy Required</label><select class=uk-select ng-model=data.transferData.nameFuzzy><option value=true>TRUE</option><option value=false>FALSE</option></select></div><div class=uk-margin><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Email</label><input class=uk-input type=email ng-model=data.transferData.emailID placeholder="Email ID"><div class=uk-text-danger ng-show=wrongEmailInput>Please Enter a valid EmailID</div></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.transferData.beneficiaryAccount == \'\' || data.transferData.beneficiaryIFSC == \'\'"><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></div></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.transferOutputData && !loading"><p ng-repeat="(key,value) in data.transferOutputData" ng-hide="key == \'auditTrail\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.transferOutputData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/docs/bank/bank-account-verify.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Bank Account Verification test sandbox</a></h1><p>Try Penny transfer Here</p><form class="uk-form-horizontal uk-margin-large" ng-submit=verify()><h3 class=uk-text-bold>Bank Verify Transfer</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Signzy ID</label><input class=uk-input type=text ng-model=data.verifyData.signzyId placeholder="Signzy ID"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Amount</label><input class=uk-input type=text ng-model=data.verifyData.amount placeholder=Amount></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.verifyData.amount == \'\' || data.verifyData.signzyId == \'\'"><span ng-hide=loading>Verify</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.verifyOutputData && !loading"><p ng-repeat="(key,value) in data.verifyOutputData" ng-hide="key == \'auditTrail\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.verifyOutputData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/docs/bank-statement/bank-statement.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Bank Statement Extraction</a></h1><p class=uk-text-lead>Auto-reading Bank Statement</p><p>Each <b>pdf</b> should be less than <b>2MB</b>.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0"><div class=pad-left0 uk-lightbox><div ng-if=data.bs_files[0]><object data={{data.bs_files[0]}} ngf-pattern="\'application/pdf\'" ngf-accept="\'application/pdf\'" type=application/pdf width=300 height=300 ng-if="data.bs_files[0].indexOf(\'pdf\') != -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.bs_files[0] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.bs_files[0] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.bs_files[0]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.bs_files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=extract()><h3 class=uk-text-bold>Bank Statement Details Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Bank Statement</label><input class=uk-input type=text ng-model=data.bs_files[0] placeholder="Bank Statement PDF(URL)"></div></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Bank Name</label><select class=uk-select ng-model=data.bank ng-init="data.bank = data.allowedBanks[1]"><option ng-value=bank ng-repeat="bank in data.allowedBanks">{{ bank }}</option></select></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Account Type Name</label><select class=uk-select ng-model=data.accountType ng-init="data.accountType = data.allowedTypes[0]"><option ng-value=account ng-repeat="account in data.allowedTypes">{{ account }}</option></select></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.bs_files.length == 0"><span ng-hide=loading>Extract</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.bankStatementData && !loading"><pre pretty-json=data.bankStatementData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div>'), e.put("app/docs/banksearch/ifsc-code.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Bank Search(IFSC Code) test sandbox</a></h1><p>Try searching for any IFSC Code here.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=ifscCodeSearch()><h3 class=uk-text-bold>Bank IFSC Code Search</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Bank IFSC Code</label><input class=uk-input type=text ng-model=data.ifscCode placeholder="IFSC Code (Eg. HDFC0000549)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.ifscCode ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.bankData && !loading"><p ng-repeat="(key,value) in data.bankData" ng-hide="key == \'splitAddress\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.bankData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/docs/banksearch/micr-code.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Bank Search(MICR Code) test sandbox</a></h1><p>Try searching for any MICR Code here.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=micrCodeSearch()><h3 class=uk-text-bold>Bank MICR Code Search</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Bank MICR Code</label><input class=uk-input type=text ng-model=data.micrCode placeholder="MICR Code (Eg. 560240021)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.micrCode ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.bankData && !loading"><p ng-repeat="(key,value) in data.bankData" ng-hide="key == \'splitAddress\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.bankData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/docs/card/credit-card-extraction.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Credit Card Extraction</a></h1><p><span ng-bind=context.apiInfo.version></span></p><p>To make any calls you need to be logged in. Learn more <a ui-sref=home.auth>here</a>.</p><p>To get an overview of the Credit Card extraction process <a ui-sref=home.identitiesWorkflow>visit here</a></p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and is horizontally-aligned.</p><p>Each <b>image/pdf</b> should be less than <b>2MB</b>.</p><h3 id=cancelled-cheque-extraction>Auto-reading cheque</h3><p>Credit Card auto-reading system accepts direct URL to the front & back sides.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0"><div class=pad-left0 uk-lightbox><div ng-if=data.files[0]><a class=uk-inline ng-href={{data.files[0]}}><img width=300 ng-src={{data.files[0]}} max-width=50%; height="" alt="" ng-if="data.files[0].indexOf(\'pdf\') == -1"></a><object data={{data.files[0]}} type=application/pdf width=300 height=300 ng-if="data.files[0].indexOf(\'pdf\') != -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.files[0] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.files[0] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.files[0]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=creditcardExtract()><h3 class=uk-text-bold>Credit Card Details Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Credit Card Image File</label><input class=uk-input type=text ng-model=data.files[0] placeholder="Credit Card Image(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.files.length == 0"><span ng-hide=loading>Extract</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.creditCardData && !loading"><pre pretty-json=data.creditCardData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div>'), e.put("app/docs/cheque/cancelled-cheque-extraction.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Cancelled cheque</a></h1><p><span ng-bind=context.apiInfo.version></span></p><p>To make any calls you need to be logged in. Learn more <a ui-sref=home.auth>here</a>.</p><p>To get an overview of the ID extraction process <a ui-sref=home.identitiesWorkflow>visit here</a></p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and is horizontally-aligned.</p><p>Each <b>image/pdf</b> should be less than <b>2MB</b>.</p><h3 id=cancelled-cheque-extraction>Auto-reading cheque</h3><p>Cancelled cheque auto-reading system accepts direct URL to the front & back sides.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0"><div class=pad-left0 uk-lightbox><div ng-if=data.cheque_files[0]><a class=uk-inline ng-href={{data.cheque_files[0]}}><img width=300 ng-src={{data.cheque_files[0]}} max-width=50%; height="" alt="" ng-if="data.cheque_files[0].indexOf(\'pdf\') == -1"></a><object data={{data.cheque_files[0]}} type=application/pdf width=300 height=300 ng-if="data.cheque_files[0].indexOf(\'pdf\') != -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.cheque_files[0] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.cheque_files[0] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.cheque_files[0]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.cheque_files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=extract()><h3 class=uk-text-bold>Cheque Details Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Cheque Image File</label><input class=uk-input type=text ng-model=data.cheque_files[0] placeholder="cheque Image(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.cheque_files.length == 0"><span ng-hide=loading>Extract</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.chequeExtractedResponse && !loading"><div class=responseCard><div class=responseCard><p ng-show="true || data.chequeExtractedResponse.address"><span class=uk-text-bold>address: </span>{{data.chequeExtractedResponse.address}}</p><p ng-show="true || data.chequeExtractedResponse.ifsc"><span class=uk-text-bold>ifsc: </span>{{data.chequeExtractedResponse.ifsc}}</p><p ng-show="true || data.chequeExtractedResponse.accountNumber"><span class=uk-text-bold>accountNumber: </span>{{data.chequeExtractedResponse.accountNumber}}</p><p ng-show="true || data.chequeExtractedResponse.bankName"><span class=uk-text-bold>bankName: </span>{{data.chequeExtractedResponse.bankName}}</p><p ng-show="true || data.chequeExtractedResponse.chequeNumber"><span class=uk-text-bold>chequeNumber: </span>{{data.chequeExtractedResponse.chequeNumber}}</p><p ng-show="true || data.chequeExtractedResponse.accountType"><span class=uk-text-bold>accountType: </span>{{data.chequeExtractedResponse.accountType}}</p><p ng-show="true || data.chequeExtractedResponse.micrCode"><span class=uk-text-bold>micrCode: </span>{{data.chequeExtractedResponse.micrCode}}</p><p ng-show="true || data.chequeExtractedResponse.contact"><span class=uk-text-bold>contact: </span>{{data.chequeExtractedResponse.contact}}</p><p ng-show="true || data.chequeExtractedResponse.branch"><span class=uk-text-bold>branch: </span>{{data.chequeExtractedResponse.branch}}</p><p ng-show="true || data.chequeExtractedResponse.name"><span class=uk-text-bold>name: </span>{{data.chequeExtractedResponse.name}}</p><div ng-show=data.chequeExtractedResponse.splitAddress><p ng-show=data.chequeExtractedResponse.splitAddress.district><span class=uk-text-bold>District: </span>{{data.chequeExtractedResponse.splitAddress.district}}</p><p ng-show=data.chequeExtractedResponse.splitAddress.pincode><span class=uk-text-bold>Pincode: </span>{{data.chequeExtractedResponse.splitAddress.pincode}}</p><p ng-show=data.chequeExtractedResponse.splitAddress.state><span class=uk-text-bold>State: </span>{{data.chequeExtractedResponse.splitAddress.state}}</p><p ng-show=data.chequeExtractedResponse.splitAddress.country><span class=uk-text-bold>Country: </span>{{data.chequeExtractedResponse.splitAddress.country[2]}}</p><p ng-show=data.chequeExtractedResponse.splitAddress.addressLine><span class=uk-text-bold>Addressline: </span>{{data.chequeExtractedResponse.splitAddress.addressLine}}</p><hr></div><pre pretty-json=data.chequeExtractedResponse></pre></div></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div></div>'), e.put("app/docs/itr/form16.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>ITR Form-16 Extraction</a></h1><p class=uk-text-lead>Auto-reading ITR Form-16</p><p>Each <b>pdf</b> should be less than <b>2MB</b>.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0"><div class=pad-left0 uk-lightbox><div ng-if=data.itr_files[0]><object data={{data.itr_files[0]}} ngf-pattern="\'application/pdf\'" ngf-accept="\'application/pdf\'" type=application/pdf width=300 height=300 ng-if="data.itr_files[0].indexOf(\'pdf\') != -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.itr_files[0] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.itr_files[0] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.itr_files[0]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.itr_files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=extractForm16()><h3 class=uk-text-bold>ITR Form-16 Details Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>ITR Form 16</label><input class=uk-input type=text ng-model=data.itr_files[0] placeholder="ITR Form-16 PDF"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.itr_files.length ==0"><span ng-hide=loading>Extract</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.itrData && !loading"><pre pretty-json=data.itrData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div>'), e.put("app/docs/itr/form26.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>ITR Form-26AS Extraction</a></h1><p class=uk-text-lead>Auto-reading ITR Form-26AS</p><p>Each <b>pdf</b> should be less than <b>2MB</b>.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0"><div class=pad-left0 uk-lightbox><div ng-if=data.itr_files[0]><object data={{data.itr_files[0]}} ngf-pattern="\'application/pdf\'" ngf-accept="\'application/pdf\'" type=application/pdf width=300 height=300 ng-if="data.itr_files[0].indexOf(\'pdf\') != -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.itr_files[0] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.itr_files[0] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.itr_files[0]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.itr_files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=extractForm26s()><h3 class=uk-text-bold>ITR Form-26s Details Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>ITR Form 26s</label><input class=uk-input type=text ng-model=data.itr_files[0] placeholder="ITR Form-26s PDF"></div></div><div><label class=uk-form-label for=form-stacked-text>Date of Birth</label><input class=uk-input type=text ng-model=data.dob placeholder=dd/mm/yyyy></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.itr_files.length ==0"><span ng-hide=loading>Extract</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.itrData && !loading"><pre pretty-json=data.itrData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div>'), e.put("app/docs/itr/form26as.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>ITR Form-26AS Extraction</a></h1><p class=uk-text-lead>Auto-reading ITR Form-26AS</p><p>Each <b>pdf</b> should be less than <b>2MB</b>.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0"><div class=pad-left0 uk-lightbox><div ng-if=data.itr_files[0]><object data={{data.itr_files[0]}} ngf-pattern="\'application/pdf\'" ngf-accept="\'application/pdf\'" type=application/pdf width=300 height=300 ng-if="data.itr_files[0].indexOf(\'pdf\') != -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.itr_files[0] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.itr_files[0] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.itr_files[0]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.itr_files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=extractForm26AS()><h3 class=uk-text-bold>ITR Form-26AS Details Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>ITR Form 26AS</label><input class=uk-input type=text ng-model=data.itr_files[0] placeholder="ITR Form-26AS PDF"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.itr_files.length == 0"><span ng-hide=loading>Extract</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.itrData && !loading"><pre pretty-json=data.itrData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div>'), e.put("app/docs/itranalytics/itranalytics-get-analytics.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Itr Analytics(Get Analytics) test sandbox</a></h1><p>Get ReferenceID</p><form class="uk-form-horizontal uk-margin-large" ng-submit=getAnalytics()><h3 class=uk-text-bold>Get Analytics</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>ReferenceID</label><input class=uk-input type=text ng-model=data.referenceId placeholder=referenceId></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=!data.referenceId><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.itranalyticsData && !loading"><p ng-repeat="(key,value) in data.itranalyticsData"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.itranalyticsData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/docs/itranalytics/itranalytics-get-refenceId.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Itr Analytics(Get ReferenceID) test sandbox</a></h1><p>Get ReferenceID</p><form class="uk-form-horizontal uk-margin-large" ng-submit=getReferenceId()><h3 class=uk-text-bold>Get ReferenceID</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Username</label><input class=uk-input type=text ng-model=data.username placeholder="ITR Portal Username"></div><div><label class=uk-form-label for=form-stacked-text>Password</label><input class=uk-input type=password ng-model=data.password placeholder="ITR Portal Password"></div><div><label class=uk-form-label for=form-stacked-text>PanNumber</label><input class=uk-input type=text ng-model=data.PanNumber placeholder="PanNumber (Optional)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="!data.username || !data.password "><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.itranalyticsData && !loading"><p ng-repeat="(key,value) in data.itranalyticsData"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.itranalyticsData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/docs/pan-validation/pan.validation.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Pan Validation Test Sandbox</a></h1><form class="uk-form-horizontal uk-margin-large" ng-submit=transfer()><h3 class=uk-text-bold>Pan Validation</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>PAN</label><input class=uk-input type=text ng-model=data.transferData.pan placeholder=PAN></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>VPA</label><input class=uk-input type=text ng-model=data.transferData.vpa placeholder=VPA></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.transferData.vpa == \'\' || data.transferData.pan == \'\'"><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.transferOutputData && !loading"><p ng-repeat="(key,value) in data.transferOutputData" ng-hide="key == \'auditTrail\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.transferOutputData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/docs/upi/upi-vpa-fetch.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>UPI(VPA Fetch) test sandbox</a></h1><p>VPA base Fetch</p><form class="uk-form-horizontal uk-margin-large" ng-submit=vpaFetch()><h3 class=uk-text-bold>VPA Fetch</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>VPA</label><input class=uk-input type=text ng-model=data.vpa placeholder=VPA></div></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Name Verification Required</label><select class=uk-select ng-model=data.nameRequired><option value=true>TRUE</option><option value=false>FALSE</option></select></div><div class=uk-margin ng-show="data.nameRequired ==\'true\'"><div><label class=uk-form-label for=form-stacked-text>Name</label><input class=uk-input type=text ng-model=data.name placeholder=Name></div></div><div class=uk-margin ng-show="data.nameRequired ==\'true\'"><div><label class=uk-form-label for=form-stacked-text>Name Fuzzy Required</label><select class=uk-select ng-model=data.fuzzy><option value=true>TRUE</option><option value=false>FALSE</option></select></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="!data.vpa || (data.vpa && !data.name && data.nameRequired ==\'true\')"><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.upi && !loading"><p ng-repeat="(key,value) in data.upi"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.upi></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'),
            e.put("app/documentIntelligence/idIntelligence/id-intelligence.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>ID Intelligence</a></h1><p>The product intelligently extract all information from any ID card across the world.</p><p>For best results, please make sure the image you use is clearly visible without any occlusions and is horizontally-aligned.</p><p>The image is of good quality without blur, glare and shadows</p><p>The boundaries of the card are visible so that the card and the background have some contrast.</p><p>In the json response, a "^" character is an indication of new line in the image uploaded</p><p>Supported file formats are ".jpg", ".jpeg", ".png", "tiff", "pdf".</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0" uk-grid><div class="uk-width-1-2@s pad-left0" uk-lightbox><div ng-if="data.files[0].length > 0"><a class=uk-inline ng-href={{data.files[0]}}><img ng-src="{{data.reviewFile[0] || data.files[0]}}" width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') == -1"></a><object data="{{data.reviewFile[0] || data.files[0]}}" type=application/pdf width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.files[0] uk-icon="icon: file-edit" class=uk-link ng-if="data.files[0].length > 0">&nbsp;</span> <a ng-click="data.reviewFile[0]=\'\'; data.files[0] =\'\'" uk-icon="icon: trash" ng-if="data.files[0].length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($file, 0)" ng-model=data.files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Front file</span></div></div><div class="uk-width-1-2@s pad-left20" uk-lightbox><div ng-if=data.files[1]><a class=uk-inline ng-href={{data.files[1]}}><img ng-src="{{data.reviewFile[1] || data.files[1]}}" width=400 height=400 ng-if="data.files[1].indexOf(\'pdf\') == -1"></a><object data="{{data.reviewFile[1] || data.files[1]}}" type=application/pdf width=400 height=400 ng-if="data.files[1].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,1) ng-model=data.files[1] uk-icon="icon: file-edit" class=uk-link ng-if="data.files[1].length > 0">&nbsp;</span> <a ng-click="data.reviewFile[1]=\'\'; data.files[1] =\'\'" uk-icon="icon: trash" ng-if="data.files[1].length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.files[1].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($file, 1)" ng-model=data.files[1] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Back file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=runGlobalIDCheck()><h3 class=uk-text-bold>Run Document Intelligence Check</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Uploaded First image URL</label><input class=uk-input type=text ng-disabled=data.reviewFile[0] ng-model=data.files[0] placeholder="Uploaded image URL"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Uploaded Second image URL</label><input class=uk-input type=text ng-disabled=data.reviewFile[1] ng-model=data.files[1] placeholder="Uploaded image URL"></div></div><div class="uk-child-width-1-2@s uk-child-width-1-2@m" uk-grid><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Country</label><select class=uk-select ng-model=data.country ng-init="data.country = countries[0]" ng-change=idChange()><option ng-value=country ng-repeat="country in countries">{{ country }}</option></select></div></div><!-- <div class="uk-margin"> --><div><label class=uk-form-label for=form-stacked-text>ID Type</label><select class=uk-select ng-model=data.idType><option ng-value=idType ng-repeat="idType in ids">{{ idType }}</option></select></div><!-- </div> --></div><div class=uk-margin uk-grid><div><label class=uk-form-label for=form-stacked-text>Image Quality Threshold</label><input class=uk-input type=text ng-model=data.imageQualityThreshold placeholder="Threshold value (between 0.05 and 0.95)"></div></div><div class=uk-margin uk-grid><div><input class=uk-checkbox type=checkbox ng-model=data.performImageQualityAnalysis><span class=check-pad>Image Quality Analysis</span> <input class=uk-checkbox type=checkbox ng-model=data.performIdClassification><span class=check-pad>ID Classification</span> <input class=uk-checkbox type=checkbox ng-model=data.performFaceExtraction><span class=check-pad>Face Extraction</span> <input class=uk-checkbox type=checkbox ng-model=data.performIdExtraction><span class=check-pad>ID Extraction</span></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.files.length == 0 ||  data.country == \'\' || data.idType == \'\'" ng-click=runGlobalIDCheck()><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.matchData && !loading"><pre pretty-json=data.matchData></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div></div>'), e.put("app/foreignID/classification/foreignIdClassification.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Foreign ID Classification</a></h1><p class=uk-text-lead>Foreign ID Classification</p><p>First upload the images of the ID you want to classify. You may put direct URL in the text box if you have one.</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and there are no background borders.</p><p>Each <b>image/pdf</b> should be less than <b>2MB</b>.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0" uk-grid><div class="uk-width-1-2@s pad-left0" uk-lightbox><div ng-if="data.files[0].length > 0"><a class=uk-inline ng-href={{data.files[0]}}><img ng-src={{data.files[0]}} width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') == -1"></a><object data={{data.files[0]}} type=application/pdf width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.files[0] uk-icon="icon: file-edit" class=uk-link ng-if="data.files[0].length > 0">&nbsp;</span> <a ng-click="data.files[0] =\'\'" uk-icon="icon: trash" ng-if="data.files[0].length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Front file</span></div></div><div class="uk-width-1-2@s pad-left20" uk-lightbox><div ng-if=data.files[1]><a class=uk-inline ng-href={{data.files[1]}}><img ng-src={{data.files[1]}} width=400 height=400 ng-if="data.files[1].indexOf(\'pdf\') == -1"></a><object data={{data.files[1]}} type=application/pdf width=400 height=400 ng-if="data.files[1].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,1) ng-model=data.files[1] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.files[1] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.files[1]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 1)" ng-model=data.files[1] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Back file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=foreignIdClassify()><h3 class=uk-text-bold>Foreign ID Classification</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Foreign ID Front Image File</label><input class=uk-input type=text ng-model=data.files[0] placeholder="Foreign ID Card Front Image(URL)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Foreign ID Back Image File</label><input class=uk-input type=text ng-model=data.files[1] placeholder="Foreign ID Card Back Image(URL)"></div></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Country Code</label><select class=uk-select ng-model=data.country ng-init="data.country = countryList[0].code"><option ng-value=country.code ng-repeat="country in countryList">{{ country.name }}</option></select></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.files.length < 1"><span ng-hide=loading>Extract</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.extractedResponse && !loading"><p ng-repeat="(key,value) in data.extractedResponse" ng-hide="key == \'fields\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><p ng-repeat="(key,value) in data.extractedResponse.fields"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.extractedResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/foreignID/dl/usDrivingLicence.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>US Driving Licence Extraction</a></h1><p class=uk-text-lead>Auto-reading of US Driving Licence</p><p>First upload the front sides of a US Driving Licence. Then click on extraction. You may put direct URL to front side if you have one.</p><p>The <b>Auto-Read</b> API prefils verification section. Please <b>validate</b> the data before sending for verification.</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and is horizontally-aligned.</p><p>Each <b>image/pdf</b> should be less than <b>2MB</b>.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0"><div class=pad-left0 uk-lightbox><div ng-if="data.files[0].length > 0"><a class=uk-inline ng-href={{data.files[0]}}><img ng-src={{data.files[0]}} width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') == -1"></a><object data={{data.files[0]}} type=application/pdf width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.files[0] uk-icon="icon: file-edit" class=uk-link ng-if="data.files[0].length > 0">&nbsp;</span> <a ng-click="data.files[0] =\'\'" uk-icon="icon: trash" ng-if="data.files[0].length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=usDl()><h3 class=uk-text-bold>US Driving Licence Details Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Driving Licence Front Image File</label><input class=uk-input type=text ng-model=data.files[0] placeholder="Driving Licence Front Side Image(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.files.length < 1"><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.forgeryData && !loading"><p ng-repeat="(key,value) in data.forgeryData" ng-hide="key == \'fields\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><p ng-repeat="(key,value) in data.forgeryData.fields"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.forgeryData></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div></div>'), e.put("app/foreignID/genericPassport/genericPassportExtraction.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Generic Passport Extraction</a></h1><p class=uk-text-lead>Auto-reading Generic Passport</p><p>First upload the front side of a Generic Passport. Then click on extraction. You may put direct URL to front side if you have one.</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and there are no background borders.</p><p>Each <b>image/pdf</b> should be less than <b>2MB</b>.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0" uk-grid><div class="uk-width-1-2@s pad-left0" uk-lightbox><div ng-if="data.gp_files[0].length > 0"><a class=uk-inline ng-href={{data.gp_files[0]}}><img ng-src={{data.gp_files[0]}} width=400 height=400 ng-if="data.gp_files[0].indexOf(\'pdf\') == -1"></a><object data={{data.gp_files[0]}} type=application/pdf width=400 height=400 ng-if="data.gp_files[0].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.gp_files[0] uk-icon="icon: file-edit" class=uk-link ng-if="data.gp_files[0].length > 0">&nbsp;</span> <a ng-click="data.gp_files[0] =\'\'" uk-icon="icon: trash" ng-if="data.gp_files[0].length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.gp_files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.gp_files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Front file</span></div></div><div class="uk-width-1-2@s pad-left20" uk-lightbox><div ng-if=data.gp_files[1]><a class=uk-inline ng-href={{data.gp_files[1]}}><img ng-src={{data.gp_files[1]}} width=400 height=400 ng-if="data.gp_files[1].indexOf(\'pdf\') == -1"></a><object data={{data.gp_files[1]}} type=application/pdf width=400 height=400 ng-if="data.gp_files[1].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,1) ng-model=data.gp_files[1] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.gp_files[1] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.gp_files[1]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 1)" ng-model=data.gp_files[1] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Back file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=extract()><h3 class=uk-text-bold>Generic Passport Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Passport Front Image File</label><input class=uk-input type=text ng-model=data.gp_files[0] placeholder="Passport Card Front Image(URL)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Passport Back Image File</label><input class=uk-input type=text ng-model=data.gp_files[1] placeholder="Passport Card Back Image(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.gp_files.length < 1"><span ng-hide=loading>Extract</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.gpExtractedResponse && !loading"><p ng-repeat="(key,value) in data.gpExtractedResponse" ng-hide="key == \'fields\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><p ng-repeat="(key,value) in data.gpExtractedResponse.fields"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.gpExtractedResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/foreignID/genericPassport/genericPassportMRZBasedExtraction.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Generic Passport MRZ Based Extraction</a></h1><p class=uk-text-lead>Auto-reading Generic Passport</p><p>First upload the front side of a Generic Passport. Then click on extraction. You may put direct URL to front side if you have one.</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and there are no background borders.</p><p>Each <b>image/pdf</b> should be less than <b>2MB</b>.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0"><div class=pad-left0 uk-lightbox><div ng-if="data.gp_files[0].length > 0"><a class=uk-inline ng-href={{data.gp_files[0]}}><img ng-src={{data.gp_files[0]}} width=400 height=400 ng-if="data.gp_files[0].indexOf(\'pdf\') == -1"></a><object data={{data.gp_files[0]}} type=application/pdf width=400 height=400 ng-if="data.gp_files[0].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.gp_files[0] uk-icon="icon: file-edit" class=uk-link ng-if="data.gp_files[0].length > 0">&nbsp;</span> <a ng-click="data.gp_files[0] =\'\'" uk-icon="icon: trash" ng-if="data.gp_files[0].length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.gp_files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.gp_files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Front file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=extractmrzbased()><h3 class=uk-text-bold>Generic Passport MRZ Based Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Passport Front Image File</label><input class=uk-input type=text ng-model=data.gp_files[0] placeholder="Passport Card Front Image(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.gp_files.length < 1"><span ng-hide=loading>Extract</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.gpExtractedResponse && !loading"><p ng-repeat="(key,value) in data.gpExtractedResponse" ng-hide="key == \'fields\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><p ng-repeat="(key,value) in data.gpExtractedResponse.fields"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.gpExtractedResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/foreignID/genericPassport/genericPassportv2Extraction.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Generic Passport V2 Extraction</a></h1><p class=uk-text-lead>Auto-reading Generic Passport</p><p>First upload the front side of a Generic Passport. Then click on extraction. You may put direct URL to front side if you have one.</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and there are no background borders.</p><p>Each <b>image/pdf</b> should be less than <b>2MB</b>.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0"><div class=pad-left0 uk-lightbox><div ng-if="data.gp_files[0].length > 0"><a class=uk-inline ng-href={{data.gp_files[0]}}><img ng-src={{data.gp_files[0]}} width=400 height=400 ng-if="data.gp_files[0].indexOf(\'pdf\') == -1"></a><object data={{data.gp_files[0]}} type=application/pdf width=400 height=400 ng-if="data.gp_files[0].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.gp_files[0] uk-icon="icon: file-edit" class=uk-link ng-if="data.gp_files[0].length > 0">&nbsp;</span> <a ng-click="data.gp_files[0] =\'\'" uk-icon="icon: trash" ng-if="data.gp_files[0].length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.gp_files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.gp_files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Front file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=extractv2()><h3 class=uk-text-bold>Generic Passport V2 Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Passport Front Image File</label><input class=uk-input type=text ng-model=data.gp_files[0] placeholder="Passport Card Front Image(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.gp_files.length < 1"><span ng-hide=loading>Extract</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.gpExtractedResponse && !loading"><p ng-repeat="(key,value) in data.gpExtractedResponse" ng-hide="key == \'fields\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><p ng-repeat="(key,value) in data.gpExtractedResponse.fields"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.gpExtractedResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/foreignID/globalbusiness/global-business-entity-id.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Global Business(Entity Name Search) test sandbox</a></h1><p>Try using Entity Name Search here.</p><form class="uk-form-horizontal uk-margin-large" name=globalBusinessForm><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Country</label><select class=uk-select ng-model=data.countryCode ng-change=countrySelectChangeHandler()><option ng-value=country.countryCode ng-repeat="country in codeList">{{ country.countryName }}</option></select></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>State</label><select class=uk-select ng-model=data.stateCode><option ng-value=state.stateCode ng-repeat="state in stateList">{{ state.stateName }}</option></select></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Entity Id</label><input class=uk-input type=text ng-model=data.entityId placeholder="Entity Id" required></div><div class=uk-margin-medium-top></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=globalBusinessForm.$invalid ng-click=entityIdSearch()><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.globalBusinessData && !loading"><pre pretty-json=data.globalBusinessData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/foreignID/globalbusiness/global-business-entity-name.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Global Business(Entity Name Search) test sandbox</a></h1><p>Try using Entity Name Search here.</p><form class="uk-form-horizontal uk-margin-large" name=globalBusinessForm><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Country</label><select class=uk-select ng-model=data.countryCode ng-change=countrySelectChangeHandler()><option ng-value=country.countryCode ng-repeat="country in codeList">{{ country.countryName }}</option></select></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>State</label><select class=uk-select ng-model=data.stateCode><option ng-value=state.stateCode ng-repeat="state in stateList">{{ state.stateName }}</option></select></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Entity Name</label><input class=uk-input type=text ng-model=data.entityName placeholder="Entity Name" required></div><div class=uk-margin-medium-top></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=globalBusinessForm.$invalid ng-click=entityNameSearch()><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.globalBusinessData && !loading"><pre pretty-json=data.globalBusinessData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/foreignID/globalbusiness/global-business-live-entity-id.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Global Business(Entity Name Search) test sandbox</a></h1><p>Try using Entity Name Search here.</p><form class="uk-form-horizontal uk-margin-large" name=globalBusinessForm><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Country</label><select class=uk-select ng-model=data.countryCode ng-change=countrySelectChangeHandler()><option ng-value=country.countryCode ng-repeat="country in codeList">{{ country.countryName }}</option></select></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>State</label><select class=uk-select ng-model=data.stateCode><option ng-value=state.stateCode ng-repeat="state in stateList">{{ state.stateName }}</option></select></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Entity Id</label><input class=uk-input type=text ng-model=data.entityId placeholder="Entity Id" required></div><div class=uk-margin-medium-top></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=globalBusinessForm.$invalid ng-click=liveEntityIdSearch()><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.globalBusinessData && !loading"><pre pretty-json=data.globalBusinessData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/foreignID/globalbusiness/global-business-live-entity-name.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Global Business(Entity Name Search) test sandbox</a></h1><p>Try using Entity Name Search here.</p><form class="uk-form-horizontal uk-margin-large" name=globalBusinessForm><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Country</label><select class=uk-select ng-model=data.countryCode ng-change=countrySelectChangeHandler()><option ng-value=country.countryCode ng-repeat="country in codeList">{{ country.countryName }}</option></select></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>State</label><select class=uk-select ng-model=data.stateCode><option ng-value=state.stateCode ng-repeat="state in stateList">{{ state.stateName }}</option></select></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Entity Name</label><input class=uk-input type=text ng-model=data.entityName placeholder="Entity Name" required></div><div class=uk-margin-medium-top></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=globalBusinessForm.$invalid ng-click=liveEntityNameSearch()><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.globalBusinessData && !loading"><pre pretty-json=data.globalBusinessData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/foreignID/globalbusiness/mena-company-search.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>MENA Region Company Search test sandbox</a></h1><p>Try using Company Search (MENA Region) here.</p><form class="uk-form-horizontal uk-margin-large" name=menaCompanySearchForm><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Company Name</label><input class=uk-input type=text ng-model=data.mena.companyName placeholder="Company Name"></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Company Number</label><input class=uk-input type=text ng-model=data.mena.companyNumber placeholder="Company Number"></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Country</label><select class=uk-select ng-model=data.mena.countryID ng-init="data.mena.countryID = menaCountryCodeList[0].countryCode" required><option ng-value=country.countryCode ng-repeat="country in menaCountryCodeList">{{ country.countryName }}</option></select></div><div class=uk-margin-medium-top></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=menaCompanySearchForm.$invalid ng-click=menaCompanySearch()><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.menaCompanySearchData && !loading"><pre pretty-json=data.menaCompanySearchData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/foreignID/globalbusinessv2/global-businessv2-company-id.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Global Business V2(Company ID Search) test sandbox</a></h1><p>Try using Company ID Search here.</p><form class="uk-form-horizontal uk-margin-large" name=globalBusinessV2Form><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Country</label><select class=uk-select ng-model=data.countryCode ng-change=countrySelectChangeHandler() required><option ng-value=country.countryCode ng-repeat="country in codeList">{{ country.countryName }}</option></select></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>State</label><select class=uk-select ng-model=data.stateCode><option ng-value=state.stateCode ng-repeat="state in stateList">{{ state.stateName }}</option></select></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Entity ID</label><input class=uk-input type=text ng-model=data.entityId placeholder="Entity Id" required></div><div class=uk-margin-medium-top></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=globalBusinessV2Form.$invalid ng-click=companyIdSearch()><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.globalBusinessData && !loading"><pre pretty-json=data.globalBusinessData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'),
            e.put("app/foreignID/globalbusinessv2/global-businessv2-company-name.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Global Business V2(Company Name Search) test sandbox</a></h1><p>Try using Company Name Search here.</p><form class="uk-form-horizontal uk-margin-large" name=globalBusinessV2Form><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Country</label><select class=uk-select ng-model=data.countryCode ng-change=countrySelectChangeHandler()><option ng-value=""></option><option ng-value=country.countryCode ng-repeat="country in codeList">{{ country.countryName }}</option></select></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>State</label><select class=uk-select ng-model=data.stateCode><option ng-value=state.stateCode ng-repeat="state in stateList">{{ state.stateName }}</option></select></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Entity Name</label><input class=uk-input type=text ng-model=data.entityName placeholder="Entity Name" required></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Entity Status</label><select class=uk-select ng-model=data.entityStatus><option ng-value=active>ACTIVE</option><option ng-value=inactive>INACTIVE</option><option ng-value=dissolved>DISSOLVED</option><option ng-value=""></option></select></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Incorporation Date</label><input class=uk-input type=text ng-model=data.incorporationDate placeholder="Incorporation Date (DD/MM/YYYY)"></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Inactive Flag</label><select class=uk-select ng-model=data.inactiveFlag><option ng-value=true>TRUE</option><option ng-value=false>FALSE</option><option ng-value=""></option></select></div><div class=uk-margin-medium-top></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=globalBusinessV2Form.$invalid ng-click=companyNameSearch()><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.globalBusinessData && !loading"><pre pretty-json=data.globalBusinessData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/foreignID/globalutility/global-utility-get-data.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Global Verification test sandbox</a></h1><p>Try using Global Verification here.</p><form class="uk-form-horizontal uk-margin-large" name=globalverificationForm><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Name</label><input class=uk-input type=text ng-model=data.name placeholder="Name (Eg. James Bradley)" required></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Id Number</label><input class=uk-input type=text ng-model=data.idNumber placeholder="ID Number (Eg-208-44-4239)"></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Date of Birth</label><input class=uk-input type=text ng-model=data.dob placeholder="Date of Birth(17/02/1993)" required></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Phone Number</label><input class=uk-input type=text ng-model=data.phoneNumber placeholder="Phone Number"></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>ZIP Code</label><input class=uk-input type=text ng-model=data.postalCode placeholder="Postal Code(2614)"></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Country Code</label><select class=uk-select ng-model=data.country ng-init="data.country = countryList[0].countryName"><option ng-value=country.countryName ng-repeat="country in countryList">{{ country.countryName }}</option></select></div><div class=uk-margin-medium-top></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-danger uk-button-medium" ng-click=setDefaultGdc()><span>Set Default</span></button> <button class="uk-button uk-button-primary uk-button-medium" ng-disabled=globalverificationForm.$invalid ng-click=basicSearch()><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.globalVerificationData && !loading"><pre pretty-json=data.globalVerificationData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/foreignID/globalutility/global-utility-get-providers.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Global Verification test sandbox</a></h1><p>Try using Global Verification here.</p><form class="uk-form-horizontal uk-margin-large" name=globalverificationForm><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Name</label><input class=uk-input type=text ng-model=data.name placeholder="Name (Eg. James Bradley)" required></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Id Number</label><input class=uk-input type=text ng-model=data.idNumber placeholder="ID Number (Eg-208-44-4239)"></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Date of Birth</label><input class=uk-input type=text ng-model=data.dob placeholder="Date of Birth(17/02/1993)" required></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Phone Number</label><input class=uk-input type=text ng-model=data.phoneNumber placeholder="Phone Number"></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>ZIP Code</label><input class=uk-input type=text ng-model=data.postalCode placeholder="Postal Code(2614)"></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Country Code</label><select class=uk-select ng-model=data.country ng-init="data.country = countryList[0].countryName"><option ng-value=country.countryName ng-repeat="country in countryList">{{ country.countryName }}</option></select></div><div class=uk-margin-medium-top></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-danger uk-button-medium" ng-click=setDefaultGdc()><span>Set Default</span></button> <button class="uk-button uk-button-primary uk-button-medium" ng-disabled=globalverificationForm.$invalid ng-click=basicSearch()><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.globalVerificationData && !loading"><pre pretty-json=data.globalVerificationData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/foreignID/globalverification/globalverification-ssn-verification.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Global Verification(SSN Verification) test sandbox</a></h1><p>Try using Global Verification(SSN Verification) here.</p><form class="uk-form-horizontal uk-margin-large" name=globalverificationForm><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Name</label><input class=uk-input type=text ng-model=ssnData.givenName placeholder=Name required></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Family Name</label><input class=uk-input type=text ng-model=ssnData.familyName placeholder=Name required></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Address</label><input class=uk-input type=text ng-model=ssnData.address placeholder=Address required></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>City</label><input class=uk-input type=text ng-model=ssnData.city placeholder=City></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>State</label><select class=uk-select ng-model=ssnData.state ng-init="ssnData.state = \'\'"><option ng-value=state.stateCode ng-repeat="state in usaStateList">{{ state.stateName }}</option></select></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>SSN</label><input class=uk-input type=text ng-model=ssnData.number maxlength=9 placeholder=123456789 ng-pattern=/(^([1-9]{1})([0-9]{8})$)/ required></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Pincode</label><input class=uk-input type=text ng-model=ssnData.pincode maxlength=5 ng-pattern=/^[0-9]{5}(?:-[0-9]{4})?$/ placeholder=56010 required></div><!-- <div class="uk-margin">\n                <label class="uk-form-label" for="form-stacked-text">Email</label>\n                <input class="uk-input"  type="email" ng-model="ssnData.email"  placeholder="email">\n            </div> --><!-- <div class="uk-margin">\n                <label class="uk-form-label" for="form-stacked-text">Date of Birth</label>\n                <input class="uk-input"  type="text" ng-model="ssnData.dateOfBirth"  placeholder="Date of Birth">\n            </div> --><!-- <div class="uk-margin">\n                <label class="uk-form-label" for="form-stacked-text">Phone Number</label>\n                <input class="uk-input"  type="text" ng-model="ssnData.phoneNumber" maxlength="10" ng-pattern="/^[0-9]*$/" placeholder="Phone Number">\n            </div> --><div class=uk-margin-medium-top></div><p uk-margin class=uk-text-center><!-- <button class="uk-button uk-button-danger uk-button-medium" ng-click="setDefaultSsn()">\n                    <span>Set Default</span>\n                </button> --> <button class="uk-button uk-button-primary uk-button-medium" ng-disabled=globalverificationForm.$invalid ng-click=ssnVerification()><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="ssnData.ssnData && !loading"><pre pretty-json=ssnData.ssnData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="ssnData.error && !loading"><div class=responseCard><pre pretty-json=ssnData.error></pre></div></div></div>'), e.put("app/foreignID/globalverification/globalverification.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Global Verification(Basic Search) test sandbox</a></h1><p>Try using Global Verification(Basic Search) here.</p><form class="uk-form-horizontal uk-margin-large" name=globalverificationForm><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Name</label><input class=uk-input type=text ng-model=data.name placeholder="Name (Eg. James Bradley)" required></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Id Number</label><input class=uk-input type=text ng-model=data.idNumber placeholder="ID Number (Eg-208-44-4239)"></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Date of Birth</label><input class=uk-input type=text ng-model=data.dob placeholder="Date of Birth(17/02/1993)" required></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Phone Number</label><input class=uk-input type=text ng-model=data.phoneNumber placeholder="Phone Number"></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>ZIP Code</label><input class=uk-input type=text ng-model=data.postalCode placeholder="Postal Code(2614)"></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Country Code</label><select class=uk-select ng-model=data.country ng-init="data.country = countryList[0].countryName"><option ng-value=country.countryName ng-repeat="country in countryList">{{ country.countryName }}</option></select></div><div class=uk-margin-medium-top></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-danger uk-button-medium" ng-click=setDefaultGdc()><span>Set Default</span></button> <button class="uk-button uk-button-primary uk-button-medium" ng-disabled=globalverificationForm.$invalid ng-click=basicSearch()><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.globalVerificationData && !loading"><pre pretty-json=data.globalVerificationData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/foreignID/passport/usPassport.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>US Passport Extraction</a></h1><p class=uk-text-lead>Auto-reading of US Passport</p><p>First upload the front sides of a US Passport. Then click on extraction. You may put direct URL to front side if you have one.</p><p>The <b>Auto-Read</b> API prefils verification section. Please <b>validate</b> the data before sending for verification.</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and is horizontally-aligned.</p><p>Each <b>image/pdf</b> should be less than <b>2MB</b>.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0"><div class=pad-left0 uk-lightbox><div ng-if="data.files[0].length > 0"><a class=uk-inline ng-href={{data.files[0]}}><img ng-src={{data.files[0]}} width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') == -1"></a><object data={{data.files[0]}} type=application/pdf width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.files[0] uk-icon="icon: file-edit" class=uk-link ng-if="data.files[0].length > 0">&nbsp;</span> <a ng-click="data.files[0] =\'\'" uk-icon="icon: trash" ng-if="data.files[0].length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=usPassport()><h3 class=uk-text-bold>US Passport Details Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Passport Front Image File</label><input class=uk-input type=text ng-model=data.files[0] placeholder="Passport Front Side Image(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.files.length < 1"><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.forgeryData && !loading"><p ng-repeat="(key,value) in data.forgeryData" ng-hide="key == \'fields\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><p ng-repeat="(key,value) in data.forgeryData.fields"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.forgeryData></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div></div>'), e.put("app/foreignID/personalId/acrcard.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>ACR Card Extraction</a></h1><p class=uk-text-lead>Auto-reading ACR Card</p><p>First upload the front side of a ACR Card and then the Back Side. Then click on extraction. You may put direct URL to front side/Back Side if you have one.</p><p>You can also put a single image of both Front and Back Side of the ACR Card</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and there are no background borders.</p><p>Each <b>image/pdf</b> should be less than <b>2MB</b>.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0" uk-grid><div class="uk-width-1-2@s pad-left0" uk-lightbox><div ng-if="data.files[0].length > 0"><a class=uk-inline ng-href={{data.files[0]}}><img ng-src={{data.files[0]}} width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') == -1"></a><object data={{data.files[0]}} type=application/pdf width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.files[0] uk-icon="icon: file-edit" class=uk-link ng-if="data.files[0].length > 0">&nbsp;</span> <a ng-click="data.files[0] =\'\'" uk-icon="icon: trash" ng-if="data.files[0].length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Front Image</span></div></div><div class="uk-width-1-2@s pad-left20" uk-lightbox><div ng-if=data.files[1]><a class=uk-inline ng-href={{data.files[1]}}><img ng-src={{data.files[1]}} width=400 height=400 ng-if="data.files[1].indexOf(\'pdf\') == -1"></a><object data={{data.files[1]}} type=application/pdf width=400 height=400 ng-if="data.files[1].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,1) ng-model=data.files[1] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.files[1] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.files[1]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 1)" ng-model=data.files[1] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Back Image</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=acrCardExtract()><h3 class=uk-text-bold>ACR Card Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>ACR Card Front Image File/Single Both Side Image</label><input class=uk-input type=text ng-model=data.files[0] placeholder="ACR Card Card Front Image(URL)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>ACR Card Back Image File/Single Both Side Image</label><input class=uk-input type=text ng-model=data.files[1] placeholder="ACR Card Card Back Image(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.files.length < 2"><span ng-hide=loading>Extract</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.extractedResponse && !loading"><p ng-repeat="(key,value) in data.extractedResponse" ng-hide="key == \'fields\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><p ng-repeat="(key,value) in data.extractedResponse.fields"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.extractedResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/foreignID/personalId/aepcard.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>AEP Card Extraction</a></h1><p class=uk-text-lead>Auto-reading AEP Card</p><p>First upload the image of a AEP Card. Then click on extraction. You may put direct URL if you have one.</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and there are no background borders.</p><p>Each <b>image/pdf</b> should be less than <b>2MB</b>.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0" uk-grid><div class="uk-width-1-1@s pad-left0" uk-lightbox><div ng-if="data.files[0].length > 0"><a class=uk-inline ng-href={{data.files[0]}}><img ng-src={{data.files[0]}} width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') == -1"></a><object data={{data.files[0]}} type=application/pdf width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.files[0] uk-icon="icon: file-edit" class=uk-link ng-if="data.files[0].length > 0">&nbsp;</span> <a ng-click="data.files[0] =\'\'" uk-icon="icon: trash" ng-if="data.files[0].length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=aepCardExtract()><h3 class=uk-text-bold>AEP Card Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>AEP Card Image File</label><input class=uk-input type=text ng-model=data.files[0] placeholder="AEP Card Image(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.files.length < 1"><span ng-hide=loading>Extract</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.extractedResponse && !loading"><p ng-repeat="(key,value) in data.extractedResponse" ng-hide="key == \'fields\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><p ng-repeat="(key,value) in data.extractedResponse.fields"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.extractedResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/foreignID/personalId/egyptId.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Egypt ID Extraction</a></h1><p class=uk-text-lead>Auto-reading Egypt ID</p><p>First upload the front side of a Egypt ID. Then click on extraction. You may put direct URL to front side if you have one.</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and there are no background borders.</p><p>Each <b>image</b> should be less than <b>2MB</b>.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0" uk-grid><div class="uk-width-1-2@s pad-left0" uk-lightbox><div ng-if="data.files[0].length > 0"><a class=uk-inline ng-href={{data.files[0]}}><img ng-src={{data.files[0]}} width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') == -1"></a><object data={{data.files[0]}} type=application/pdf width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ngf-accept="\'image/*\'" ng-model=data.files[0] uk-icon="icon: file-edit" class=uk-link ng-if="data.files[0].length > 0">&nbsp;</span> <a ng-click="data.files[0] =\'\'" uk-icon="icon: trash" ng-if="data.files[0].length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ngf-accept="\'image/*\'" ng-model=data.files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Front file</span></div></div><div class="uk-width-1-2@s pad-left20" uk-lightbox><div ng-if=data.files[1]><a class=uk-inline ng-href={{data.files[1]}}><img ng-src={{data.files[1]}} width=400 height=400 ng-if="data.files[1].indexOf(\'pdf\') == -1"></a><object data={{data.files[1]}} type=application/pdf width=400 height=400 ng-if="data.files[1].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,1) ngf-accept="\'image/*\'" ng-model=data.files[1] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.files[1] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.files[1]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 1)" ngf-accept="\'image/*\'" ng-model=data.files[1] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Back file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=egyptIdExtract()><h3 class=uk-text-bold>Egypt ID Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Egypt ID Front Image File</label><input class=uk-input type=text ng-model=data.files[0] placeholder="Egypt ID Card Front Image(URL)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Egypt ID Back Image File</label><input class=uk-input type=text ng-model=data.files[1] placeholder="Egypt ID Card Back Image(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.files.length < 2"><span ng-hide=loading>Extract</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.extractedResponse && !loading"><p ng-repeat="(key,value) in data.extractedResponse" ng-hide="key == \'fields\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><p ng-repeat="(key,value) in data.extractedResponse.fields"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.extractedResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/foreignID/personalId/emiratesId.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Emirates ID Extraction</a></h1><p class=uk-text-lead>Auto-reading Emirates ID</p><p>First upload the front side of a Emirates ID. Then click on extraction. You may put direct URL to front side if you have one.</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and there are no background borders.</p><p>Each <b>image/pdf</b> should be less than <b>2MB</b>.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0" uk-grid><div class="uk-width-1-2@s pad-left0" uk-lightbox><div ng-if="data.files[0].length > 0"><a class=uk-inline ng-href={{data.files[0]}}><img ng-src={{data.files[0]}} width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') == -1"></a><object data={{data.files[0]}} type=application/pdf width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.files[0] uk-icon="icon: file-edit" class=uk-link ng-if="data.files[0].length > 0">&nbsp;</span> <a ng-click="data.files[0] =\'\'" uk-icon="icon: trash" ng-if="data.files[0].length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Front file</span></div></div><div class="uk-width-1-2@s pad-left20" uk-lightbox><div ng-if=data.files[1]><a class=uk-inline ng-href={{data.files[1]}}><img ng-src={{data.files[1]}} width=400 height=400 ng-if="data.files[1].indexOf(\'pdf\') == -1"></a><object data={{data.files[1]}} type=application/pdf width=400 height=400 ng-if="data.files[1].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,1) ng-model=data.files[1] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.files[1] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.files[1]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 1)" ng-model=data.files[1] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Back file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=emiratesIdExtract()><h3 class=uk-text-bold>Emirates ID Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Emirates ID Front Image File</label><input class=uk-input type=text ng-model=data.files[0] placeholder="Emirates ID Card Front Image(URL)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Emirates ID Back Image File</label><input class=uk-input type=text ng-model=data.files[1] placeholder="Emirates ID Card Back Image(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.files.length < 2"><span ng-hide=loading>Extract</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.extractedResponse && !loading"><p ng-repeat="(key,value) in data.extractedResponse" ng-hide="key == \'fields\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><p ng-repeat="(key,value) in data.extractedResponse.fields"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.extractedResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/foreignID/personalId/kuwaitId.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Kuwait ID Extraction</a></h1><p class=uk-text-lead>Auto-reading Kuwait ID</p><p>First upload the image of a Kuwait ID. Then click on extraction. You may put direct URL if you have one.</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and there are no background borders.</p><p>Each <b>image/pdf</b> should be less than <b>2MB</b>.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0" uk-grid><div class="uk-width-1-1@s pad-left0" uk-lightbox><div ng-if="data.files[0].length > 0"><a class=uk-inline ng-href={{data.files[0]}}><img ng-src={{data.files[0]}} width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') == -1"></a><object data={{data.files[0]}} type=application/pdf width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.files[0] uk-icon="icon: file-edit" class=uk-link ng-if="data.files[0].length > 0">&nbsp;</span> <a ng-click="data.files[0] =\'\'" uk-icon="icon: trash" ng-if="data.files[0].length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=kuwaitIdExtract()><h3 class=uk-text-bold>Kuwait ID Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Kuwait ID Image File</label><input class=uk-input type=text ng-model=data.files[0] placeholder="Kuwait ID Card Image(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.files.length < 1"><span ng-hide=loading>Extract</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.extractedResponse && !loading"><p ng-repeat="(key,value) in data.extractedResponse" ng-hide="key == \'fields\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><p ng-repeat="(key,value) in data.extractedResponse.fields"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.extractedResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'),
            e.put("app/foreignID/personalId/mykad.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>MYKAD (Malaysian) ID Extraction</a></h1><p class=uk-text-lead>Auto-reading MYKAD ID</p><p>First upload the image of a MYKAD ID. Then click on extraction. You may put direct URL if you have one.</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and there are no background borders.</p><p>Each <b>image/pdf</b> should be less than <b>2MB</b>.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0" uk-grid><div class="uk-width-1-1@s pad-left0" uk-lightbox><div ng-if="data.files[0].length > 0"><a class=uk-inline ng-href={{data.files[0]}}><img ng-src={{data.files[0]}} width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') == -1"></a><object data={{data.files[0]}} type=application/pdf width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.files[0] uk-icon="icon: file-edit" class=uk-link ng-if="data.files[0].length > 0">&nbsp;</span> <a ng-click="data.files[0] =\'\'" uk-icon="icon: trash" ng-if="data.files[0].length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=mykadIdExtraction()><h3 class=uk-text-bold>MYKAD ID Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>MYKAD ID Image File</label><input class=uk-input type=text ng-model=data.files[0] placeholder="MYKAD ID Image(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.files.length < 1"><span ng-hide=loading>Extract</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.extractedResponse && !loading"><p ng-repeat="(key,value) in data.extractedResponse" ng-hide="key == \'fields\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><p ng-repeat="(key,value) in data.extractedResponse.fields"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.extractedResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/foreignID/personalId/omanid.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Oman ID Extraction</a></h1><p class=uk-text-lead>Auto-reading Oman ID</p><p>First upload the front side of a Oman ID. Then click on extraction. You may put direct URL to front side if you have one.</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and there are no background borders.</p><p>Each <b>image/pdf</b> should be less than <b>2MB</b>.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0" uk-grid><div class="uk-width-1-1@s pad-left0" uk-lightbox><div ng-if="data.files[0].length > 0"><a class=uk-inline ng-href={{data.files[0]}}><img ng-src={{data.files[0]}} width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') == -1"></a><object data={{data.files[0]}} type=application/pdf width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.files[0] uk-icon="icon: file-edit" class=uk-link ng-if="data.files[0].length > 0">&nbsp;</span> <a ng-click="data.files[0] =\'\'" uk-icon="icon: trash" ng-if="data.files[0].length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Front file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=omanIdExtract()><h3 class=uk-text-bold>Oman ID Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Oman ID Front Image File</label><input class=uk-input type=text ng-model=data.files[0] placeholder="Oman ID Card Front Image(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.files.length < 1"><span ng-hide=loading>Extract</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.extractedResponse && !loading"><p ng-repeat="(key,value) in data.extractedResponse" ng-hide="key == \'fields\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><p ng-repeat="(key,value) in data.extractedResponse.fields"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.extractedResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/foreignID/personalId/polandId.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Polish ID Extraction</a></h1><p class=uk-text-lead>Auto-reading Polish ID</p><p>First upload the front side of a Polish ID. Then click on extraction. You may put direct URL to front side if you have one.</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and there are no background borders.</p><p>Each <b>image/pdf</b> should be less than <b>2MB</b>.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0" uk-grid><div class="uk-width-1-2@s pad-left0" uk-lightbox><div ng-if="data.files[0].length > 0"><a class=uk-inline ng-href={{data.files[0]}}><img ng-src={{data.files[0]}} width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') == -1"></a><object data={{data.files[0]}} type=application/pdf width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.files[0] uk-icon="icon: file-edit" class=uk-link ng-if="data.files[0].length > 0">&nbsp;</span> <a ng-click="data.files[0] =\'\'" uk-icon="icon: trash" ng-if="data.files[0].length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Front file</span></div></div><div class="uk-width-1-2@s pad-left20" uk-lightbox><div ng-if=data.files[1]><a class=uk-inline ng-href={{data.files[1]}}><img ng-src={{data.files[1]}} width=400 height=400 ng-if="data.files[1].indexOf(\'pdf\') == -1"></a><object data={{data.files[1]}} type=application/pdf width=400 height=400 ng-if="data.files[1].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,1) ng-model=data.files[1] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.files[1] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.files[1]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 1)" ng-model=data.files[1] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Back file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=polandIdExtract()><h3 class=uk-text-bold>Polish ID Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Polish ID Front Image File</label><input class=uk-input type=text ng-model=data.files[0] placeholder="Polish ID Card Front Image(URL)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Polish ID Back Image File</label><input class=uk-input type=text ng-model=data.files[1] placeholder="Polish ID Card Back Image(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.files.length < 1"><span ng-hide=loading>Extract</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.extractedResponse && !loading"><p ng-repeat="(key,value) in data.extractedResponse" ng-hide="key == \'fields\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><p ng-repeat="(key,value) in data.extractedResponse.fields"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.extractedResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/foreignID/personalId/qatarId.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Qatar ID Extraction</a></h1><p class=uk-text-lead>Auto-reading Qatar ID</p><p>First upload the front side of a Qatar ID. Then click on extraction. You may put direct URL to front side if you have one.</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and there are no background borders.</p><p>Each <b>image/pdf</b> should be less than <b>2MB</b>.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0" uk-grid><div class="uk-width-1-2@s pad-left0" uk-lightbox><div ng-if="data.files[0].length > 0"><a class=uk-inline ng-href={{data.files[0]}}><img ng-src={{data.files[0]}} width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') == -1"></a><object data={{data.files[0]}} type=application/pdf width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.files[0] uk-icon="icon: file-edit" class=uk-link ng-if="data.files[0].length > 0">&nbsp;</span> <a ng-click="data.files[0] =\'\'" uk-icon="icon: trash" ng-if="data.files[0].length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Front file</span></div></div><div class="uk-width-1-2@s pad-left20" uk-lightbox><div ng-if=data.files[1]><a class=uk-inline ng-href={{data.files[1]}}><img ng-src={{data.files[1]}} width=400 height=400 ng-if="data.files[1].indexOf(\'pdf\') == -1"></a><object data={{data.files[1]}} type=application/pdf width=400 height=400 ng-if="data.files[1].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,1) ng-model=data.files[1] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.files[1] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.files[1]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 1)" ng-model=data.files[1] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Back file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=qatarIdExtract()><h3 class=uk-text-bold>Qatar ID Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Qatar ID Front Image File</label><input class=uk-input type=text ng-model=data.files[0] placeholder="Qatar ID Card Front Image(URL)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Qatar ID Back Image File</label><input class=uk-input type=text ng-model=data.files[1] placeholder="Qatar ID Card Back Image(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.files.length < 2"><span ng-hide=loading>Extract</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.extractedResponse && !loading"><p ng-repeat="(key,value) in data.extractedResponse" ng-hide="key == \'fields\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><p ng-repeat="(key,value) in data.extractedResponse.fields"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.extractedResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/foreignID/uen/uenExtraction.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Singapore UEN Certificate Extraction</a></h1><p class=uk-text-lead>Auto-reading of UEN Certificate</p><p>First upload the UEN Certificate. Then click on extraction. You may put direct URL to front side if you have one.</p><p>The <b>Auto-Read</b> API prefils verification section. Please <b>validate</b> the data before sending for verification.</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and is horizontally-aligned.</p><p>Each <b>image/pdf</b> should be less than <b>2MB</b>.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0"><div class=pad-left0 uk-lightbox><div ng-if="data.files[0].length > 0"><a class=uk-inline ng-href={{data.files[0]}}><img ng-src={{data.files[0]}} width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') == -1"></a><object data={{data.files[0]}} type=application/pdf width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.files[0] uk-icon="icon: file-edit" class=uk-link ng-if="data.files[0].length > 0">&nbsp;</span> <a ng-click="data.files[0] =\'\'" uk-icon="icon: trash" ng-if="data.files[0].length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=uenExtraction()><h3 class=uk-text-bold>UEN Certificate Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>UEN Certificate File</label><input class=uk-input type=text ng-model=data.files[0] placeholder="UEN Certificate(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.files.length < 1"><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.uenExtractionData && !loading"><p ng-repeat="(key,value) in data.uenExtractionData" ng-hide="key == \'fields\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><p ng-repeat="(key,value) in data.uenExtractionData.fields"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.uenExtractionData></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div></div>'), e.put("app/foreignID/uen/uenExtractionAndFetch.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Singapore UEN Certificate Extraction and Fetch</a></h1><p class=uk-text-lead>Auto-reading of UEN Certificate</p><p>First upload the UEN Certificate. Then click on extraction. You may put direct URL to front side if you have one.</p><p>The <b>Auto-Read</b> API prefils verification section. Please <b>validate</b> the data before sending for verification.</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and is horizontally-aligned.</p><p>Each <b>image/pdf</b> should be less than <b>2MB</b>.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0"><div class=pad-left0 uk-lightbox><div ng-if="data.files[0].length > 0"><a class=uk-inline ng-href={{data.files[0]}}><img ng-src={{data.files[0]}} width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') == -1"></a><object data={{data.files[0]}} type=application/pdf width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.files[0] uk-icon="icon: file-edit" class=uk-link ng-if="data.files[0].length > 0">&nbsp;</span> <a ng-click="data.files[0] =\'\'" uk-icon="icon: trash" ng-if="data.files[0].length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=uenExtractionFetch()><h3 class=uk-text-bold>UEN Certificate Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>UEN Certificate File</label><input class=uk-input type=text ng-model=data.files[0] placeholder="UEN Certificate(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.files.length < 1"><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.uenExtractionData && !loading"><p ng-repeat="(key,value) in data.uenExtractionData" ng-hide="key == \'fields\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><p ng-repeat="(key,value) in data.uenExtractionData.fields"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.uenExtractionData></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div></div>'), e.put("app/foreignID/uen/uenFetch.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Singapore UEN Fetch</a></h1><p>Try searching for any UEN here.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=uenFetch()><h3 class=uk-text-bold>UEN Search</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>UEN</label><input class=uk-input type=text ng-model=data.uen placeholder="UEN (Eg. 201702448W)"><div class=uk-text-danger ng-show=wrongInput>Please Enter a valid UEN</div></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.uen ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.uenFetchData && !loading"><p ng-repeat="(key,value) in data.uenFetchData" ng-hide="key == \'splitAddress\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.uenFetchData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/foreignID/usbank/account-details.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>US Bank Account Details</a></h1><p>You will need Transaction Id Token for this request. You can generate one over <a href=/us-bank-authorize>here</a>.</p><p>Try using Get Account Details here.</p><form class="uk-form-horizontal uk-margin-large" name=usBankForm><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Transaction Id</label><input class=uk-input type=text ng-model=data.transactionId placeholder="Transaction Id" required></div><div class=uk-margin-medium-top></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=usBankForm.$invalid ng-click=getAccountDetails()><span ng-hide=loading>Get Details</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.usBankData && !loading"><pre pretty-json=data.usBankData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/foreignID/usbank/account-owner-details.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>US Bank Account Owner Details</a></h1><p>You will need Transaction Id Token for this request. You can generate one over <a href=/us-bank-authorize>here</a>.</p><p>Try using Get Account Owner Details here.</p><form class="uk-form-horizontal uk-margin-large" name=usBankForm><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Transaction Id</label><input class=uk-input type=text ng-model=data.transactionId placeholder="Transaction Id" required></div><div class=uk-margin-medium-top></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=usBankForm.$invalid ng-click=getAccountOwnerDetails()><span ng-hide=loading>Get Details</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.usBankData && !loading"><pre pretty-json=data.usBankData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/foreignID/usbank/authorize.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>US Bank Authorize</a></h1><p>You can generate a transaction Id Token using this API</p><br><p class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-click=generateTransactionId()><span ng-hide=loading>Generate</span> <span uk-spinner ng-show=loading></span></button></p><hr class=uk-divider-icon><div class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-show="data.usBankData && !loading" ng-click=copyTransactionId()><span ng-hide=copied>Copy Transaction Id</span> <span ng-show=copied>Copied!!</span></button> <button class="uk-button uk-button-primary uk-button-medium" ng-show="data.usBankData && !loading" ng-click=openURL()>Open Link</button></div><br><div class="uk-card uk-card-body bg-grey" ng-show="data.usBankData && !loading"><pre pretty-json=data.usBankData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/foreignID/usbank/income-details.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>US Bank Income Details</a></h1><p>You will need Transaction Id Token for this request. You can generate one over <a href=/us-bank-authorize>here</a>.</p><p>Try using Get Income Details here.</p><form class="uk-form-horizontal uk-margin-large" name=usBankForm><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Transaction Id</label><input class=uk-input type=text ng-model=data.transactionId placeholder="Transaction Id" required></div><div class=uk-margin-medium-top></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=usBankForm.$invalid ng-click=getIncomeDetails()><span ng-hide=loading>Get Details</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.usBankData && !loading"><pre pretty-json=data.usBankData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/foreignID/usbank/invalidate-token.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>US Bank Invalidate Access/Token</a></h1><p>You will need Transaction Id Token for this request. You can generate one over <a href=/us-bank-authorize>here</a>.</p><p>Try using Invalidating Token here.</p><form class="uk-form-horizontal uk-margin-large" name=usBankForm><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Transaction Id</label><input class=uk-input type=text ng-model=data.transactionId placeholder="Transaction Id" required></div><div class=uk-margin-medium-top></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=usBankForm.$invalid ng-click=invalidateToken()><span ng-hide=loading>Invalidate</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.usBankData && !loading"><pre pretty-json=data.usBankData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/foreignID/usbank/transaction-details.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>US Bank Account Transaction Details</a></h1><p>You will need Transaction Id Token for this request. You can generate one over <a href=/us-bank-authorize>here</a>.</p><p>Try using Get Account Transaction Details here.</p><form class="uk-form-horizontal uk-margin-large" name=usBankForm><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Transaction Id</label><input class=uk-input type=text ng-model=data.transactionId placeholder="Transaction Id" required></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Start Date</label><input class=uk-input type=date ng-model=data.startDate placeholder="Start Date" required></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>End Date</label><input class=uk-input type=date ng-model=data.endDate placeholder="End Date" required></div><div class=uk-margin-medium-top></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=usBankForm.$invalid ng-click=getAccountTransactionDetails()><span ng-hide=loading>Get Details</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.usBankData && !loading"><pre pretty-json=data.usBankData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/forensics/advanceForgery/advance-forgery.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Advance Forgery</a></h1><p>You need to upload an image for which you want to check forgery. You may put direct URLs of the image, in case you have them.</p><p></p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and is horizontally-aligned.</p><p>Each <b>image</b> should be lower than <b>7 MB</b> (Could be configured for more)</p><p>Supported file formats are ".jpg", ".jpeg", ".png". Note: ".pdf" files are not supported.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0" uk-grid><div class="uk-width-1-2@s pad-left0" uk-lightbox><div ng-if="data.files[0].length > 0"><a class=uk-inline ng-href={{data.files[0]}}><img ng-src="{{data.reviewFile[0] || data.files[0]}}" width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') == -1"></a><object data="{{data.reviewFile[0] || data.files[0]}}" type=application/pdf width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.files[0] uk-icon="icon: file-edit" class=uk-link ng-if="data.files[0].length > 0">&nbsp;</span> <a ng-click="data.reviewFile[0]=\'\'; data.files[0] =\'\'" uk-icon="icon: trash" ng-if="data.files[0].length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($file, 0)" ng-model=data.files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Front file</span></div></div><div class="uk-width-1-2@s pad-left0" uk-lightbox><div ng-if=data.files[1]><a class=uk-inline ng-href={{data.files[1]}}><img ng-src="{{data.reviewFile[1] || data.files[1]}}" width=400 height=400 ng-if="data.files[1].indexOf(\'pdf\') == -1"></a><object data="{{data.reviewFile[1] || data.files[1]}}" type=application/pdf width=400 height=400 ng-if="data.files[1].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,1) ng-model=data.files[1] uk-icon="icon: file-edit" class=uk-link ng-if="data.files[1].length > 0">&nbsp;</span> <a ng-click="data.reviewFile[1]=\'\'; data.files[1] =\'\'" uk-icon="icon: trash" ng-if="data.files[1].length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.files[1].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($file, 1)" ng-model=data.files[1] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload back file</span></div></div></div><form class="uk-form-horizontal uk-margin-large"><h3 class=uk-text-bold>Try Advance Forgery</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>ID front image</label><input class=uk-input type=text ng-disabled=data.reviewFile[0] ng-model=data.files[0] placeholder="ID front image"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>ID back image</label><input class=uk-input type=text ng-disabled=data.reviewFile[1] ng-model=data.files[1] placeholder="ID back image"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Threshold (Optional) (60 default)</label><input class=uk-input type=number min=5 max=100 step=5 ng-model=threshold ng-init="threshold=60;" placeholder="Value between 0-100 (optional)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Document Type</label><input class=uk-input type=text ng-model=documentType placeholder="Type of Document"></div></div><div ng-repeat="inputField in inputsFields" uk-grid><div uk-width-1-3@s><label class=uk-form-label for=form-stacked-text>Text Field {{$index + 1}}</label><input class=uk-input type=text ng-model=inputsFields[$index][0] required placeholder="Text Field"></div><div uk-width-2-3@s><label class=uk-form-label for=form-stacked-text>Value {{$index + 1}}</label><input class=uk-input type=text ng-model=inputsFields[$index][1] required placeholder=Value></div></div><br><button ng-hide=loading class="uk-button uk-button-default uk-button-medium" ng-click="inputsFields.push([\'\', \'\'])"><span>Add another field</span><!-- <span uk-spinner ng-show="loading"></span> --></button> <button ng-hide=loading class="uk-button uk-button-default uk-button-medium" ng-click=inputsFields.pop()><span>Remove field</span><!-- <span uk-spinner ng-show="loading"></span> --></button><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.files.length < 1 || loading" ng-click=runAdvanceForgery()><span ng-hide=loading>Run advance forgery</span> <span uk-spinner ng-show=loading></span></button><br><span ng-show=loading class=uk-text-center>Fetching the results, it may take upto a few minutes</span></p><!-- <p uk-margin class="uk-text-center" ng-if="trackingId">\n                <button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.files.length < 1">\n                    <span ng-hide="loading">Fetch results</span>\n                    <span uk-spinner ng-show="loading"></span>\n                </button>\n            </p> --><!-- <p uk-margin class="uk-text-center"  ng-if="trackingId && !data.forgeryData">\n                <span uk-spinner></span>\n                <br>\n\n\n            </p> --><p uk-margin class=uk-text-center ng-if=trackingId><a ng-click=reload()>Do another ID</a></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.forgeryData && !loading"><div ng-repeat="thisImageResult in data.forgeryData.result.imageResults"><h4 class=uk-text-center>Summary of image {{$index + 1}}</h4><div ng-repeat="thisKey in getKeys(thisImageResult)" ng-if="[\'imageUrl\', \'$$hashKey\'].indexOf(thisKey) == -1"><h4 class=uk-text-center>{{thisKey}}</h4><table class="uk-table results-table"><tr ng-repeat="thisKeyDepth2 in getKeys(thisImageResult[thisKey])"><td>{{thisKeyDepth2}}:</td><td><span>{{thisImageResult[thisKey][thisKeyDepth2]}}</span></td></tr></table></div><!-- <table class="uk-table results-table">\n\n                    <tr><td>Photo copy detection:</td><td> <span>{{thisImageResult.summary.photocopyDetection}}</span></td></tr>\n                    <tr><td>Web-check detection:</td><td> <span>{{thisImageResult.summary.webcheckDetection}}</span></td></tr>\n                    <tr><td>Screenshot detection:</td><td> <span>{{thisImageResult.summary.screenshotDetection}}</span></td></tr>\n                    <tr><td>screenshotDetectionScore:</td><td> <span>{{thisImageResult.summary.screenshotDetectionScore}}</span></td></tr>\n                    <tr><td>Overall status:</td><td> <span>{{thisImageResult.summary.status}}</span></td></tr>\n                </table>\n                <h4 class="uk-text-center">Details</h4>\n                <h5 class="uk-text-center">Photo copy detection</h5>\n                <table class="uk-table results-table">\n\n                    <tr><td>Forged:</td><td> <span>{{thisImageResult.photocopyDetection.forged}}</span></td></tr>\n                    <tr><td>Info:</td><td> <span>{{thisImageResult.photocopyDetection.info}}</span></td></tr>\n                    <tr><td>score:</td><td> <span>{{thisImageResult.photocopyDetection.score}}</span></td></tr>\n                </table>\n                <h5 class="uk-text-center">Web-check detection</h5>\n                <table class="uk-table results-table">\n\n                    <tr><td>Forged:</td><td> <span>{{thisImageResult.webcheckDetection.forged}}</span></td></tr>\n                    <tr><td>Info:</td><td> <span>{{thisImageResult.webcheckDetection.info}}</span></td></tr>\n                    <tr><td>score:</td><td> <span>{{thisImageResult.webcheckDetection.score}}</span></td></tr>\n                </table>\n                <h5 class="uk-text-center">Photo copy detection</h5>\n                <table class="uk-table results-table">\n\n                    <tr><td>Forged:</td><td> <span>{{thisImageResult.screenshotDetection.forged}}</span></td></tr>\n                    <tr><td>Info:</td><td> <span>{{thisImageResult.screenshotDetection.info}}</span></td></tr>\n                    <tr><td>score:</td><td> <span>{{thisImageResult.screenshotDetection.score}}</span></td></tr>\n                </table> --><hr></div><!-- data.forgeryData.result.mrzVisualZoneMismatchDetection --><div><h4 class=uk-text-center>Summary of Image Co-Relations Results</h4><div ng-repeat="thisKey in getKeys(data.forgeryData.result.imageCorrelationResults)" ng-if="[\'imageUrl\', \'$$hashKey\'].indexOf(thisKey) == -1"><h4 class=uk-text-center>{{thisKey}}</h4><table class="uk-table results-table"><tr ng-if="thisKey != \'imageUrls\'" ng-repeat="thisKeyDepth2 in getKeys(data.forgeryData.result.imageCorrelationResults[thisKey])"><td>{{thisKeyDepth2}}:</td><td><span>{{data.forgeryData.result.imageCorrelationResults[thisKey][thisKeyDepth2]}}</span></td></tr><tr ng-if="thisKey == \'imageUrls\'"><td>imageUrls:</td><td><span>{{data.forgeryData.result.imageCorrelationResults.imageUrls}}</span></td></tr></table></div><hr></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.forgeryData && !loading"><pre pretty-json=data.forgeryData></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div></div>'),
            e.put("app/forensics/basicForgery/basic-forgery.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Basic Forgery Check</a></h1><p>The Basic Forgery Check product does multiple forgery checks on the images.</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and is horizontally-aligned.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0" ng-hide="data.verifyData.identityCard.type == \'aadhaar\' || data.verifyData.identityCard.type == \'passport\' || data.verifyData.identityCard.type == \'voterId\' || data.verifyData.identityCard.type == \'cheque\' || data.verifyData.identityCard.type == \'unknown\'" uk-grid><div class="uk-width-1-1@s pad-left0" uk-lightbox><div ng-if="data.files[0].length > 0"><a class=uk-inline ng-href={{data.files[0]}}><img ng-src={{data.files[0]}} width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') == -1"></a><object data={{data.files[0]}} type=application/pdf width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.files[0] uk-icon="icon: file-edit" class=uk-link ng-if="data.files[0].length > 0">&nbsp;</span> <a ng-click="data.files[0] =\'\'" uk-icon="icon: trash" ng-if="data.files[0].length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Front file</span></div></div></div><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0" ng-show="data.verifyData.identityCard.type == \'aadhaar\' || data.verifyData.identityCard.type == \'passport\' || data.verifyData.identityCard.type == \'voterId\' || data.verifyData.identityCard.type == \'cheque\' || data.verifyData.identityCard.type == \'unknown\'" uk-grid><div class="uk-width-1-2@s pad-left0" uk-lightbox><div ng-if="data.files[0].length > 0"><a class=uk-inline ng-href={{data.files[0]}}><img ng-src={{data.files[0]}} width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') == -1"></a><object data={{data.files[0]}} type=application/pdf width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.files[0] uk-icon="icon: file-edit" class=uk-link ng-if="data.files[0].length > 0">&nbsp;</span> <a ng-click="data.files[0] =\'\'" uk-icon="icon: trash" ng-if="data.files[0].length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Front file</span></div></div><div class="uk-width-1-2@s pad-left20" uk-lightbox><div ng-if=data.files[1]><a class=uk-inline ng-href={{data.files[1]}}><img ng-src={{data.files[1]}} width=400 height=400 ng-if="data.files[1].indexOf(\'pdf\') == -1"></a><object data={{data.files[1]}} type=application/pdf width=400 height=400 ng-if="data.files[1].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,1) ng-model=data.files[1] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.files[1] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.files[1]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 1)" ng-model=data.files[1] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Back file</span></div></div></div><form name=formHuMain class="uk-form-horizontal uk-margin-large"><!-- ng-submit="runAdvanceForgery()" --><h3 class=uk-text-bold>Run Basic Forgery Check</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Uploaded First image URL</label><input class=uk-input type=text ng-model=data.files[0] placeholder="Uploaded image URL"></div></div><div class=uk-margin ng-show="data.verifyData.identityCard.type == \'aadhaar\' || data.verifyData.identityCard.type == \'passport\' || data.verifyData.identityCard.type == \'unknown\' || data.verifyData.identityCard.type == \'voterId\'"><div><label class=uk-form-label for=form-stacked-text>Uploaded Second image URL</label><input class=uk-input type=text ng-model=data.files[1] placeholder="Uploaded image URL"></div></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Identity Type</label><select class=uk-select ng-model=data.verifyData.identityCard.type ng-change="data.files = []"><option value=aadhaar>Aadhaar</option><option value=individualPan>Individual PAN</option><option value=businessPan>Business PAN</option><option value=passport>Passport</option><option value=dl>Driving Licence</option><option value=voterId>Voter ID</option><option value=cheque>CHEQUE</option><option value=unknown>Unknown</option></select></div><div ng-repeat="inputField in inputsFields" uk-grid><div uk-width-1-3@s><label class=uk-form-label for=form-stacked-text>Field name {{$index + 1}}</label><input class=uk-input type=text ng-model=inputsFields[$index][0] required placeholder="Field name"></div><div uk-width-2-3@s><label class=uk-form-label for=form-stacked-text>Field value {{$index + 1}}</label><input class=uk-input type=text ng-model=inputsFields[$index][1] required placeholder="Field value"></div></div><br><button ng-hide=loading class="uk-button uk-button-default uk-button-medium" ng-click="inputsFields.push([\'\', \'\'])"><span>Add another field</span><!-- <span uk-spinner ng-show="loading"></span> --></button> <button ng-hide=loading class="uk-button uk-button-default uk-button-medium" ng-click=inputsFields.pop()><span>remove field</span><!-- <span uk-spinner ng-show="loading"></span> --></button><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=formHuMain.$invalid ng-click=runBasicForgery()><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.matchData && !loading"><pre pretty-json=data.matchData></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div></div>'), e.put("app/forensics/face-match/face-match.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Face Match</a></h1><p>First upload the two images to be Matched. Then click on Match. You may put direct URLs to front and back sides, in case you have them.</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and is horizontally-aligned.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0" uk-grid><div class="uk-width-1-2@s pad-left0" uk-lightbox><div ng-if="data.files[0].length > 0"><a class=uk-inline ng-href={{data.files[0]}}><img ng-src={{data.files[0]}} width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') == -1"></a><object data={{data.files[0]}} type=application/pdf width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.files[0] uk-icon="icon: file-edit" class=uk-link ng-if="data.files[0].length > 0">&nbsp;</span> <a ng-click="data.files[0] =\'\'" uk-icon="icon: trash" ng-if="data.files[0].length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload First Image</span></div></div><div class="uk-width-1-2@s pad-left20" uk-lightbox><div ng-if=data.files[1]><a class=uk-inline ng-href={{data.files[1]}}><img ng-src={{data.files[1]}} width=400 height=400 ng-if="data.files[1].indexOf(\'pdf\') == -1"></a><object data={{data.files[1]}} type=application/pdf width=400 height=400 ng-if="data.files[1].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,1) ng-model=data.files[1] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.files[1] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.files[1]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 1)" ng-model=data.files[1] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Second Image</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=faceMatch()><h3 class=uk-text-bold>Face Match</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>First Image</label><input class=uk-input type=text ng-model=data.files[0] placeholder="First Image"> <input class=uk-checkbox type=checkbox ng-model=data.maskFlag[0]><span class=check-pad>Check if person is wearing mask</span></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Second Image</label><input class=uk-input type=text ng-model=data.files[1] placeholder="Second Image"> <input class=uk-checkbox type=checkbox ng-model=data.maskFlag[1]><span class=check-pad>Check if person is wearing mask</span></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Threshold(Optional)(0.5 Default)</label><input class=uk-input type=number min=0.05 max=0.95 step=0.01 ng-model=threshold placeholder="Value between 0-1"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Align Horizontally(Optional)(Default value is no)</label><!-- <input class="uk-input"  type="string" checked ng-model="rotate" placeholder="true/false"> --><select class=uk-select ng-model=rotate ng-init="rotate = valuesArray[1]"><option ng-value=value ng-repeat="value in valuesArray">{{ value }}</option></select></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.files.length < 2"><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.faceMatchData && !loading"><p ng-repeat="(key,value) in data.faceMatchData" ng-hide="key == \'fields\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><p ng-repeat="(key,value) in data.faceMatchData.fields"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.faceMatchData></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div></div>'), e.put("app/forensics/face-match/selfie-liveliness.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Selfie Liveliness</a></h1><p>Show your face for liveliness check</p><br><form class="uk-form-horizontal uk-margin-large"><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-click=selfieLiveliness()><span ng-hide=loading>Click Here</span> <span uk-spinner ng-show=loading></span></button></p></form></div></div>'), e.put("app/forensics/forgerywithExraction/aadhaar.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Aadhaar Forgery with Extraction</a></h1><p>First upload the two sides of an aadhaar card. You may put direct URLs to front and back sides, in case you have them.</p><p>The <b>Auto-Read</b> API prefils verification section. Please <b>validate</b> the data before sending for verification.</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and is horizontally-aligned.</p><p>Each <b>image</b> should be less than <b>2MB</b>.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0" uk-grid><div class="uk-width-1-2@s pad-left0" uk-lightbox><div ng-if="data.files[0].length > 0"><a class=uk-inline ng-href={{data.files[0]}}><img ng-src={{data.files[0]}} width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') == -1"></a><object data={{data.files[0]}} type=application/pdf width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.files[0] uk-icon="icon: file-edit" class=uk-link ng-if="data.files[0].length > 0">&nbsp;</span> <a ng-click="data.files[0] =\'\'" uk-icon="icon: trash" ng-if="data.files[0].length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Front file</span></div></div><div class="uk-width-1-2@s pad-left20" uk-lightbox><div ng-if=data.files[1]><a class=uk-inline ng-href={{data.files[1]}}><img ng-src={{data.files[1]}} width=400 height=400 ng-if="data.files[1].indexOf(\'pdf\') == -1"></a><object data={{data.files[1]}} type=application/pdf width=400 height=400 ng-if="data.files[1].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,1) ng-model=data.files[1] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.files[1] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.files[1]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 1)" ng-model=data.files[1] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Back file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit="callForgery(\'aadhaar\')"><h3 class=uk-text-bold>Aadhaar Card Forgery with Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Aadhaar Front Image File</label><input class=uk-input type=text ng-model=data.files[0] placeholder="Aadhaar Card Front Side Image(URL)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Aadhaar Back Image File</label><input class=uk-input type=text ng-model=data.files[1] placeholder="Aadhaar Card Back Side Image(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.files.length < 2"><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.forgeryData && !loading"><p ng-repeat="(key,value) in data.forgeryData.extractionResponse" ng-hide="key == \'splitAddress\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.forgeryData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div>'), e.put("app/forensics/forgerywithExraction/drivingLicence.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Driving License Forgery with Extraction</a></h1><p>First upload the two sides of an Driving License. You may put direct URLs to front and back sides, in case you have them.</p><p>The <b>Auto-Read</b> API prefils verification section. Please <b>validate</b> the data before sending for verification.</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and is horizontally-aligned.</p><p>Each <b>image</b> should be less than <b>2MB</b>.</p><br><br><div class="test-upload uk-placeholder uk-text-center mar-0"><div uk-lightbox><div ng-if="data.files[0].length > 0"><a class=uk-inline ng-href={{data.files[0]}}><img ng-src={{data.files[0]}} width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') == -1"></a><object data={{data.files[0]}} type=application/pdf width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.files[0] uk-icon="icon: file-edit" class=uk-link ng-if="data.files[0].length > 0">&nbsp;</span> <a ng-click="data.files[0] =\'\'" uk-icon="icon: trash" ng-if="data.files[0].length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Front file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit="callForgery(\'dl\')"><h3 class=uk-text-bold>Driving License Forgery with Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Driving License Front Image File</label><input class=uk-input type=text ng-model=data.files[0] placeholder="Driving License Card Front Side Image(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.files.length == 0"><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.forgeryData && !loading"><p ng-repeat="(key,value) in data.forgeryData.extractionResponse" ng-hide="key == \'splitAddress\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.forgeryData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div>'), e.put("app/forensics/forgerywithExraction/individualPan.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>PAN Card Forgery with Extraction</a></h1><p>First upload the two sides of an PAN Card. You may put direct URLs to front and back sides, in case you have them.</p><p>The <b>Auto-Read</b> API prefils verification section. Please <b>validate</b> the data before sending for verification.</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and is horizontally-aligned.</p><p>Each <b>image</b> should be less than <b>2MB</b>.</p><br><br><div class="test-upload uk-placeholder uk-text-center mar-0"><div uk-lightbox><div ng-if="data.files[0].length > 0"><a class=uk-inline ng-href={{data.files[0]}}><img ng-src={{data.files[0]}} width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') == -1"></a><object data={{data.files[0]}} type=application/pdf width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.files[0] uk-icon="icon: file-edit" class=uk-link ng-if="data.files[0].length > 0">&nbsp;</span> <a ng-click="data.files[0] =\'\'" uk-icon="icon: trash" ng-if="data.files[0].length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Front file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit="callForgery(\'individualPan\')"><h3 class=uk-text-bold>PAN Card Forgery with Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>PAN Card Front Image File</label><input class=uk-input type=text ng-model=data.files[0] placeholder="PAN Card Card Front Side Image(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.files.length == 0"><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.forgeryData && !loading"><p ng-repeat="(key,value) in data.forgeryData.extractionResponse" ng-hide="key == \'splitAddress\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.forgeryData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div>'), e.put("app/forensics/forgerywithExraction/passport.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Passport Forgery with Extraction</a></h1><p>First upload the two sides of an Passport. You may put direct URLs to front and back sides, in case you have them.</p><p>The <b>Auto-Read</b> API prefils verification section. Please <b>validate</b> the data before sending for verification.</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and is horizontally-aligned.</p><p>Each <b>image</b> should be less than <b>2MB</b>.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0" uk-grid><div class="uk-width-1-2@s pad-left0" uk-lightbox><div ng-if="data.files[0].length > 0"><a class=uk-inline ng-href={{data.files[0]}}><img ng-src={{data.files[0]}} width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') == -1"></a><object data={{data.files[0]}} type=application/pdf width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.files[0] uk-icon="icon: file-edit" class=uk-link ng-if="data.files[0].length > 0">&nbsp;</span> <a ng-click="data.files[0] =\'\'" uk-icon="icon: trash" ng-if="data.files[0].length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Front file</span></div></div><div class="uk-width-1-2@s pad-left20" uk-lightbox><div ng-if=data.files[1]><a class=uk-inline ng-href={{data.files[1]}}><img ng-src={{data.files[1]}} width=400 height=400 ng-if="data.files[1].indexOf(\'pdf\') == -1"></a><object data={{data.files[1]}} type=application/pdf width=400 height=400 ng-if="data.files[1].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,1) ng-model=data.files[1] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.files[1] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.files[1]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 1)" ng-model=data.files[1] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Back file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit="callForgery(\'passport\')"><h3 class=uk-text-bold>Passport Card Forgery with Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Passport Front Image File</label><input class=uk-input type=text ng-model=data.files[0] placeholder="Passport Card Front Side Image(URL)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Passport Back Image File</label><input class=uk-input type=text ng-model=data.files[1] placeholder="Passport Card Back Side Image(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.files.length < 2"><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.forgeryData && !loading"><p ng-repeat="(key,value) in data.forgeryData.extractionResponse" ng-hide="key == \'splitAddress\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.forgeryData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div>'), e.put("app/forensics/id-classification/indianIdCard.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Indian ID classification</a></h1><p>You need to upload an image of ID card to classify. You may put direct URLs to ID cards, in case you have them.</p><p></p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and is horizontally-aligned.</p><p>Each <b>image/pdf</b> should be less than <b>2MB</b>.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0" uk-grid><div class="uk-width-1-1@s pad-left0" uk-lightbox><div ng-if="data.files[0].length > 0"><a class=uk-inline ng-href={{data.files[0]}}><img ng-src={{data.files[0]}} width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') == -1"></a><object data={{data.files[0]}} type=application/pdf width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.files[0] uk-icon="icon: file-edit" class=uk-link ng-if="data.files[0].length > 0">&nbsp;</span> <a ng-click="data.files[0] =\'\'" uk-icon="icon: trash" ng-if="data.files[0].length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Front file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=idClassify()><h3 class=uk-text-bold>Try Indian ID Card Classification</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>ID Front File URL</label><input class=uk-input type=text ng-model=data.files[0] placeholder="ID Card Image (URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.files.length < 1"><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.idClassificationData && !loading"><p ng-hide="key == \'fields\'"><span class="uk-text-bold uk-text-capitalize">Classified as (idType)</span> <span class=pad-left10 ng-bind=data.idClassificationData.classification.idType></span></p><pre pretty-json=data.idClassificationData></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div></div>'), e.put("app/forensics/image-quality/image-quality.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Image quality</a></h1><p>You need to upload an image to detect the quality and decide whether it is usable for further processing. You may put direct URLs to images, in case you have them.</p><p>To determine the quality of image we give a score out of 0-1, the model is trained on the basis of 4 types of distortions. This API can be used as an add-on to existing product to provide better user experience.</p><h4>The product has four types of quality checks namely:</h4><ol><li><b>Sharpness check</b> - This feature tells if the image is sharp i.e. no blur in image is present. 0 is blur, 1 is sharp.</li><img src=https://staging-persist.signzy.tech/api/files/3229567/download/216f1cf2d1ad406087bd01a7558aa0f76abdba43657b481792404d45d09b580d.png style="width:30%; margin-top: 10px; margin-bottom: 10px"> <img src=https://staging-persist.signzy.tech/api/files/3229568/download/fe64a6cbc95847c2942f6d9b7c3cf9b8c27c378db8af4716a64a370c3c57314d.png style="width:30%; margin-top: 10px; margin-bottom: 10px"><li><b>Brightness check</b> - This feature tells if the image is bright enough for OCR. 0 is dark, 1 is good bright.</li><img src=https://preproduction-persist.signzy.tech/api/files/18213729/download/26f9d25a4cd743e3938c58ac5e2946f5d5cdf0db8fdb42c3a2332a4fc23940d5.png style="width:30%; margin-top: 10px; margin-bottom: 10px"> <img src=https://preproduction-persist.signzy.tech/api/files/18213707/download/b58c0f52c3e1427182474fb4850b91a22e22fc37e0f142208e2f75d52d8c8c28.png style="width:30%; margin-top: 10px; margin-bottom: 10px"><li><b>Compression quality check</b> - This feature tells if the image is pixelated. 0 is compressed, 1 is good.</li><img src=https://preproduction-persist.signzy.tech/api/files/18213739/download/e25abbe0b2434d77b73aea6ef5fb808068ac570301e94702bdcb58c550b5d893.png style="width:30%; height: 225px; margin-top: 10px; margin-bottom: 10px"> <img src=https://preproduction-persist.signzy.tech/api/files/18213737/download/f20223f751c34ffaaf713dc0172d5a038ee8d7babb4944f7b9cf2797171f88c2.png style="width:30%; margin-top: 10px; margin-bottom: 10px"><li><b>Text readable</b> - This tells whether the text present on the image is readable or not. 0 is bad, 1 is good.</li><img src=https://staging-persist.signzy.tech/api/files/3108988/download/efc04b004f464c34853c690a74decad448ba2ec9e6224765aee10cf08516141c.png style="width:30%;  margin-top: 10px; margin-bottom: 10px"> <img src=https://preproduction-persist.signzy.tech/api/files/18186115/download/1039bc5a08d84e6ca1376c3e82887c5c3d2ebe8c54514766af693b9953f7d58b.jpeg style="width:30%; height: 275px; margin-top: 10px; margin-bottom: 10px"></ol><p>Each <b>image</b> should be less than <b>2MB</b>.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0" uk-grid><div class="uk-width-1-1@s pad-left0" uk-lightbox><div ng-if="data.files[0].length > 0"><a class=uk-inline ng-href={{data.files[0]}}><img ng-src={{data.files[0]}} width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') == -1"></a><object data={{data.files[0]}} type=application/pdf width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.files[0] uk-icon="icon: file-edit" class=uk-link ng-if="data.files[0].length > 0">&nbsp;</span> <a ng-click="data.files[0] =\'\'" uk-icon="icon: trash" ng-if="data.files[0].length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Front file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" name=imageForm ng-submit=getQuality()><h3 class=uk-text-bold>Try image Quality API</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Image file URL</label><input class=uk-input type=text ng-model=data.files[0] placeholder="Image (URL)" required></div></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Quality Parameter</label><select class=uk-select ng-model=data.qualityParameter ng-init="data.qualityParameter =\'all\'"><option value=blur>Blur</option><option value=brightness>Brightness</option><option value=compressionQuality>Compression Quality</option><option value=textQuality>Text Quality</option><option value=all>All</option></select></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Acceptance Threshold</label><input type=number name="" class=uk-input ng-model=data.acceptanceThreshold min=0 max=1 step=0.01 placeholder="Threshold value (between 0 and 1)"></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=imageForm.$invalid><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.qualityCheckData && !loading"><pre pretty-json=data.qualityCheckData></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div></div>'),
            e.put("app/forensics/imageForgery/forgery-photocopy.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Forgery Check (Photocopy)</a></h1><p>You need to upload an image for which you want to check forgery. You may put direct URLs of the image, in case you have them.</p><p></p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and is horizontally-aligned.</p><p>Each <b>image</b> should be less than <b>2MB.</b></p><p>Supported file formats are ".jpg", ".jpeg", ".png", "tiff", "pdf".</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0" uk-grid><div class="uk-width-1-1@s pad-left0" uk-lightbox><div ng-if="data.url.length > 0"><a class=uk-inline ng-href={{data.url}}><img ng-src={{data.url}} width=400 height=400 ng-if="data.url.indexOf(\'pdf\') == -1"></a><object data={{data.url}} type=application/pdf width=400 height=400 ng-if="data.url.indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.url uk-icon="icon: file-edit" class=uk-link ng-if="data.url.length > 0">&nbsp;</span> <a ng-click="data.url =\'\'" uk-icon="icon: trash" ng-if="data.url.length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.url.length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.url ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Front file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit="runImageForgery(\'photocopyDetect\')"><h3 class=uk-text-bold>Try Photocopy Check</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Image</label><input class=uk-input type=text ng-model=data.url placeholder="Image (URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=!data.url><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.forgeryData && !loading"><pre pretty-json=data.forgeryData></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div></div>'), e.put("app/forensics/imageForgery/forgery-screenshot.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Forgery Check (Screenshot)</a></h1><p>You need to upload an image for which you want to check forgery. You may put direct URLs of the image, in case you have them.</p><p></p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and is horizontally-aligned.</p><p>Each <b>image</b> should be less than <b>2MB.</b></p><p>Supported file formats are ".jpg", ".jpeg", ".png", "tiff", "pdf".</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0" uk-grid><div class="uk-width-1-1@s pad-left0" uk-lightbox><div ng-if="data.url.length > 0"><a class=uk-inline ng-href={{data.url}}><img ng-src={{data.url}} width=400 height=400 ng-if="data.url.indexOf(\'pdf\') == -1"></a><object data={{data.url}} type=application/pdf width=400 height=400 ng-if="data.url.indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.url uk-icon="icon: file-edit" class=uk-link ng-if="data.url.length > 0">&nbsp;</span> <a ng-click="data.url =\'\'" uk-icon="icon: trash" ng-if="data.url.length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.url.length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.url ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Front file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit="runImageForgery(\'screenshotDetect\')"><h3 class=uk-text-bold>Try Screenshot Check</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Image</label><input class=uk-input type=text ng-model=data.url placeholder="Image (URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=!data.url><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.forgeryData && !loading"><pre pretty-json=data.forgeryData></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div></div>'), e.put("app/forensics/imageForgery/forgery-web.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Forgery Check (Web Detect)</a></h1><p>You need to upload an image for which you want to check forgery. You may put direct URLs of the image, in case you have them.</p><p></p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and is horizontally-aligned.</p><p>Each <b>image</b> should be less than <b>2MB.</b></p><p>Supported file formats are ".jpg", ".jpeg", ".png", "tiff", "pdf".</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0" uk-grid><div class="uk-width-1-1@s pad-left0" uk-lightbox><div ng-if="data.url.length > 0"><a class=uk-inline ng-href={{data.url}}><img ng-src={{data.url}} width=400 height=400 ng-if="data.url.indexOf(\'pdf\') == -1"></a><object data={{data.url}} type=application/pdf width=400 height=400 ng-if="data.url.indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.url uk-icon="icon: file-edit" class=uk-link ng-if="data.url.length > 0">&nbsp;</span> <a ng-click="data.url =\'\'" uk-icon="icon: trash" ng-if="data.url.length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.url.length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.url ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Front file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit="runImageForgery(\'webDetect\')"><h3 class=uk-text-bold>Try Web Detect</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Image</label><input class=uk-input type=text ng-model=data.url placeholder="Image (URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=!data.url><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.forgeryData && !loading"><pre pretty-json=data.forgeryData></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div></div>'), e.put("app/forensics/video-conf/video-create-conference.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Video Conference</a></h1><form class="uk-form-horizontal uk-margin-large"><h6 class=uk-text-bold>User Details</h6><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Provide the name of the user</label><input class=uk-input type=text ng-model=confObj.users[0].name placeholder="Name of the User"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Provide the email ID of the user</label><input class=uk-input type=email ng-model=confObj.users[0].email placeholder="Email Id of the User"></div></div><div class=uk-margin>&nbsp;</div><p uk-margin class=uk-text-center><button class="uk-button uk-button-secondary uk-button-medium" ng-click=createVideoConfRoom() type=submit ng-disabled="!confObj.users[0].name ||!confObj.users[0].email"><span ng-hide=startLoading>Start</span> <span uk-spinner ng-show=startLoading></span></button> <button class="uk-button uk-button-primary uk-button-medium" ng-disabled=data.stopGetDataButton ng-click=getData()><span ng-hide=loading>Get Data</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="confObj.videoConfResponse && !loading"><div class="uk-child-width-1-2@s uk-child-width-1-2@m" uk-grid ng-show="confObj.videoConfResponse && !loading"><div class=uk-text-center><div class=uk-text-bold>Recorded Video</div><video src={{trustedUrl(confObj.videoConfResponse.users[0].recordedVideoData.videoUrl)}} controls preload=metadata></video></div><div class=uk-text-center><div class=uk-text-bold>Video Thumbnail Image</div><img ng-src={{confObj.videoConfResponse.users[0].recordedVideoData.videoThumbnail}}></div></div></div><div class="uk-card uk-card-body bg-grey" ng-show="confObj.videoConfResponse && !loading"><pre pretty-json=confObj.videoConfResponse></pre></div></div></div>'), e.put("app/forensics/video-conf/video-join-conference.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Video Conference</a></h1><p class=uk-text-lead>Join an existing meeting</p><p>The Reserve Bank of India made an amendment on January 9, 2020 to the KYC norms allowing banks and other lending institutions regulated by it to adopt a Video based Customer Identification Process (V-CIP) as a consent based alternate method of identity verification for Customer Onboarding.</p><p>You can join an existing meeting either using the name of the meeting or using the meeting url shared with you.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=joinVideoRoom()><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Join Using</label><select class=uk-select ng-model=data.modeRequired><option value=name>Name of the meeting</option><option value=url>URL of the meeting</option></select></div><div class=uk-margin ng-show="data.modeRequired == \'name\'"><div><label for=form-stacked-text>Name of the meeting</label><input class=uk-input type=text ng-model=data.name placeholder=Name></div></div><div class=uk-margin ng-show="data.modeRequired == \'url\'"><div><label for=form-stacked-text>URL of the meeting</label><input class=uk-input type=text ng-model=data.url placeholder=URL></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" type=submit ng-disabled="!data.name && !data.url"><span ng-hide=loading>Start</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon></div></div>'), e.put("app/forensics/video-conf/video-kyc.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Video KYC Platform</a></h1><p class=uk-text-lead>Start a new Video eKYC workflow</p><p>The Reserve Bank of India made an amendment on January 9, 2020 to the KYC norms allowing banks and other lending institutions regulated by it to adopt a Video based Customer Identification Process (V-CIP) as a consent based alternate method of identity verification for Customer Onboarding.</p><p>To test our Video based eKYC workflow, provide the name of the meeting below. The name of the meeting can be any string, for example, <em>"sampleMeeting."</em></p><div class=uk-margin><label class=uk-form-label for=form-stacked-text>File Type</label><select class=uk-select ng-model=data.fileType><option value=zip>ZIP</option><option value=xml>XML</option></select></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-if="data.fileType == \'zip\'"><div class=pad-left0 uk-lightbox><div ng-if="data.files[0].length > 0"><img src=assets/images/zip.png class=ht100 ng-if="data.files[0].indexOf(\'zip\') != -1"><br><br><span ngf-select=fileUpload($file,0) ng-model=data.files[0] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.files[0] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;<span ng-bind="\'Upload \' + data.fileType.toUpperCase() + \' File\'"></span></span></div></div></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-if="data.fileType == \'xml\'"><div class=pad-left0 uk-lightbox><div ng-if="data.files[0].length > 0"><img src=assets/images/xml.png class=ht100 ng-if="data.files[0].indexOf(\'xml\') != -1"><br><br><span ngf-pattern="\'text/xml\'" ngf-accept="\'text/xml\'" ngf-select=fileUpload($file,0) ng-model=data.files[0] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.files[0] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-pattern="\'text/xml\'" ngf-accept="\'text/xml\'" ngf-select="fileUpload($files, 0)" ng-model=data.files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;<span ng-bind="\'Upload \' + data.fileType.toUpperCase() + \' File\'"></span></span></div></div></div><form class="uk-form-horizontal uk-margin-large"><div class=uk-margin ng-if="data.fileType == \'zip\'"><div><label class=uk-form-label for=form-stacked-text>Zip File Password</label><input class=uk-input type=password ng-model=data.password placeholder="Zip File Password"></div></div><h6 class=uk-text-bold>User Details</h6><div class=uk-margin><div><label for=form-stacked-text>Provide the Aadhaar Offline XML across which data has to matched</label><input class=uk-input type=text ng-model=data.files[0] placeholder="File Link"></div></div><div class="uk-child-width-1-2@s uk-child-width-1-2@m" uk-grid ng-show=data.offlineAadhaarResponse><div><label for=form-stacked-text>Provide the name of the person whose kyc has to be done</label><input class=uk-input type=text ng-model=confObj.users[0].documents[0].data.name placeholder="Name of the User" ng-change="confObj.users[0].documents[0].data.name = confObj.users[0].name"></div><div><label for=form-stacked-text>Provide the email ID of the person whose kyc has to be done</label><input class=uk-input type=email ng-model=confObj.users[0].email placeholder="Email Id of the User"></div></div><!-- <div class="uk-margin">\n                <h7 class="uk-text-bold"  ng-show="data.offlineAadhaarResponse">Offline Aadhaar Details</h7>\n\n            </div> --><div class="uk-child-width-1-2@s uk-child-width-1-2@m" ng-show=data.offlineAadhaarResponse uk-grid><!-- <div>\n                    <label class="" for="form-stacked-text">Name as on Offline Aadhaar</label>\n                    <input class="uk-input"  type="text"  ng-model="confObj.users[0].documents[0].data.name" placeholder="Name as on Offline Aadhaar">\n              </div> --><div><label for=form-stacked-text>Date of Birth as on Offline Aadhaar</label><input class=uk-input type=text ng-model=confObj.users[0].documents[0].data.dob placeholder="Date of Birth as on Offline Aadhaar"></div></div><div class=uk-margin>&nbsp;</div><p uk-margin class=uk-text-center><button class="uk-button uk-button-danger uk-button-medium" ng-click=extractOfflineAadhaar() ng-disabled="data.files.length == 0"><span ng-hide=aadhaarLoading>Extract Offline Aadhaar</span> <span uk-spinner ng-show=aadhaarLoading></span></button> <button class="uk-button uk-button-secondary uk-button-medium" ng-click=createVideoKycRoom() type=submit ng-disabled="!confObj.users[0].name ||!confObj.users[0].email || !confObj.users[0].documents[0].data.name || !confObj.users[0].documents[0].data.dob"><span ng-hide=startLoading>Start</span> <span uk-spinner ng-show=startLoading></span></button> <button class="uk-button uk-button-primary uk-button-medium" ng-disabled=data.stopGetDataButton ng-click=getData()><span ng-hide=loading>Get Data</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="confObj.videoConfResponse && !loading"><div class="uk-child-width-1-2@s uk-child-width-1-2@m" uk-grid ng-show="confObj.videoConfResponse && !loading"><div class=uk-text-center><div class=uk-text-bold>Recorded Video</div><video src={{trustedUrl(confObj.videoConfResponse.users[0].recordedVideoData.videoUrl)}} controls preload=metadata></video></div><div class=uk-text-center><div class=uk-text-bold>Video Thumbnail Image</div><img ng-src={{confObj.videoConfResponse.users[0].recordedVideoData.videoThumbnail}}></div></div></div><div class="uk-card uk-card-body bg-grey" ng-show="confObj.videoConfResponse && !loading"><pre pretty-json=confObj.videoConfResponse></pre></div></div></div>'), e.put("app/forensics/video-verification/gesture-video.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Video Verification</a></h1><p class=uk-text-lead>Video Verification portal</p><p>This gesture based video verification product helps detect liveliness of the user.</p><p>Clients are allowed to <b>choose from the following gestures</b>:</p><div uk-grid class=vv-gesture-gifs-container><div><h3>Blink</h3><img class=vv-gesture-gifs src=assets/video-verification-gifs/blink.gif></div><div><h3>Smile</h3><img class=vv-gesture-gifs src=assets/video-verification-gifs/smile.gif></div><div><h3>Yawn</h3><img class=vv-gesture-gifs src=assets/video-verification-gifs/open-mouth.gif></div><div><h3>Left</h3><img class=vv-gesture-gifs src=assets/video-verification-gifs/left.gif></div><div><h3>Right</h3><img class=vv-gesture-gifs src=assets/video-verification-gifs/right.gif></div></div><p></p><p>The number of actions you require from the chosen set of gestures can be also be customised as can be seen below.</p><h3>Try a live demonstration below</h3><p><ol><li>Upload a file that contains face of person (a selfie, an ID card etc).</li><li>Choose your customizations</li><li>Start the liveliness enabled video verificaton & get match results.</li></ol></p><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0"><div class=pad-left0 uk-lightbox><div ng-if="data.files[0].length > 0"><a class=uk-inline ng-href={{data.files[0]}}><img ng-src={{data.files[0]}} width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') == -1"> </a><span ngf-select=fileUpload($file,0) ng-model=data.files[0] uk-icon="icon: file-edit" class=uk-link ng-if="data.files[0].length > 0">&nbsp;</span> <a ng-click="data.files[0] =\'\'" uk-icon="icon: trash" ng-if="data.files[0].length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.files[0]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload file</span></div></div></div><form class="uk-form-horizontal uk-margin-large"><h3 class=uk-text-bold>Match Image</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Input Image</label><input class=uk-input type=text ng-model=data.files[0] placeholder="Input Image(URL)"></div></div><div class=uk-margin><div><label for=form-stacked-text>Number of Steps (Optional): <span class=uk-text-italic style="font-weight: 500">Use 5 or more steps for higher security.</span></label><select class=uk-select ng-model=data.gestureSequenceLength ng-init="data.gestureSequenceLength = gestureNumberArr[4]">><option ng-value=gestureno ng-repeat="gestureno in gestureNumberArr">{{ gestureno }}</option></select></div></div><div class=uk-margin><label for=form-stacked-text>Gesture types (Required): <span class=uk-text-italic style="font-weight: 500">Use more gesture types for higher security. We recommend using all gestures from below.</span></label></div><div class="scol c100"><div class="scol c100"><div class="scol c20"><input class=uk-checkbox type=checkbox ng-model=blink ng-change="handleArray(\'blink\',blink,\'validGestures\');"><span class=check-pad>BLINK</span></div><div class="scol c20"><input class=uk-checkbox type=checkbox ng-model=smile ng-change="handleArray(\'smile\',smile,\'validGestures\');"><span class=check-pad>SMILE</span></div><div class="scol c20"><input class=uk-checkbox type=checkbox ng-model=yawn ng-change="handleArray(\'yawn\',yawn,\'validGestures\');"><span class=check-pad>YAWN</span></div><div class="scol c20"><input class=uk-checkbox type=checkbox ng-model=left ng-change="handleArray(\'left\',left,\'validGestures\');"><span class=check-pad>LEFT</span></div><div class="scol c20"><input class=uk-checkbox type=checkbox ng-model=right ng-change="handleArray(\'right\',right,\'validGestures\');"><span class=check-pad>RIGHT</span></div></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-click=createGestureUrl() type=submit ng-disabled="data.files.length == 0 || enableStart == false || data.validGestures.length < 1"><span ng-hide=loading>Start</span> <span uk-spinner ng-show=loading></span></button> <button class="uk-button uk-button-primary uk-button-medium" ng-disabled="enableResult == false" ng-click=getData()><span ng-hide=loading1>Result</span> <span uk-spinner ng-show=loading1></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.video && !loading"><p><span class="uk-text-bold uk-text-capitalize" ng-bind="\'Face Match Percentage\' + \':\'"></span><span class=pad-left10 ng-bind=data.video.videoVerification.videoFaceMatch[0].matchStatistics.matchPercentage></span></p><!--   <p>\n                <span class="uk-text-bold uk-text-capitalize" ng-bind="\'Audio Match Score\' + \':\'"></span><span class="pad-left10" ng-bind="data.video.videoVerification.audioMatch.matchAudioScore"></span>\n            </p>\n            <p>\n                <span class="uk-text-bold uk-text-capitalize" ng-bind="\'Static Risk\' + \':\'"></span><span class="pad-left10" ng-bind="data.video.videoVerification.videoForensics.staticRisk"></span>\n            </p>\n            <p>\n                <span class="uk-text-bold uk-text-capitalize" ng-bind="\'Prerecorded Risk\' + \':\'"></span><span class="pad-left10" ng-bind="data.video.videoVerification.videoForensics.prerecordedRisk"></span>\n            </p>\n            <p>\n                <span class="uk-text-bold uk-text-capitalize" ng-bind="\'Liveliness\' + \':\'"></span><span class="pad-left10" ng-bind="data.video.videoVerification.videoForensics.liveliness"></span>\n            </p> --></div><div class="uk-card uk-card-body bg-grey" ng-show="data.video && !loading"><pre pretty-json=data.video></pre></div></div></div>'), e.put("app/forensics/video-verification/video.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Video Verification</a></h1><p class=uk-text-lead>Video Verification portal</p><p>Video Verification product helps you capture video of your user and match against a predefined photograph of the user.</p><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0"><div class=pad-left0 uk-lightbox><div ng-if="data.files[0].length > 0"><a class=uk-inline ng-href={{data.files[0]}}><img ng-src={{data.files[0]}} width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') == -1"> </a><span ngf-select=fileUpload($file,0) ng-model=data.files[0] uk-icon="icon: file-edit" class=uk-link ng-if="data.files[0].length > 0">&nbsp;</span> <a ng-click="data.files[0] =\'\'" uk-icon="icon: trash" ng-if="data.files[0].length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.files[0]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload file</span></div></div></div><form class="uk-form-horizontal uk-margin-large"><h3 class=uk-text-bold>Match Image</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Input Image</label><input class=uk-input type=text ng-model=data.files[0] placeholder="Input Image(URL)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Video Record Time(Optional)</label><select class=uk-select ng-model=data.customVideoRecordTime ng-init="data.customVideoRecordTime = customVideoRecordTimeArr[0]"><option ng-value=customtime ng-repeat="customtime in customVideoRecordTimeArr">{{ customtime }}</option></select></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-click=createUrl() type=submit ng-disabled="data.files.length == 0 || enableStart == false"><span ng-hide=loading>Start</span> <span uk-spinner ng-show=loading></span></button> <button class="uk-button uk-button-primary uk-button-medium" ng-disabled="enableResult == false" ng-click=getData()><span ng-hide=loading1>Result</span> <span uk-spinner ng-show=loading1></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.video && !loading"><p><span class="uk-text-bold uk-text-capitalize" ng-bind="\'Face Match Percentage\' + \':\'"></span><span class=pad-left10 ng-bind=data.video.videoVerification.videoFaceMatch[0].matchStatistics.matchPercentage></span></p><p><span class="uk-text-bold uk-text-capitalize" ng-bind="\'Audio Match Score\' + \':\'"></span><span class=pad-left10 ng-bind=data.video.videoVerification.audioMatch.matchAudioScore></span></p><p><span class="uk-text-bold uk-text-capitalize" ng-bind="\'Static Risk\' + \':\'"></span><span class=pad-left10 ng-bind=data.video.videoVerification.videoForensics.staticRisk></span></p><p><span class="uk-text-bold uk-text-capitalize" ng-bind="\'Prerecorded Risk\' + \':\'"></span><span class=pad-left10 ng-bind=data.video.videoVerification.videoForensics.prerecordedRisk></span></p></div><div class="uk-card uk-card-body bg-grey" ng-show="data.video && !loading"><pre pretty-json=data.video></pre></div></div></div>'), e.put("app/forensics/videoForensics/video-api-mode.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Video Verification</a></h1><p class=uk-text-lead>Video Verification Portal</p><p>A simple API to extract faces from video and conduct video forensics.</p><p>This API takes a video file and performs below analytics:</p><ol><li>Extract face pictures from the video</li><li>Match face images against the video and gives face match score.</li><li>Gives video quality score</li></ol><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0" uk-grid><div class="uk-width-1-2@s pad-left0" uk-lightbox><div ng-if="data.videoUrl.length > 0"><a class=uk-inline ng-href={{data.videoUrl}}><video width=400 height=400 controls preload=metadata><source ng-src={{data.videoUrl}} width=400 height=400 ng-if="data.videoUrl.indexOf(\'webm\') == -1"></video></a><!-- <object data="{{data.videoUrl}}" type="application/pdf" width="400" height="400" ng-if="data.videoUrl.indexOf(\'pdf\') > -1"> --><span ngf-select=fileUploadForVideo($file,0) ng-model=data.videoUrl uk-icon="icon: file-edit" class=uk-link ng-if="data.videoUrl.length > 0">&nbsp;</span> <a ng-click="data.videoUrl =\'\'" uk-icon="icon: trash" ng-if="data.videoUrl.length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.videoUrl.length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUploadForVideo($files, 0)" ng-model=data.videoUrl ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Video file</span></div></div><div class="uk-width-1-2@s pad-left20" uk-lightbox><div ng-if=data.imageUrl><a class=uk-inline ng-href={{data.imageUrl}}><img ng-src={{data.imageUrl}} width=400 height=400 ng-if="data.imageUrl.indexOf(\'pdf\') == -1"></a><object data={{data.imageUrl}} type=application/pdf width=400 height=400 ng-if="data.imageUrl.indexOf(\'pdf\') > -1"></object><span ngf-select=fileUploadForImage($file,1) ng-model=data.imageUrl uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.imageUrl =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.imageUrl><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUploadForImage($files, 1)" ng-model=data.imageUrl ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Image file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=videoApiMode()><h3 class=uk-text-bold>Request Details</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Video Url</label><input class=uk-input type=text ng-model=data.videoUrl placeholder="video url"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Image Url (optional)</label><input class=uk-input type=text ng-model=data.imageUrl placeholder="image url (optional)"><!-- <div class="uk-text-danger" ng-show="wrongInput">Please Enter a valid PAN Number</div> --></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.videoUrl == \'\' || data.imageUrl ==\'\'"><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.result && !loading"><!-- <div  class="responseCard">\n              <p ng-show="true || data.result.verified"><span class="uk-text-bold">Verified: </span> {{data.panVerifiedResponse.verified}}</p>\n              <p ng-show="true || data.panVerifiedResponse.message"><span class="uk-text-bold">Message: </span> {{data.panVerifiedResponse.message}}</p>\n              </div> --><pre pretty-json=data.result></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div>'), e.put("app/forensics/videoLiveliness/video-liveliness.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Video Liveliness</a></h1><p>Video Liveliness checks if the video is authentic and is of an individual and not forged using still images.</p><h3>Video Format</h3><ul><li>Supported video file formats are <b>blob,mp4 and webm</b></li><li>Video length should be less than <b>10</b> seconds</li><li>Video file size should be less than <b>20MB</b></li></ul><h3>Video Recording Instructions</h3><ul><li>Minimum <b>150px X 150px</b> face size is required</li><li>The face should be well lit with <b>~20</b> lux</li><li>Individual should be in the video frame before initial <b>2-3</b> seconds has elapsed or it won\'t work</li><li>Ensure the individual\'s face is in front of camera,the face is closer to the camera and centered (Partial face not accepted)</li><li>Only one individual must be present in the video frame (multiple faces not accepted)</li></ul><h3>Try Video Liveliness API Below by following these steps</h3><ul><li>First Upload a video using the upload video button, skip if you already have a video url</li><li>The video url will automatically be filled if you upload the video using upload video button</li><li>Or you can add url manually</li><li>Click on submit to see the result</li></ul><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0"><div class=pad-left0><div ng-if="data.files[0].length > 0" uk-lightbox><a class=uk-inline href={{data.files[0]}} data-type=video data-caption="Uploaded Video"><video ng-src={{data.files[0]}} width=400 height=400 ng-if=data.files[0]></a><span ngf-select=fileUpload($file,0) ng-model=data.files[0] uk-icon="icon: file-edit" class=uk-link ng-if="data.files[0].length > 0">&nbsp;</span> <a ng-click="data.files[0] =\'\'" uk-icon="icon: trash" ng-if="data.files[0].length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.files[0]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.files[0] ngf-max-size=10MB ngf-drop="" class=uk-link>&nbsp;Upload Video</span></div></div></div><form class="uk-form-horizontal uk-margin-large"><h3 class=uk-text-bold>Video Liveliness</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Input Video URL</label><input class=uk-input type=text ng-model=data.files[0] placeholder="Input Video(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-click=videoLivelinessHandler() type=submit ng-disabled="data.files.length == 0 || enableStart == false"><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.videoLivelinessData && !loading"><p><span class="uk-text-bold uk-text-capitalize" ng-bind="\'Liveliness\' + \':\'"></span><span class=pad-left10 ng-bind="(data.videoLivelinessData.liveliness | uppercase)"></span></p><p><span class="uk-text-bold uk-text-capitalize" ng-bind="\'Confidence Score\' + \':\'"></span><span class=pad-left10 ng-bind=data.videoLivelinessData.confidenceScore></span></p><p><span class="uk-text-bold uk-text-capitalize" ng-bind="\'Status\' + \':\'"></span><span class=pad-left10 ng-bind=data.videoLivelinessData.status></span></p><p><span class="uk-text-bold uk-text-capitalize" ng-bind="\'Message\' + \':\'"></span><span class=pad-left10 ng-bind="(data.videoLivelinessData.message | uppercase)"></span></p></div><div class="uk-card uk-card-body bg-grey" ng-show="data.videoLivelinessData && !loading"><pre pretty-json=data.videoLivelinessData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><pre pretty-json=data.error></pre></div></div>'),
            e.put("app/gstn/gst-extraction/gst-extraction.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>GST certificate extraction</a></h1><p class=uk-text-lead>Auto-reading from GST certificate</p><p>Each <b>pdf</b> should be less than <b>2MB</b>.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0"><div class=pad-left0 uk-lightbox><div ng-if=data.gst_extraction_files[0]><object data={{data.gst_extraction_files[0]}} ngf-pattern="\'application/pdf\'" ngf-accept="\'application/pdf\'" type=application/pdf width=300 height=300 ng-if="data.gst_extraction_files[0].indexOf(\'pdf\') != -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.gst_extraction_files[0] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.gst_extraction_files[0] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.gst_extraction_files[0]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.gst_extraction_files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=extract()><h3 class=uk-text-bold>GST Certificate Details Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>GST Certificate</label><input class=uk-input type=text ng-model=data.gst_extraction_files[0] placeholder="GST Certificate PDF"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.gst_extraction_files.length == 0"><span ng-hide=loading>Extract</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.gstExtractionData && !loading"><pre pretty-json=data.gstExtractionData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div>'), e.put("app/identities/aadhaar/aadhaar-advanceExtraction.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Aadhaar Advanced Extraction</a></h1><p class=uk-text-lead>Auto-reading Aadhaar card</p><p>First upload the two sides of an aadhaar card. Then click on extraction. You may put direct URLs to front and back sides, in case you have them.</p><p>The <b>Auto-Read</b> API prefils verification section. Please <b>validate</b> the data before sending for verification.</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and is horizontally-aligned.</p><p>Each <b>image/pdf</b> should be less than <b>2MB</b>.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0" uk-grid><div class="uk-width-1-2@s pad-left0" uk-lightbox><div ng-if="data.aadhaar_files[0].length > 0"><a class=uk-inline ng-href={{data.aadhaar_files[0]}}><img ng-src={{data.aadhaar_files[0]}} width=400 height=400 ng-if="data.aadhaar_files[0].indexOf(\'pdf\') == -1"></a><object data={{data.aadhaar_files[0]}} type=application/pdf width=400 height=400 ng-if="data.aadhaar_files[0].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.aadhaar_files[0] uk-icon="icon: file-edit" class=uk-link ng-if="data.aadhaar_files[0].length > 0">&nbsp;</span> <a ng-click="data.aadhaar_files[0] =\'\'" uk-icon="icon: trash" ng-if="data.aadhaar_files[0].length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.aadhaar_files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.aadhaar_files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Front file</span></div></div><div class="uk-width-1-2@s pad-left20" uk-lightbox><div ng-if=data.aadhaar_files[1]><a class=uk-inline ng-href={{data.aadhaar_files[1]}}><img ng-src={{data.aadhaar_files[1]}} width=400 height=400 ng-if="data.aadhaar_files[1].indexOf(\'pdf\') == -1"></a><object data={{data.aadhaar_files[1]}} type=application/pdf width=400 height=400 ng-if="data.aadhaar_files[1].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,1) ng-model=data.aadhaar_files[1] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.aadhaar_files[1] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.aadhaar_files[1]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 1)" ng-model=data.aadhaar_files[1] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Back file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=advanceExtract()><h3 class=uk-text-bold>Aadhaar Card Details Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Aadhaar Front Image File</label><input class=uk-input type=text ng-model=data.aadhaar_files[0] placeholder="Aadhaar Card Front Side Image(URL)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Aadhaar Back Image File</label><input class=uk-input type=text ng-model=data.aadhaar_files[1] placeholder="Aadhaar Card Back Side Image(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.aadhaar_files.length < 2"><span ng-hide=loading>Extract</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.aadhaarExtractedResponse && !loading"><div class=responseCard><p ng-show="true || data.aadhaarExtractedResponse.extractionResponse.name"><span class=uk-text-bold>Name: </span>{{data.aadhaarExtractedResponse.extractionResponse.name}}</p><p ng-show="true || data.aadhaarExtractedResponse.extractionResponse.yob"><span class=uk-text-bold>YOB: </span>{{data.aadhaarExtractedResponse.extractionResponse.yob}}</p><p ng-show="true || data.aadhaarExtractedResponse.extractionResponse.pincode"><span class=uk-text-bold>Pincode: </span>{{data.aadhaarExtractedResponse.extractionResponse.pincode}}</p><p ng-show="true || data.aadhaarExtractedResponse.extractionResponse.uid"><span class=uk-text-bold>Number: </span>{{data.aadhaarExtractedResponse.extractionResponse.uid}}</p><p ng-show="true || data.aadhaarExtractedResponse.extractionResponse.dob"><span class=uk-text-bold>DOB: </span>{{data.aadhaarExtractedResponse.extractionResponse.dob}}</p><p ng-show="true || data.aadhaarExtractedResponse.extractionResponse.gender"><span class=uk-text-bold>Gender: </span>{{data.aadhaarExtractedResponse.extractionResponse.gender}}</p><div ng-show=data.aadhaarExtractedResponse.extractionResponse.splitAddress><p ng-show=data.aadhaarExtractedResponse.extractionResponse.splitAddress.district><span class=uk-text-bold>District: </span>{{data.aadhaarExtractedResponse.extractionResponse.splitAddress.district}}</p><p ng-show=data.aadhaarExtractedResponse.extractionResponse.splitAddress.pincode><span class=uk-text-bold>Pincode: </span>{{data.aadhaarExtractedResponse.extractionResponse.splitAddress.pincode}}</p><p ng-show=data.aadhaarExtractedResponse.extractionResponse.splitAddress.state><span class=uk-text-bold>State: </span>{{data.aadhaarExtractedResponse.extractionResponse.splitAddress.state}}</p><p ng-show=data.aadhaarExtractedResponse.extractionResponse.splitAddress.country><span class=uk-text-bold>Country: </span>{{data.aadhaarExtractedResponse.extractionResponse.splitAddress.country[2]}}</p><p ng-show=data.aadhaarExtractedResponse.extractionResponse.splitAddress.addressLine><span class=uk-text-bold>Addressline: </span>{{data.aadhaarExtractedResponse.extractionResponse.splitAddress.addressLine}}</p><hr></div><pre pretty-json=data.aadhaarExtractedResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div></div>'), e.put("app/identities/aadhaar/aadhaar-extraction.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Aadhaar Extraction</a></h1><p class=uk-text-lead>Auto-reading Aadhaar card</p><p>First upload the two sides of an aadhaar card. Then click on extraction. You may put direct URLs to front and back sides, in case you have them.</p><p>The <b>Auto-Read</b> API prefils verification section. Please <b>validate</b> the data before sending for verification.</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and is horizontally-aligned.</p><p>Each <b>image/pdf</b> should be less than <b>2MB</b>.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0" uk-grid><div class="uk-width-1-2@s pad-left0" uk-lightbox><div ng-if="data.aadhaar_files[0].length > 0"><a class=uk-inline ng-href={{data.aadhaar_files[0]}}><img ng-src={{data.aadhaar_files[0]}} width=400 height=400 ng-if="data.aadhaar_files[0].indexOf(\'pdf\') == -1"></a><object data={{data.aadhaar_files[0]}} type=application/pdf width=400 height=400 ng-if="data.aadhaar_files[0].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.aadhaar_files[0] uk-icon="icon: file-edit" class=uk-link ng-if="data.aadhaar_files[0].length > 0">&nbsp;</span> <a ng-click="data.aadhaar_files[0] =\'\'" uk-icon="icon: trash" ng-if="data.aadhaar_files[0].length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.aadhaar_files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.aadhaar_files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Front file</span></div></div><div class="uk-width-1-2@s pad-left20" uk-lightbox><div ng-if=data.aadhaar_files[1]><a class=uk-inline ng-href={{data.aadhaar_files[1]}}><img ng-src={{data.aadhaar_files[1]}} width=400 height=400 ng-if="data.aadhaar_files[1].indexOf(\'pdf\') == -1"></a><object data={{data.aadhaar_files[1]}} type=application/pdf width=400 height=400 ng-if="data.aadhaar_files[1].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,1) ng-model=data.aadhaar_files[1] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.aadhaar_files[1] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.aadhaar_files[1]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 1)" ng-model=data.aadhaar_files[1] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Back file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=extract()><h3 class=uk-text-bold>Aadhaar Card Details Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Aadhaar Front Image File</label><input class=uk-input type=text ng-model=data.aadhaar_files[0] placeholder="Aadhaar Card Front Side Image(URL)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Aadhaar Back Image File</label><input class=uk-input type=text ng-model=data.aadhaar_files[1] placeholder="Aadhaar Card Back Side Image(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.aadhaar_files.length < 2"><span ng-hide=loading>Extract</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.aadhaarExtractedResponse && !loading"><div class=responseCard><p ng-show="true || data.aadhaarExtractedResponse.name"><span class=uk-text-bold>Name: </span>{{data.aadhaarExtractedResponse.name}}</p><p ng-show="true || data.aadhaarExtractedResponse.yob"><span class=uk-text-bold>YOB: </span>{{data.aadhaarExtractedResponse.yob}}</p><p ng-show="true || data.aadhaarExtractedResponse.pincode"><span class=uk-text-bold>Pincode: </span>{{data.aadhaarExtractedResponse.pincode}}</p><p ng-show="true || data.aadhaarExtractedResponse.uid"><span class=uk-text-bold>Number: </span>{{data.aadhaarExtractedResponse.uid}}</p><p ng-show="true || data.aadhaarExtractedResponse.dob"><span class=uk-text-bold>DOB: </span>{{data.aadhaarExtractedResponse.dob}}</p><p ng-show="true || data.aadhaarExtractedResponse.gender"><span class=uk-text-bold>Gender: </span>{{data.aadhaarExtractedResponse.gender}}</p><div ng-show=data.aadhaarExtractedResponse.splitAddress><p ng-show=data.aadhaarExtractedResponse.splitAddress.district><span class=uk-text-bold>District: </span>{{data.aadhaarExtractedResponse.splitAddress.district}}</p><p ng-show=data.aadhaarExtractedResponse.splitAddress.pincode><span class=uk-text-bold>Pincode: </span>{{data.aadhaarExtractedResponse.splitAddress.pincode}}</p><p ng-show=data.aadhaarExtractedResponse.splitAddress.state><span class=uk-text-bold>State: </span>{{data.aadhaarExtractedResponse.splitAddress.state}}</p><p ng-show=data.aadhaarExtractedResponse.splitAddress.country><span class=uk-text-bold>Country: </span>{{data.aadhaarExtractedResponse.splitAddress.country[2]}}</p><p ng-show=data.aadhaarExtractedResponse.splitAddress.addressLine><span class=uk-text-bold>Addressline: </span>{{data.aadhaarExtractedResponse.splitAddress.addressLine}}</p><hr></div><pre pretty-json=data.aadhaarExtractedResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div></div>'), e.put("app/identities/aadhaar/aadhaar-face-extraction.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Aadhaar Face Extraction</a></h1><p>To extract face from a Aadhaar card you need to send the following details. API responds with a url to just the face found from card.</p><br><br><div class="test-upload uk-placeholder uk-text-center mar-0"><div class=pad-left0 uk-lightbox><div ng-if="data.aadhaar_files[0].length > 0"><a class=uk-inline ng-href={{data.aadhaar_files[0]}}><img ng-src={{data.aadhaar_files[0]}} width=400 height=400 ng-if="data.aadhaar_files[0].indexOf(\'pdf\') == -1"></a><object data={{data.aadhaar_files[0]}} type=application/pdf width=400 height=400 ng-if="data.aadhaar_files[0].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.aadhaar_files[0] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.aadhaar_files[0] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.aadhaar_files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.aadhaar_files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Front file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=getFace()><h3 class=uk-text-bold>Aadhaar Card Face Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Aadhaar Front Image File</label><input class=uk-input type=text ng-model=data.aadhaar_files[0] placeholder="Aadhaar Card Front Side Image(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.aadhaar_files.length == 0"><span ng-hide=loading>Extract</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.aadhaaFaceResponse && !loading"><p><center><b>CroppedImage:</b><br><img ng-src={{data.aadhaaFaceResponse.cropped}} class=crop alt=""></center></p><div layout-padding></div><pre pretty-json=data.aadhaaFaceResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div>'), e.put("app/identities/aadhaar/aadhaar-masker.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Aadhaar UID Masker</a></h1><p>To mask UID from a Aadhaar card you need to send the following details. API responds with a url with a Aadhaar image having masked uid.</p><br><br><div class="test-upload uk-placeholder uk-text-center mar-0"><div class=pad-left0 uk-lightbox><div ng-if="data.aadhaar_files[0].length > 0"><a class=uk-inline ng-href={{data.aadhaar_files[0]}}><img ng-src={{data.aadhaar_files[0]}} width=400 height=400 ng-if="data.aadhaar_files[0].indexOf(\'pdf\') == -1"></a><object data={{data.aadhaar_files[0]}} type=application/pdf width=400 height=400 ng-if="data.aadhaar_files[0].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.aadhaar_files[0] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.aadhaar_files[0] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.aadhaar_files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.aadhaar_files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Front file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=getMaskedImage()><h3 class=uk-text-bold>Aadhaar UID Masker</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Aadhaar Front Image File</label><input class=uk-input type=text ng-model=data.aadhaar_files[0] placeholder="Aadhaar Card Front Side Image(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.aadhaar_files.length == 0"><span ng-hide=loading>MASK UID</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.aadhaarMaskedResponse && !loading "><div ng-show="data.aadhaarMaskedResponse.maskedImages && data.aadhaarMaskedResponse.maskedImages.length > 0" class=uk-text-center><b>CroppedImage:</b><br><img ng-src={{data.aadhaarMaskedResponse.maskedImages[0]}} class=crop ng-show="data.aadhaarMaskedResponse.maskedImages && data.aadhaarMaskedResponse.maskedImages.length > 0" alt=""></div><div layout-padding></div><pre pretty-json=data.aadhaarMaskedResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div>'), e.put("app/identities/aadhaar/aadhaar-verification.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Aadhaar Verification</a></h1><p class=uk-text-lead>Verifying Aadhaar card details</p><p>Card details should be manually validated, preferably by the card owner, before sending it for verification. For verification of aadhaar card details, card number is mandatory along with atleast one of the fields from Name.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=verify()><h3 class=uk-text-bold>Aadhaar Card Details Verification</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Name on Aadhaar Card</label><input class=uk-input type=text ng-model=data.verifyData.name placeholder=Name></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>DOB/YOB on Aadhaar Card</label><input class=uk-input type=text ng-model=data.verifyData.yob placeholder=DOB/YOB></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Aadhaar Number on Aadhaar Card</label><input class=uk-input type=text ng-model=data.verifyData.uid placeholder="Aadhaar Number"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Pincode on Aadhaar Card</label><input class=uk-input type=text ng-model=data.verifyData.pincode placeholder=Pincode></div></div><div class=uk-margin><label><input class=uk-checkbox type=checkbox ng-model=consent>&nbsp;&nbsp;I, the Holder of Aadhar number given above, hereby give my consent to Signzy Technologies Private Limited to use my Aadhaar number and demographic details to authenticate whether they are true or not by using the AUA services of Khosla for purpose of establishing identity with UIDAI. I consent that such data post confirmation will be transferred to Client for further processing my onboarding application for their product and will not be stored or shared in any other manner by Signzy Technologies Private Limited.</label></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="!consent || data.verifyData.uid.length !=12"><span ng-hide=loading>Verify</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.aadhaarVerifiedResponse && !loading"><div class=responseCard><p ng-show="true || data.aadhaarVerifiedResponse.verified"><span class=uk-text-bold>Verified: </span>{{data.aadhaarVerifiedResponse.verified}}</p><p ng-show="true || data.aadhaarVerifiedResponse.message"><span class=uk-text-bold>Message: </span>{{data.aadhaarVerifiedResponse.message}}</p><p ng-show=data.aadhaarVerifiedResponse.aadhaarMessage><span class=uk-text-bold>aadhaarMessage: </span>{{data.aadhaarVerifiedResponse.aadhaarMessage}}</p><p ng-show=data.aadhaarVerifiedResponse.aadhaarReferenceCode><span class=uk-text-bold>aadhaarReferenceCode: </span>{{data.aadhaarVerifiedResponse.aadhaarReferenceCode}}</p></div><pre pretty-json=data.aadhaarVerifiedResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div>'), e.put("app/identities/aadhaar/basic-verify-aadhaar.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Verify Aadhaar(Basic)</a></h1><p class=uk-text-lead>Verifying Aadhaar Number (Basic)</p><p>Identify whether a given aadhaar number is valid or not.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=basicVerifyAadhaar()><h3 class=uk-text-bold>Basic Verify Aadhaar</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>UID Number</label><input class=uk-input type=text ng-model=data.verifyData.uid placeholder="UID Number"><div class=uk-text-danger ng-show=wrongInput>Please Enter a valid UID Number</div></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=" data.verifyData.number ==\'\'"><span ng-hide=loading>Verify</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.basicVerifyAadhaarResponse && !loading"><div class=responseCard><p ng-show=true><span class=uk-text-bold>Valid: </span>{{data.basicVerifyAadhaarResponse.verified}}</p></div><pre pretty-json=data.basicVerifyAadhaarResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div>'), e.put("app/identities/aadhaar/offline-aadhaar.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Offline Aadhaar XML Extraction</a></h1><p>To read XML file of a Offline Aadhaar you need to send the following details. API responds with a json object.</p><br><br><form class="uk-form-horizontal uk-margin-large" ng-submit=offlineAadhaar()><h3 class=uk-text-bold>Offline Aadhaar XML Extraction</h3><div class=uk-margin><label class=uk-form-label for=form-stacked-text>File Type</label><select class=uk-select ng-model=data.fileType ng-change="data.aadhaar_files = []"><option value=zip>ZIP</option><option value=xml>XML</option></select></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-if="data.fileType == \'zip\'"><div class=pad-left0 uk-lightbox><div ng-if="data.aadhaar_files[0].length > 0"><img src=assets/images/zip.png class=ht100 ng-if="data.aadhaar_files[0].indexOf(\'zip\') != -1"><br><br><span ngf-select=fileUpload($file,0) ngf-max-size=100MB ng-model=data.aadhaar_files[0] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.aadhaar_files[0] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.aadhaar_files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ngf-max-size=100MB ng-model=data.aadhaar_files[0] ngf-drop="" class=uk-link>&nbsp;<span ng-bind="\'Upload \' + data.fileType.toUpperCase() + \' File\'"></span></span></div></div></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-if="data.fileType == \'xml\'"><div class=pad-left0 uk-lightbox><div ng-if="data.aadhaar_files[0].length > 0"><img src=assets/images/xml.png class=ht100 ng-if="data.aadhaar_files[0].indexOf(\'xml\') != -1"><br><br><span ngf-pattern="\'text/xml\'" ngf-accept="\'text/xml\'" ngf-select=fileUpload($file,0) ng-model=data.aadhaar_files[0] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.aadhaar_files[0] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.aadhaar_files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-pattern="\'text/xml\'" ngf-accept="\'text/xml\'" ngf-select="fileUpload($files, 0)" ng-model=data.aadhaar_files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;<span ng-bind="\'Upload \' + data.fileType.toUpperCase() + \' File\'"></span></span></div></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text><span ng-bind="\'Aadhaar \' + data.fileType.toUpperCase() + \' File\'"></span></label><input class=uk-input type=text ng-model=data.aadhaar_files[0] placeholder=File(URL)></div></div><div class=uk-margin ng-if="data.fileType == \'zip\'"><div><label class=uk-form-label for=form-stacked-text>Zip File Password</label><input class=uk-input type=password ng-model=data.password placeholder="Zip File Password"></div><div><label class=uk-form-label for=form-stacked-text>Email</label><input class=uk-input type=email ng-model=data.email placeholder="Email ID"></div><div><label class=uk-form-label for=form-stacked-text>Mobile</label><input class=uk-input type=text maxlength=10 ng-model=data.mobile placeholder="Mobile Number"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.aadhaar_files.length == 0 || (data.fileType == \'zip\' && data.password.length == 0)"><span ng-hide=loading>Extract</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.offlineAadhaarResponse && !loading"><div class=marb50><center><b>CroppedImage:</b><br><img ng-src={{data.offlineAadhaarResponse.photo}} class=crop alt=""></center></div><div class=responseCard><p ng-show="true || data.offlineAadhaarResponse.x509Data.validAadhaarDSC"><span class=uk-text-bold>Valid Aadhaar DSC: </span>{{data.offlineAadhaarResponse.x509Data.validAadhaarDSC}}</p><p ng-show="true || data.offlineAadhaarResponse.name"><span class=uk-text-bold>Name: </span>{{data.offlineAadhaarResponse.name}}</p><p ng-show="true || data.offlineAadhaarResponse.gender"><span class=uk-text-bold>Gender: </span>{{data.offlineAadhaarResponse.gender}}</p><p ng-show="true || data.offlineAadhaarResponse.dob"><span class=uk-text-bold>DOB: </span>{{data.offlineAadhaarResponse.dob}}</p><p ng-show="true || data.offlineAadhaarResponse.address"><span class=uk-text-bold>YOB: </span>{{data.offlineAadhaarResponse.yob}}</p><p ng-show="true || data.offlineAadhaarResponse.emailHash"><span class=uk-text-bold>EmailHash: </span>{{data.offlineAadhaarResponse.emailHash}}</p><p ng-show="true || data.offlineAadhaarResponse.mobileNoHash"><span class=uk-text-bold>Mobile Number Hash: </span>{{data.offlineAadhaarResponse.mobileNoHash}}</p><div ng-show=data.offlineAadhaarResponse.splitAddress><p ng-show=data.offlineAadhaarResponse.splitAddress.district><span class=uk-text-bold>District: </span>{{data.offlineAadhaarResponse.splitAddress.district}}</p><p ng-show=data.offlineAadhaarResponse.splitAddress.pincode><span class=uk-text-bold>Pincode: </span>{{data.offlineAadhaarResponse.splitAddress.pincode}}</p><p ng-show=data.offlineAadhaarResponse.splitAddress.state><span class=uk-text-bold>State: </span>{{data.offlineAadhaarResponse.splitAddress.state}}</p><p ng-show=data.offlineAadhaarResponse.splitAddress.country><span class=uk-text-bold>Country: </span>{{data.offlineAadhaarResponse.splitAddress.country[2]}}</p><p ng-show=data.offlineAadhaarResponse.splitAddress.addressLine><span class=uk-text-bold>Addressline: </span>{{data.offlineAadhaarResponse.splitAddress.addressLine}}</p><hr></div><pre pretty-json=data.offlineAadhaarResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div></div>'), e.put("app/identities/aadhaar/qr-decoder.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Aadhaar QR Extraction</a></h1><p>To read QR of a Aadhaar card you need to send the following details. API responds with a json object.</p><br><br><div class="test-upload uk-placeholder uk-text-center mar-0"><div class=pad-left0 uk-lightbox><div ng-if="data.aadhaar_files[0].length > 0"><a class=uk-inline ng-href={{data.aadhaar_files[0]}}><img ng-src={{data.aadhaar_files[0]}} width=400 height=400 ng-if="data.aadhaar_files[0].indexOf(\'pdf\') == -1"></a><object data={{data.aadhaar_files[0]}} type=application/pdf width=400 height=400 ng-if="data.aadhaar_files[0].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.aadhaar_files[0] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.aadhaar_files[0] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.aadhaar_files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.aadhaar_files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Front file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=decodeQR()><h3 class=uk-text-bold>Aadhaar Card QR Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Aadhaar Front Image File</label><input class=uk-input type=text ng-model=data.aadhaar_files[0] placeholder="Aadhaar Card Front Side Image(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.aadhaar_files.length == 0"><span ng-hide=loading>Decode</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.aadhaarQRResponse && !loading"><div class=responseCard><p ng-show="true || data.aadhaarQRResponse.uid"><span class=uk-text-bold>Number: </span>{{data.aadhaarQRResponse.uid}}</p><p ng-show="true || data.aadhaarQRResponse.name"><span class=uk-text-bold>Name: </span>{{data.aadhaarQRResponse.name}}</p><p ng-show="true || data.aadhaarQRResponse.gender"><span class=uk-text-bold>Gender: </span>{{data.aadhaarQRResponse.gender}}</p><p ng-show="true || data.aadhaarQRResponse.yob"><span class=uk-text-bold>YOB: </span>{{data.aadhaarQRResponse.yob}}</p><p ng-show="true || data.aadhaarQRResponse.address"><span class=uk-text-bold>YOB: </span>{{data.aadhaarQRResponse.address}}</p><div ng-show=data.aadhaarQRResponse.splitAddress><p ng-show=data.aadhaarQRResponse.splitAddress.district><span class=uk-text-bold>District: </span>{{data.aadhaarQRResponse.splitAddress.district}}</p><p ng-show=data.aadhaarQRResponse.splitAddress.pincode><span class=uk-text-bold>Pincode: </span>{{data.aadhaarQRResponse.splitAddress.pincode}}</p><p ng-show=data.aadhaarQRResponse.splitAddress.state><span class=uk-text-bold>State: </span>{{data.aadhaarQRResponse.splitAddress.state}}</p><p ng-show=data.aadhaarQRResponse.splitAddress.country><span class=uk-text-bold>Country: </span>{{data.aadhaarQRResponse.splitAddress.country[2]}}</p><p ng-show=data.aadhaarQRResponse.splitAddress.addressLine><span class=uk-text-bold>Addressline: </span>{{data.aadhaarQRResponse.splitAddress.addressLine}}</p><hr></div><pre pretty-json=data.aadhaarQRResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div></div>'),
            e.put("app/identities/aadhaar/verify-aadhaar-async.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Verify Aadhaar (Async)</a></h1><p class=uk-text-lead>Verifying Aadhaar Number (Async)</p><p>Identify whether a given aadhaar number is valid or not.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=verifyAadhaarAsyncId()><h3 class=uk-text-bold>Generate Request Id for Async Aadhaar</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>UID Number</label><input class=uk-input type=text ng-model=data.verifyData.uid placeholder="UID Number"><div class=uk-text-danger ng-show=wrongInput>Please Enter a valid UID Number</div></div><div><label class=uk-form-label for=form-stacked-text>Callback URL</label><input class=uk-input type=text ng-model=data.verifyData.callbackUrl placeholder="Callback URL"><div class=uk-text-danger ng-show=wrongInputCallBack>Please Enter a valid Callback Url</div></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=" data.verifyData.number ==\'\'"><span ng-hide=loading>Get Request Id</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.verifyAadhaarAsyncIdResponse && !loading"><div class=responseCard><p ng-show=true><span class=uk-text-bold>Request Id: </span>{{data.verifyAadhaarAsyncIdResponse.requestId}}</p></div><pre pretty-json=data.verifyAadhaarAsyncIdResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div><div><form class="uk-form-horizontal uk-margin-large" ng-submit=verifyAadhaarAsyncData()><h3 class=uk-text-bold>Get Status from Request Id</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Request Id</label><input class=uk-input type=text ng-model=data.verifyData.requestId placeholder="Request Id"><div class=uk-text-danger ng-show=wrongInputData>Please Enter a valid Request Id</div></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.verifyData.requestId ==\'\'"><span ng-hide=loading>Get Status</span> <span uk-spinner ng-show=loadingData></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.verifyAadhaarAsyncDataResponse && !loading"><div class=responseCard><p ng-show=true><span class=uk-text-bold>Response: </span>{{data.verifyAadhaarAsyncDataResponse}}</p></div><pre pretty-json=data.verifyAadhaarAsyncDataResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.errorData && !loading"><div class=responseCard><pre pretty-json=data.errorData></pre></div></div>'), e.put("app/identities/aadhaar/verify-aadhaar.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Verify Aadhaar</a></h1><p class=uk-text-lead>Verifying Aadhaar Number</p><p>Identify whether a given aadhaar number is valid or not.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=verifyAadhaar()><h3 class=uk-text-bold>Verify Aadhaar</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>UID Number</label><input class=uk-input type=text ng-model=data.verifyData.uid placeholder="UID Number"><div class=uk-text-danger ng-show=wrongInput>Please Enter a valid UID Number</div></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=" data.verifyData.number ==\'\'"><span ng-hide=loading>Verify</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.verifyAadhaarResponse && !loading"><div class=responseCard><p ng-show=true><span class=uk-text-bold>Verified: </span>{{data.verifyAadhaarResponse.verified}}</p><p ng-show=true><span class=uk-text-bold>Age Band: </span>{{data.verifyAadhaarResponse.ageBand}}</p><p ng-show=true><span class=uk-text-bold>State: </span>{{data.verifyAadhaarResponse.state}}</p><p ng-show=true><span class=uk-text-bold>Mobile Number: </span>{{data.verifyAadhaarResponse.mobileNumber}}</p><p ng-show=true><span class=uk-text-bold>Gender: </span>{{data.verifyAadhaarResponse.gender}}</p></div><pre pretty-json=data.verifyAadhaarResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div>'), e.put("app/identities/aadhaar-auth/aadhaarauth.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Aadhaar Auth Portal</a></h1><p>Aadhaar Auth product helps you verify Aaadhaar Number of the user by sending OTP to his mobile and then asking hime to enter the OTP back in the portal and in turn verifying the Aadhaar UID verification.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=createUrl()><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium"><span ng-hide=loading>Start Aadhaar Auth</span> <span uk-spinner ng-show=loading></span></button></p></form><div class="uk-card uk-card-body bg-grey" ng-show="data.aadhaarAuth && !loading"><p ng-repeat="(key,value) in data.aadhaarAuth.AuthVerification" ng-hide="key == \'splitAddress\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.aadhaarAuth></pre></div></div></div>'), e.put("app/identities/bankStatement/bankStatement-analytics.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Bank Statement Basic Analytics</a></h1><p class=uk-text-lead>Bank Statement Basic Analytics</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0"><div class=pad-left0 uk-lightbox><div ng-if=data.analytics.urls><object data={{data.analytics.urls}} ngf-pattern="\'application/pdf\'" ngf-accept="\'application/pdf\'" type=application/pdf width=300 height=300 ng-if="data.analytics.urls.indexOf(\'pdf\') != -1"></object><span ngf-select="fileUpload($file, 1)" ng-model=data.analytics.urls uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.analytics.urls =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.analytics.urls><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 1)" ng-model=data.analytics.urls ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=analytics()><h3 class=uk-text-bold>Bank Statement Basic Analytics</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Bank Statement PDF URL</label><input class=uk-input type=text ng-model=data.analytics.urls placeholder="Bank Statement PDF(URL)" required></div></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Type</label><select class=uk-select ng-model=data.analytics.type><option value=individual>Individual</option><option value=corporate>Corporate</option></select></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Bank Name</label><input class=uk-input type=text ng-model=data.analytics.bankName ng-change=queryBankCode() placeholder="Enter Bank Name" autocomplete=off><ul ng-show=data.analytics.bankList class="uk-list uk-list-striped"><li ng-repeat="bank in data.analytics.bankList" ng-click=setCode(bank) style=text-decoration:none;color:grey ng-bind=bank.name></li></ul></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Password</label><input class=uk-input type=text ng-model=data.analytics.password placeholder="Password to open PDFs"></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.analytics.urls == \'\' || data.analytics.type == \'\' || data.analytics.bankCode == \'\'"><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.analyticsResponse && !loading"><pre pretty-json=data.analyticsResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div>'), e.put("app/identities/bankStatement/bankStatement-details.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Bank Statement Basic Details</a></h1><p class=uk-text-lead>Bank Statement Basic Details</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0"><div class=pad-left0 uk-lightbox><div ng-if=data.details.url><object data={{data.details.url}} ngf-pattern="\'application/pdf\'" ngf-accept="\'application/pdf\'" type=application/pdf width=300 height=300 ng-if="data.details.url.indexOf(\'pdf\') != -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.details.url uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.details.url =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.details.url><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.details.url ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=details()><h3 class=uk-text-bold>Bank Statement Basic Details</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Bank Statement PDF URL</label><input class=uk-input type=text ng-model=data.details.url placeholder="Bank Statement PDF(URL)" required></div></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Password</label><input class=uk-input type=text ng-model=data.details.password placeholder="Password to open PDF"></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.details.url == \'\'"><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.detailsResponse && !loading"><pre pretty-json=data.detailsResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div>'), e.put("app/identities/bankStatement/bankStatement-supportedBanks.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Bank Statement Basic Analytics</a></h1><p class=uk-text-lead>Bank Statement Basic Analytics Supported Banks</p><form class="uk-form-horizontal uk-margin-large" ng-submit="bankList=true"><p>Click the <b>View</b> button to see the supported banks of Bank Statement Basic Analytics</p><br><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium"><span>View</span></button></p></form><hr class=uk-margin><div ng-show=bankList><h3>List of Supported Banks</h3><table class="uk-table uk-table-responsive uk-table-divider uk-table-striped uk-table-hover"><thead><tr><th class="font16 text-black"><b>Bank Code</b></th><th class="font16 text-black"><b>Name of the Bank</b></th></tr></thead><tbody><tr class=colour-hover ng-repeat="bank in supportedBanks"><td ng-bind=bank.code></td><td ng-bind=bank.name></td></tr></tbody></table></div></div></div>'), e.put("app/identities/business-pan/pan-advance-verification.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Business PAN Advance Verification</a></h1><p class=uk-text-lead>Verifying PAN card details</p><p>Card details should be manually validated, preferably by the card owner, before sending it for verification. For verification of PAN card details, card number is mandatory along with atleast one of the fields from Name.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=advanceVerification()><h3 class=uk-text-bold>PAN Card Details Advance Verification</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>PAN Number</label><input class=uk-input type=text ng-model=data.verifyData.number placeholder="PAN Number"><div class=uk-text-danger ng-show=wrongInput>Please Enter a valid PAN Number</div></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Name on PAN Card</label><input class=uk-input type=text ng-model=data.verifyData.name placeholder=Name></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Date of Issue on PAN Card</label><input class=uk-input type=text ng-model=data.verifyData.dateOfIssue placeholder="Date of Issue"></div></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Fuzzy Required</label><select class=uk-select ng-model=data.verifyData.fuzzy><option value=true>TRUE</option><option value=false>FALSE</option></select></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.verifyData.number ==\'\'"><span ng-hide=loading>Verify</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.panVerifiedResponse && !loading"><pre pretty-json=data.panVerifiedResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div>'), e.put("app/identities/business-pan/pan-advanceExtraction.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Business PAN Advanced Extraction</a></h1><p class=uk-text-lead>Auto-reading PAN card</p><p>First upload the front sides of a PAN card. Then click on extraction. You may put direct URL to front side if you have one.</p><p>The <b>Auto-Read</b> API prefils verification section. Please <b>validate</b> the data before sending for verification.</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and is horizontally-aligned.</p><p>Each <b>image/pdf</b> should be less than <b>2MB</b>.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0"><div class=pad-left0 uk-lightbox><div ng-if=data.pan_files[0]><a class=uk-inline ng-href={{data.pan_files[0]}}><img width=300 ng-src={{data.pan_files[0]}} max-width=50%; height="" alt="" ng-if="data.pan_files[0].indexOf(\'pdf\') == -1"></a><object data={{data.pan_files[0]}} type=application/pdf width=300 height=300 ng-if="data.pan_files[0].indexOf(\'pdf\') != -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.pan_files[0] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.pan_files[0] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.pan_files[0]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.pan_files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=advanceExtract()><h3 class=uk-text-bold>PAN Card Details Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>PAN Image File</label><input class=uk-input type=text ng-model=data.pan_files[0] placeholder="PAN Card Image(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.pan_files.length == 0"><span ng-hide=loading>Extract</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.panExtractedResponse && !loading"><div class=responseCard><p ng-show="true || data.panExtractedResponse.extractionResponse.name"><span class=uk-text-bold>Name: </span>{{data.panExtractedResponse.extractionResponse.name}}</p><p ng-show="true || data.panExtractedResponse.extractionResponse.fatherName"><span class=uk-text-bold>Date of Issue: </span>{{data.panExtractedResponse.extractionResponse.dateOfIssue}}</p><p ng-show="true || data.panExtractedResponse.extractionResponse.number"><span class=uk-text-bold>Number: </span>{{data.panExtractedResponse.extractionResponse.number}}</p><pre pretty-json=data.panExtractedResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div></div>'), e.put("app/identities/business-pan/pan-epan.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>E-PAN Extraction</a></h1><p>To read XML or PDF file of a E-PAN you need to send the following details. API responds with a json object.</p><br><br><form class="uk-form-horizontal uk-margin-large" ng-submit=ePANExtraction()><h3 class=uk-text-bold>EPAN Extraction</h3><div class=uk-margin><label class=uk-form-label for=form-stacked-text>File Type</label><select class=uk-select ng-model=data.fileType ng-change="data.pan_files = []"><option value=zip>ZIP</option><option value=xml>XML</option><option value=pdf>PDF</option></select></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-if="data.fileType == \'zip\'"><div class=pad-left0 uk-lightbox><div ng-if="data.pan_files[0].length > 0"><img src=assets/images/zip.png class=ht100 ng-if="data.pan_files[0].indexOf(\'zip\') != -1"><br><br><span ngf-select=fileUpload($file,0) ng-model=data.pan_files[0] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.pan_files[0] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.pan_files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.pan_files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;<span ng-bind="\'Upload \' + data.fileType.toUpperCase() + \' File\'"></span></span></div></div></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-if="data.fileType == \'xml\'"><div class=pad-left0 uk-lightbox><div ng-if="data.pan_files[0].length > 0"><img src=assets/images/xml.png class=ht100 ng-if="data.pan_files[0].indexOf(\'xml\') != -1"><br><br><span ngf-pattern="\'text/xml\'" ngf-accept="\'text/xml\'" ngf-select=fileUpload($file,0) ng-model=data.pan_files[0] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.pan_files[0] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.pan_files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-pattern="\'text/xml\'" ngf-accept="\'text/xml\'" ngf-select="fileUpload($files, 0)" ng-model=data.pan_files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;<span ng-bind="\'Upload \' + data.fileType.toUpperCase() + \' File\'"></span></span></div></div></div><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0" ng-if="data.fileType == \'pdf\'"><div class=pad-left0 uk-lightbox><div ng-if=data.pan_files[0]><a class=uk-inline ng-href={{data.pan_files[0]}}><img width=300 ng-src={{data.pan_files[0]}} max-width=50%; height="" alt="" ng-if="data.pan_files[0].indexOf(\'pdf\') == -1"></a><object data={{data.pan_files[0]}} type=application/pdf width=300 height=300 ng-if="data.pan_files[0].indexOf(\'pdf\') != -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.pan_files[0] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.pan_files[0] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.pan_files[0]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.pan_files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload PDF file</span></div></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text><span ng-bind="\'Business PAN \' + data.fileType.toUpperCase() + \' File\'"></span></label><input class=uk-input type=text ng-model=data.pan_files[0] placeholder=File(URL)></div></div><div class=uk-margin ng-if="data.fileType == \'zip\' || data.fileType == \'pdf\'"><div><label class=uk-form-label for=form-stacked-text>File Password</label><input class=uk-input type=password ng-model=data.password placeholder="File Password"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.pan_files.length == 0 || (data.fileType == \'zip\' && data.password.length == 0) ||  (data.fileType == \'pdf\' && data.password.length == 0)"><span ng-hide=loading>Extract</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.ePanResponse && !loading"><div class=marb50><center><b>CroppedImage:</b><br><img ng-src={{data.ePanResponse.photo}} class=crop alt=""></center></div><div class=responseCard><p ng-show="true || data.ePanResponse.isValidEPANDSC"><span class=uk-text-bold>Valid ePAN DSC: </span>{{data.ePanResponse.isValidEPANDSC.toString()}}</p><p ng-show="true || data.ePanResponse.name"><span class=uk-text-bold>Name: </span>{{data.ePanResponse.name}}</p><p ng-show="true || data.ePanResponse.gender"><span class=uk-text-bold>Gender: </span>{{data.ePanResponse.gender}}</p><p ng-show="true || data.ePanResponse.dob"><span class=uk-text-bold>DOB: </span>{{data.ePanResponse.dob}}</p><pre pretty-json=data.ePanResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div></div>'), e.put("app/identities/business-pan/pan-extraction.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Business PAN Extraction</a></h1><p class=uk-text-lead>Auto-reading PAN card</p><p>First upload the front sides of a PAN card. Then click on extraction. You may put direct URL to front side if you have one.</p><p>The <b>Auto-Read</b> API prefils verification section. Please <b>validate</b> the data before sending for verification.</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and is horizontally-aligned.</p><p>Each <b>image/pdf</b> should be less than <b>2MB</b>.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0"><div class=pad-left0 uk-lightbox><div ng-if=data.pan_files[0]><a class=uk-inline ng-href={{data.pan_files[0]}}><img width=300 ng-src={{data.pan_files[0]}} max-width=50%; height="" alt="" ng-if="data.pan_files[0].indexOf(\'pdf\') == -1"></a><object data={{data.pan_files[0]}} type=application/pdf width=300 height=300 ng-if="data.pan_files[0].indexOf(\'pdf\') != -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.pan_files[0] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.pan_files[0] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.pan_files[0]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.pan_files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=extract()><h3 class=uk-text-bold>PAN Card Details Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>PAN Image File</label><input class=uk-input type=text ng-model=data.pan_files[0] placeholder="PAN Card Image(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.pan_files.length == 0"><span ng-hide=loading>Extract</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.panExtractedResponse && !loading"><div class=responseCard><p ng-show="true || data.panExtractedResponse.name"><span class=uk-text-bold>Name: </span>{{data.panExtractedResponse.name}}</p><p ng-show="true || data.panExtractedResponse.fatherName"><span class=uk-text-bold>Date of Issue: </span>{{data.panExtractedResponse.dateOfIssue}}</p><p ng-show="true || data.panExtractedResponse.number"><span class=uk-text-bold>Number: </span>{{data.panExtractedResponse.number}}</p><pre pretty-json=data.panExtractedResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div></div>'), e.put("app/identities/business-pan/pan-fetch.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>PAN Fetch</a></h1><p class=uk-text-lead>Fetching PAN card details</p><p>Fetch name, Date of Issue from PAN</p><form class="uk-form-horizontal uk-margin-large" ng-submit=fetch()><h3 class=uk-text-bold>PAN Card Details Fetch</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>PAN Number</label><input class=uk-input type=text ng-model=data.verifyData.number placeholder="PAN Number"><div class=uk-text-danger ng-show=wrongInput>Please Enter a valid PAN Number</div></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=" data.verifyData.number ==\'\'"><span ng-hide=loading>Verify</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.panFetchResponse && !loading"><div class=responseCard><p ng-show="true || data.panFetchResponse.name"><span class=uk-text-bold>Name: </span>{{data.panFetchResponse.name}}</p><p ng-show="true || data.panFetchResponse.dateOfIssue"><span class=uk-text-bold>Date Of Issue: </span>{{data.panFetchResponse.dateOfIssue}}</p><p ng-show="true || data.panFetchResponse.number"><span class=uk-text-bold>PAN: </span>{{data.panFetchResponse.number}}</p></div><pre pretty-json=data.panFetchResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div>'), e.put("app/identities/business-pan/pan-verification.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Business PAN Verification</a></h1><p class=uk-text-lead>Verifying PAN card details</p><p>Card details should be manually validated, preferably by the card owner, before sending it for verification. For verification of PAN card details, card number is mandatory along with atleast one of the fields from Name.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=verify()><h3 class=uk-text-bold>PAN Card Details Verification</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Name on PAN Card</label><input class=uk-input type=text ng-model=data.verifyData.name placeholder=Name></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>PAN Number</label><input class=uk-input type=text ng-model=data.verifyData.number placeholder="PAN Number"><div class=uk-text-danger ng-show=wrongInput>Please Enter a valid PAN Number</div></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.verifyData.name ==\'\' || data.verifyData.number ==\'\'"><span ng-hide=loading>Verify</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.panVerifiedResponse && !loading"><div class=responseCard><p ng-show="true || data.panVerifiedResponse.verified"><span class=uk-text-bold>Verified: </span>{{data.panVerifiedResponse.verified}}</p><p ng-show="true || data.panVerifiedResponse.message"><span class=uk-text-bold>Message: </span>{{data.panVerifiedResponse.message}}</p></div><pre pretty-json=data.panVerifiedResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div>'), e.put("app/identities/businessPanV2/extraction.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Business PAN Extraction</a></h1><p class=uk-text-lead>Auto-reading PAN card</p><p>First upload the front sides of a PAN card. Then click on extraction. You may put direct URL to front side if you have one.</p><p>The <b>Auto-Read</b> API prefils verification section. Please <b>validate</b> the data before sending for verification.</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and is horizontally-aligned.</p><p>Each <b>image/pdf</b> should be less than <b>2MB</b>.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0"><div class=pad-left0 uk-lightbox><div ng-if=data.pan_files[0]><a class=uk-inline ng-href={{data.pan_files[0]}}><img width=300 ng-src={{data.pan_files[0]}} max-width=50%; height="" alt="" ng-if="data.pan_files[0].indexOf(\'pdf\') == -1"></a><object data={{data.pan_files[0]}} type=application/pdf width=300 height=300 ng-if="data.pan_files[0].indexOf(\'pdf\') != -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.pan_files[0] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.pan_files[0] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.pan_files[0]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.pan_files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=extract()><h3 class=uk-text-bold>PAN Card Details Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>PAN Image File</label><input class=uk-input type=text ng-model=data.pan_files[0] placeholder="PAN Card Image(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.pan_files.length == 0"><span ng-hide=loading>Extract</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.panExtractedResponse && !loading"><div class=responseCard><p ng-show="true || data.panExtractedResponse.name"><span class=uk-text-bold>Name: </span>{{data.panExtractedResponse.name}}</p><p ng-show="true || data.panExtractedResponse.fatherName"><span class=uk-text-bold>Date of Issue: </span>{{data.panExtractedResponse.dateOfIssue}}</p><p ng-show="true || data.panExtractedResponse.number"><span class=uk-text-bold>Number: </span>{{data.panExtractedResponse.number}}</p><pre pretty-json=data.panExtractedResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div></div>'),
            e.put("app/identities/businessPanV2/verification.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Business PAN Verification</a></h1><p class=uk-text-lead>Verifying PAN card details</p><p>Card details should be manually validated, preferably by the card owner, before sending it for verification. For verification of PAN card details, card number is mandatory along with atleast one of the fields from Name.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=verify()><h3 class=uk-text-bold>PAN Card Details Verification</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Name on PAN Card</label><input class=uk-input type=text ng-model=data.verifyData.name placeholder=Name></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>PAN Number</label><input class=uk-input type=text ng-model=data.verifyData.number placeholder="PAN Number"><div class=uk-text-danger ng-show=wrongInput>Please Enter a valid PAN Number</div></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.verifyData.name ==\'\' || data.verifyData.number ==\'\'"><span ng-hide=loading>Verify</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.panVerifiedResponse && !loading"><div class=responseCard><p ng-show="true || data.panVerifiedResponse.verified"><span class=uk-text-bold>Verified: </span>{{data.panVerifiedResponse.verified}}</p><p ng-show="true || data.panVerifiedResponse.message"><span class=uk-text-bold>Message: </span>{{data.panVerifiedResponse.message}}</p></div><pre pretty-json=data.panVerifiedResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div>'), e.put("app/identities/ckyc/fetch.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>CKYC Fetch test sandbox</a></h1><form class="uk-form-horizontal uk-margin-large" ng-submit=CKYCFetch() name=CKYCFetchForm><h3 class=uk-text-bold>CKYC Search Request</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>CKYC Number</label><input class=uk-input type=text ng-model=data.fetch.ckycNumber placeholder="CKYC Number" required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Auth Factor Type</label><select class=uk-select ng-model=data.fetch.authFactorType ng-init="data.fetch.authFactorType = allowedAuthFactorTypes[0].authFactorType"><option ng-value=obj.authFactorType ng-repeat="obj in allowedAuthFactorTypes" ng-bind="obj.authFactorType + \' - \' + obj.description"></option></select></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Auth Factor Value</label><input class=uk-input type=text ng-model=data.fetch.authFactorValue placeholder="Auth Factor Value" required></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=CKYCFetchForm.$invalid><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.responseData && !loading"><pre pretty-json=data.responseData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/identities/ckyc/search.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>CKYC Search test sandbox</a></h1><form class="uk-form-horizontal uk-margin-large" ng-submit=CKYCSearch() name=CKYCSearchForm><h3 class=uk-text-bold>CKYC Search Request</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Id Number</label><input class=uk-input type=text ng-model=data.search.idNumber placeholder="Id Number" required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Id Type</label><select class=uk-select ng-model=data.search.idType ng-init="data.search.idType = allowedIdTypes[0].idType"><option ng-value=obj.idType ng-repeat="obj in allowedIdTypes" ng-bind=obj.description></option></select></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=CKYCSearchForm.$invalid><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.responseData && !loading"><pre pretty-json=data.responseData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/identities/digilocker/digilocker-create-url.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>DigiLocker Portal</a></h1><p>Digilocker product helps you to download government issued documents from the DigiLocker with users consent.</p><form class="uk-form-horizontal uk-margin-large" style="display: flex; justify-content: center" ng-submit=createUrl()><!-- <div class="uk-margin uk-grid-small uk-child-width-auto uk-grid">\n                <label class="uk-form-label" for="form-stacked-text" style="margin-top:0">Additional Filters Required</label>\n                <label><input class="uk-radio" type="radio" ng-model="data.additionalFiltersRequired"value="yes" name="radio2"> Yes</label>\n                <label><input class="uk-radio" type="radio" ng-model="data.additionalFiltersRequired"value="no" name="radio2"> No</label>\n            </div> --><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium"><span ng-hide=loading>Open Digilocker IFrame</span> <span uk-spinner ng-show=loading></span></button></p></form><div ng-if=data.iframeUrl>Please complete authentication on the opened window</div></div></div>'), e.put("app/identities/digilocker/digilocker-delete-token.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>DigiLocker Delete Token</a></h1><p>Digilocker product helps you to download government issued documents from the DigiLocker with users consent.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=deleteToken()><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Enter requestId</label><input class=uk-input type=text ng-model=data.requestId placeholder=requestId id=requestId></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium"><span ng-hide=loading>Delete Token</span> <span uk-spinner ng-show=loading></span></button></p></form></div><div class="uk-card uk-margin uk-card-body bg-grey" ng-show="data.digiLockerData && !loading"><div class=responseCard><pre pretty-json=data.digiLockerData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/identities/digilocker/digilocker-fetch-files.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>DigiLocker Portal</a></h1><p>Digilocker product helps you to download government issued documents from the DigiLocker with users consent.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=fetchFiles()><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Request ID</label><input class=uk-input type=text ng-model=data.requestId placeholder=requestId id=requestId></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>DOC Type (Comma separated values)</label><input class=uk-input type=text ng-model=data.docType placeholder=docType id=docType></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium"><span ng-hide=loading>Fetch Files</span> <span uk-spinner ng-show=loading></span></button></p></form></div><div class="uk-card uk-margin uk-card-body bg-grey" ng-show="data.otpResponse && !loading"><div class=responseCard><pre pretty-json=data.otpResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/identities/digilocker/digilocker-generate-otp.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>DigiLocker Portal</a></h1><p>Digilocker product helps you to download government issued documents from the DigiLocker with users consent.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=generateOtp()><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>UID</label><input class=uk-input type=text ng-model=data.uid placeholder=uid id=uid></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium"><span ng-hide=loading>Generate OTP</span> <span uk-spinner ng-show=loading></span></button></p></form></div><div class="uk-card uk-margin uk-card-body bg-grey" ng-show="data.otpResponse && !loading"><div class=responseCard><pre pretty-json=data.otpResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/identities/digilocker/digilocker-get-details.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>DigiLocker Portal</a></h1><p>Digilocker product helps you to download government issued documents from the DigiLocker with users consent.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=getDetails()><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Enter requestId</label><input class=uk-input type=text ng-model=data.requestId placeholder=requestId id=requestId></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium"><span ng-hide=loading>Get documents</span> <span uk-spinner ng-show=loading></span></button></p></form></div><div class="uk-card uk-margin uk-card-body bg-grey" ng-show="data.digiLockerData && !loading"><div class=responseCard><pre pretty-json=data.digiLockerData></pre></div></div><div ng-if=data.digiLockerData><hr><div ng-repeat="file in data.digiLockerData.files" class=uk-margin><div><i class=material-icons>lock_open</i> {{file.name}}<br>Issued On: {{file.date}}<br>Issued By: {{file.issuer}}</div><a class="uk-button uk-button-primary" ng-if=!file.selected ng-click=toggleId(file)>Select For Download</a> <a class="uk-button uk-button-primary" ng-if=file.selected ng-click=toggleId(file)>Unselect For Download</a></div></div><div ng-if="data.selectedFiles.length > 0" class=uk-margin><hr>Selected File IDs<div ng-repeat="fileId in data.selectedFiles" style="padding: 5px; margin-bottom: 5px; background-color:antiquewhite">{{fileId}}</div><div><a class="uk-button uk-button-primary" ng-click=getFiles()>Download Selected Files <span uk-spinner ng-show=loading></span></a></div></div><div class=uk-margin><hr><div ng-repeat="file in data.filesData.files"><a class="uk-button uk-button-primary" ng-if=file.file.pdf href={{file.file.pdf}}>Download PDF</a> <a class="uk-button uk-button-primary" ng-if=file.file.xml href={{file.file.xml}}>Download XML</a></div></div><div class="uk-card uk-margin uk-card-body bg-grey" ng-show="data.filesData && !loading"><div class=responseCard><pre pretty-json=data.filesData></pre></div></div></div>'), e.put("app/identities/digilocker/digilocker-get-eaadhaar.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>DigiLocker Get Eadhaar</a></h1><p>Digilocker product helps you to download government issued documents from the DigiLocker with users consent.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=getEAadhaar()><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Enter requestId</label><input class=uk-input type=text ng-model=data.requestId placeholder=requestId id=requestId></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium"><span ng-hide=loading>Get Eadhaar</span> <span uk-spinner ng-show=loading></span></button></p></form></div><div class="uk-card uk-margin uk-card-body bg-grey" ng-show="data.digiLockerData && !loading"><div class=responseCard><pre pretty-json=data.digiLockerData></pre></div></div></div>'), e.put("app/identities/digilocker/digilocker-get-files.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>DigiLocker Portal</a></h1><p>Digilocker product helps you to download government issued documents from the DigiLocker with users consent.</p><form class="uk-form-horizontal uk-margin-large" ng-submit="data.selectedFiles = data.fileIds.split(\',\'); getFiles()"><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Enter File IDs (comma seperated)</label><input class=uk-input type=text ng-model=data.fileIds placeholder="File IDs" id=fileIds></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium"><span ng-hide=loading>Get documents</span> <span uk-spinner ng-show=loading></span></button></p></form></div><div class="uk-card uk-margin uk-card-body bg-grey" ng-show="data.filesData && !loading"><div class=responseCard><pre pretty-json=data.filesData></pre></div></div></div>'), e.put("app/identities/digilocker/digilocker-get-status.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>DigiLocker Portal</a></h1><p>Digilocker product helps you to download government issued documents from the DigiLocker with users consent.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=getStatus()><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Request ID</label><input class=uk-input type=text ng-model=data.requestId placeholder=requestId id=requestId></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium"><span ng-hide=loading>Get Status</span> <span uk-spinner ng-show=loading></span></button></p></form></div><div class="uk-card uk-margin uk-card-body bg-grey" ng-show="data.otpResponse && !loading"><div class=responseCard><pre pretty-json=data.otpResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/identities/digilocker/digilocker-listofdocuments.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>DigiLocker Portal</a></h1><p>Digilocker product helps you to download government issued documents from the DigiLocker with users consent.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=getListOfDocuments()><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium"><span ng-hide=loading>Get List of Documents</span> <span uk-spinner ng-show=loading></span></button></p></form></div><div class="uk-card uk-margin uk-card-body bg-grey" ng-show="data && !loading"><div class=responseCard><pre pretty-json=data.digiLockerData></pre></div></div></div>'), e.put("app/identities/digilocker/digilocker-pull-document.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>DigiLocker Pull Documents </a></h1><p>Digilocker product helps you to download government issued documents from the DigiLocker with users consent.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=pullDocuments() name=pullDocumentsForm><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Enter requestId</label><input class=uk-input type=text ng-model=data.requestId placeholder=requestId id=requestId required></div><div><label class=uk-form-label for=form-stacked-text>Enter DocType</label><input class=uk-input type=text ng-model=data.docType placeholder=DocType id=docType required></div><div><label class=uk-form-label for=form-stacked-text>Enter Name</label><input class=uk-input type=text ng-model=data.name placeholder=Name id=name required></div><div><label class=uk-form-label for=form-stacked-text>Enter PanNumber</label><input class=uk-input type=text ng-model=data.panNumber placeholder=panNumber id=panNumber required></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=pullDocumentsForm.$invalid><span ng-hide=loading>Pull Document</span> <span uk-spinner ng-show=loading></span></button></p></form></div><div class="uk-card uk-margin uk-card-body bg-grey" ng-show="data.digiLockerData && !loading"><div class=responseCard><pre pretty-json=data.digiLockerData></pre></div></div></div>'), e.put("app/identities/digilocker/digilocker-verify-account.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>DigiLocker Verify Account</a></h1><p>Digilocker product helps you to download government issued documents from the DigiLocker with users consent.<br><br>Either the mobile number or the aadhaar number is taken as input. The input type determines which input is used.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=verifyAccount()><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Input Type</label><select class=uk-select ng-model=data.inputType ng-init="data.inputType = \'\'"><option value=mobileNumber>Mobile Number</option><option value=aadhaarNumber>Aadhaar Number</option></select></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Enter Mobile/Aadhaar Number</label><input class=uk-input type=text ng-model=data.inputNumber placeholder="Mobile Number or Aadhaar Number" id=inputNumber required></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.inputType == \'\'"><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form></div><div class="uk-card uk-margin uk-card-body bg-grey" ng-show="data.digiLockerData && !loading"><div class=responseCard><pre pretty-json=data.digiLockerData></pre></div></div></div>'), e.put("app/identities/digilocker/digilocker-verify-otp.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>DigiLocker Portal</a></h1><p>Digilocker product helps you to download government issued documents from the DigiLocker with users consent.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=verifyOtp()><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Request ID</label><input class=uk-input type=text ng-model=data.requestId placeholder=requestId id=requestId></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>OTP</label><input class=uk-input type=text ng-model=data.otp placeholder=otp id=otp></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium"><span ng-hide=loading>Verify OTP</span> <span uk-spinner ng-show=loading></span></button></p></form></div><div class="uk-card uk-margin uk-card-body bg-grey" ng-show="data.otpResponse && !loading"><div class=responseCard><pre pretty-json=data.otpResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/identities/digilocker/digilocker.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>DigiLocker Portal</a></h1><p>Digilocker product helps you to download government issued documents from the DigiLocker with users consent.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=createUrl()><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium"><span ng-hide=loading>Open Digilocker Portal</span> <span uk-spinner ng-show=loading></span></button></p></form><div class="uk-card uk-card-body bg-grey" ng-show="data.digiLockerData && !loading"><pre pretty-json=data.digiLockerData></pre></div></div></div>'), e.put("app/identities/domainverification/domainverification.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Domain Verification test sandbox</a></h1><p>Try searching for any Web Domain.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=search()><h3 class=uk-text-bold>Web Domain Search</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Domain Name</label><input class=uk-input type=text ng-model=data.webDomain placeholder="Web Domain Name (Eg. signzy.com)"></div></div><!-- <div class="uk-margin">\n                <div>\n                    <label class="uk-form-label" for="form-stacked-text">Negative Words</label>\n                    <textarea class="uk-textarea" ng-model="data.negativeWords" placeholder="Negative Words (Eg. crime,aml)"></textarea>\n                </div>\n            </div> --><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.webDomain ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.webData && !loading"><div class=uk-text-center ng-show="data.webData.wordcloudImage.length > 0"><div class=uk-text-bold>WordCloud Image:</div><img ng-src={{data.webData.wordcloudImage}} class=padtb20></div><div class="uk-text-center padtb20" ng-show="data.webData.negativeWordResult.length > 0"><div class=uk-text-bold>Negative Words Tables:</div><table class="uk-table uk-table-hover uk-table-divider"><thead><tr><th class="uk-text-bold font16">Sl No:</th><th class="uk-text-bold font16">Word</th><th class="uk-text-bold font16">Found</th><th class="uk-text-bold font16">Frequency</th></tr></thead><tbody><tr ng-repeat="negativeWord in data.webData.negativeWordResult"><td class=uk-text-left ng-bind="$index + 1"></td><td class=uk-text-left ng-bind=negativeWord.word></td><td class=uk-text-left ng-bind=negativeWord.frequency></td><td class=uk-text-left ng-bind=negativeWord.found></td></tr></tbody></table></div><pre pretty-json=data.webData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/identities/domainverificationlite/domainverificationlite.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Domain Verification Lite test sandbox</a></h1><p>Try searching for any Web Domain.</p><form class="uk-form-horizontal uk-margin-large" name=webDomainForm><h3 class=uk-text-bold>Web Domain Lite Search</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Web Domain Name</label><input class=uk-input type=text ng-model=data.domain placeholder="Web Domain Name (Eg. signzy.com)" required></div></div><!-- <div class="uk-margin">\n                <div>\n                    <label class="uk-form-label" for="form-stacked-text">Type</label>\n                    <textarea class="uk-textarea" ng-model="data.type"\n                        placeholder="Type of email (Eg. all, personal)"></textarea>\n                </div>\n            </div> --><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=webDomainForm.$invalid ng-click=search()><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.webData && !loading"><pre pretty-json=data.webData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/identities/drivingLicence/driving-licence-advanceExtraction.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Driving Licence Advanced Extraction</a></h1><p class=uk-text-lead>Auto-reading Driving Licence</p><p>First upload the front side of a Driving licence. Then click on extraction. You may put direct URL to front side if you have one.</p><p>The <b>Auto-Read</b> API prefils verification section. Please <b>validate</b> the data before sending for verification.</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and there are no background borders.</p><p>Each <b>image/pdf</b> should be less than <b>2MB</b>.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0"><div class=pad-left0 uk-lightbox><div ng-if=data.dl_files[0]><a class=uk-inline ng-href={{data.dl_files[0]}}><img width=300 ng-src={{data.dl_files[0]}} max-width=50%; height="" alt="" ng-if="data.dl_files[0].indexOf(\'pdf\') == -1"></a><object data={{data.dl_files[0]}} type=application/pdf width=300 height=300 ng-if="data.dl_files[0].indexOf(\'pdf\') != -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.dl_files[0] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.dl_files[0] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.dl_files[0]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.dl_files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=advanceExtract()><h3 class=uk-text-bold>Driving Licence Details Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>DL Image File</label><input class=uk-input type=text ng-model=data.dl_files[0] placeholder="DL Card Image(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.dl_files.length == 0"><span ng-hide=loading>Extract</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.dlExtractedResponse && !loading"><div class=responseCard><div class=responseCard><p ng-show="true || data.dlExtractedResponse.extractionResponse.name"><span class=uk-text-bold>Name: </span>{{data.dlExtractedResponse.extractionResponse.name}}</p><p ng-show="true || data.dlExtractedResponse.extractionResponse.issueDate"><span class=uk-text-bold>Issue Date: </span>{{data.dlExtractedResponse.extractionResponse.issueDate}}</p><p ng-show="true || data.dlExtractedResponse.extractionResponse.dob"><span class=uk-text-bold>DOB: </span>{{data.dlExtractedResponse.extractionResponse.dob}}</p><p ng-show="true || data.dlExtractedResponse.extractionResponse.expiryDate"><span class=uk-text-bold>Expiry Date: </span>{{data.dlExtractedResponse.extractionResponse.expiryDate}}</p><p ng-show="true || data.dlExtractedResponse.extractionResponse.number"><span class=uk-text-bold>DL Number: </span>{{data.dlExtractedResponse.extractionResponse.number}}</p><p ng-show="true || data.dlExtractedResponse.extractionResponse.gaurdianName"><span class=uk-text-bold>Gaurdian Name: </span>{{data.dlExtractedResponse.extractionResponse.gaurdianName}}</p><div ng-show=data.dlExtractedResponse.extractionResponse.splitAddress><p ng-show=data.dlExtractedResponse.extractionResponse.splitAddress.district><span class=uk-text-bold>District: </span>{{data.dlExtractedResponse.extractionResponse.splitAddress.district}}</p><p ng-show=data.dlExtractedResponse.extractionResponse.splitAddress.pincode><span class=uk-text-bold>Pincode: </span>{{data.dlExtractedResponse.extractionResponse.splitAddress.pincode}}</p><p ng-show=data.dlExtractedResponse.extractionResponse.splitAddress.state><span class=uk-text-bold>State: </span>{{data.dlExtractedResponse.extractionResponse.splitAddress.state}}</p><p ng-show=data.dlExtractedResponse.extractionResponse.splitAddress.country><span class=uk-text-bold>Country: </span>{{data.dlExtractedResponse.extractionResponse.splitAddress.country[2]}}</p><p ng-show=data.dlExtractedResponse.extractionResponse.splitAddress.addressLine><span class=uk-text-bold>Addressline: </span>{{data.dlExtractedResponse.extractionResponse.splitAddress.addressLine}}</p><hr></div><pre pretty-json=data.dlExtractedResponse></pre></div></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div></div>'), e.put("app/identities/drivingLicence/driving-licence-extraction-beta.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Driving Licence Extraction<sup>(BETA)</sup></a></h1><p class=uk-text-lead>Auto-reading Driving Licence</p><p>First upload the front side of a Driving licence. Then click on extraction. You may put direct URL to front side if you have one.</p><p>The <b>Auto-Read</b> API prefils verification section. Please <b>validate</b> the data before sending for verification.</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and there are no background borders.</p><p>Each <b>image/pdf</b> should be less than <b>2MB</b>.</p><br><br><!-- <div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0">\n      <div class="pad-left0" uk-lightbox>\n        <div ng-if="data.dl_files[0]">\n          <a class="uk-inline" ng-href="{{data.dl_files[0]}}">\n            <img width="300" ng-src="{{data.dl_files[0]}}" max-width="50%;" height="" alt="" ng-if="data.dl_files[0].indexOf(\'pdf\') == -1" />\n          </a>\n          <object data="{{data.dl_files[0]}}" type="application/pdf" width="300" height="300" ng-if="data.dl_files[0].indexOf(\'pdf\') != -1">\n          </object>\n          <span ngf-select="fileUpload($file,0)" ng-model=\'data.dl_files[0]\' uk-icon="icon: file-edit" class="uk-link">&nbsp;</span>\n          <a ng-click="data.dl_files[0] =\'\'" uk-icon="icon: trash"></a>\n        </div>\n        <div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.dl_files[0]">\n          <span uk-icon="icon: cloud-upload"></span>\n          <span ngf-select=\'fileUpload($files, 0)\' ng-model=\'data.dl_files[0]\' ngf-max-size="20MB" ngf-drop="" class="uk-link">&nbsp;Upload Front file</span>\n        </div>\n\n\n      </div>\n    </div> --><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0" uk-grid><div class="uk-width-1-2@s pad-left0" uk-lightbox><div ng-if="data.dl_files[0].length > 0"><a class=uk-inline ng-href={{data.dl_files[0]}}><img ng-src={{data.dl_files[0]}} width=400 height=400 ng-if="data.dl_files[0].indexOf(\'pdf\') == -1"></a><object data={{data.dl_files[0]}} type=application/pdf width=400 height=400 ng-if="data.dl_files[0].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.dl_files[0] uk-icon="icon: file-edit" class=uk-link ng-if="data.dl_files[0].length > 0">&nbsp;</span> <a ng-click="data.dl_files[0] =\'\'" uk-icon="icon: trash" ng-if="data.dl_files[0].length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.dl_files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.dl_files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Front file</span></div></div><div class="uk-width-1-2@s pad-left20" uk-lightbox><div ng-if=data.dl_files[1]><a class=uk-inline ng-href={{data.dl_files[1]}}><img ng-src={{data.dl_files[1]}} width=400 height=400 ng-if="data.dl_files[1].indexOf(\'pdf\') == -1"></a><object data={{data.dl_files[1]}} type=application/pdf width=400 height=400 ng-if="data.dl_files[1].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,1) ng-model=data.dl_files[1] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.dl_files[1] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.dl_files[1]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 1)" ng-model=data.dl_files[1] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Back file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=extractBeta()><h3 class=uk-text-bold>Driving Licence Details Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>DL Front Image File</label><input class=uk-input type=text ng-model=data.dl_files[0] placeholder="DL Card Front Image(URL)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>DL Back Image File</label><input class=uk-input type=text ng-model=data.dl_files[1] placeholder="DL Card Back Image(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.dl_files.length < 1"><span ng-hide=loading>Extract</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.dlExtractedResponseBeta && !loading"><div class=responseCard><div class=responseCard><p ng-show="true || data.dlExtractedResponseBeta.name"><span class=uk-text-bold>Name: </span>{{data.dlExtractedResponseBeta.name}}</p><p ng-show="true || data.dlExtractedResponseBeta.issueDate"><span class=uk-text-bold>Issue Date: </span>{{data.dlExtractedResponseBeta.issueDate}}</p><p ng-show="true || data.dlExtractedResponseBeta.dob"><span class=uk-text-bold>DOB: </span>{{data.dlExtractedResponseBeta.dob}}</p><p ng-show="true || data.dlExtractedResponseBeta.expiryDate"><span class=uk-text-bold>Expiry Date: </span>{{data.dlExtractedResponseBeta.expiryDate}}</p><p ng-show="true || data.dlExtractedResponseBeta.number"><span class=uk-text-bold>DL Number: </span>{{data.dlExtractedResponseBeta.number}}</p><p ng-show="true || data.dlExtractedResponseBeta.gaurdianName"><span class=uk-text-bold>Gaurdian Name: </span>{{data.dlExtractedResponseBeta.gaurdianName}}</p><div ng-show=data.dlExtractedResponseBeta.splitAddress><p ng-show=data.dlExtractedResponseBeta.splitAddress.district><span class=uk-text-bold>District: </span>{{data.dlExtractedResponseBeta.splitAddress.district}}</p><p ng-show=data.dlExtractedResponseBeta.splitAddress.pincode><span class=uk-text-bold>Pincode: </span>{{data.dlExtractedResponseBeta.splitAddress.pincode}}</p><p ng-show=data.dlExtractedResponseBeta.splitAddress.state><span class=uk-text-bold>State: </span>{{data.dlExtractedResponseBeta.splitAddress.state}}</p><p ng-show=data.dlExtractedResponseBeta.splitAddress.country><span class=uk-text-bold>Country: </span>{{data.dlExtractedResponseBeta.splitAddress.country[2]}}</p><p ng-show=data.dlExtractedResponseBeta.splitAddress.addressLine><span class=uk-text-bold>Addressline: </span>{{data.dlExtractedResponseBeta.splitAddress.addressLine}}</p><hr></div><pre pretty-json=data.dlExtractedResponseBeta></pre></div></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div></div>'),
            e.put("app/identities/drivingLicence/driving-licence-extraction.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Driving Licence Extraction</a></h1><p class=uk-text-lead>Auto-reading Driving Licence</p><p>First upload the front side of a Driving licence. Then click on extraction. You may put direct URL to front side if you have one.</p><p>The <b>Auto-Read</b> API prefils verification section. Please <b>validate</b> the data before sending for verification.</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and there are no background borders.</p><p>Each <b>image/pdf</b> should be less than <b>2MB</b>.</p><br><br><!-- <div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0">\n      <div class="pad-left0" uk-lightbox>\n        <div ng-if="data.dl_files[0]">\n          <a class="uk-inline" ng-href="{{data.dl_files[0]}}">\n            <img width="300" ng-src="{{data.dl_files[0]}}" max-width="50%;" height="" alt="" ng-if="data.dl_files[0].indexOf(\'pdf\') == -1" />\n          </a>\n          <object data="{{data.dl_files[0]}}" type="application/pdf" width="300" height="300" ng-if="data.dl_files[0].indexOf(\'pdf\') != -1">\n          </object>\n          <span ngf-select="fileUpload($file,0)" ng-model=\'data.dl_files[0]\' uk-icon="icon: file-edit" class="uk-link">&nbsp;</span>\n          <a ng-click="data.dl_files[0] =\'\'" uk-icon="icon: trash"></a>\n        </div>\n        <div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.dl_files[0]">\n          <span uk-icon="icon: cloud-upload"></span>\n          <span ngf-select=\'fileUpload($files, 0)\' ng-model=\'data.dl_files[0]\' ngf-max-size="20MB" ngf-drop="" class="uk-link">&nbsp;Upload Front file</span>\n        </div>\n\n\n      </div>\n    </div> --><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0" uk-grid><div class="uk-width-1-2@s pad-left0" uk-lightbox><div ng-if="data.dl_files[0].length > 0"><a class=uk-inline ng-href={{data.dl_files[0]}}><img ng-src={{data.dl_files[0]}} width=400 height=400 ng-if="data.dl_files[0].indexOf(\'pdf\') == -1"></a><object data={{data.dl_files[0]}} type=application/pdf width=400 height=400 ng-if="data.dl_files[0].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.dl_files[0] uk-icon="icon: file-edit" class=uk-link ng-if="data.dl_files[0].length > 0">&nbsp;</span> <a ng-click="data.dl_files[0] =\'\'" uk-icon="icon: trash" ng-if="data.dl_files[0].length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.dl_files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.dl_files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Front file</span></div></div><div class="uk-width-1-2@s pad-left20" uk-lightbox><div ng-if=data.dl_files[1]><a class=uk-inline ng-href={{data.dl_files[1]}}><img ng-src={{data.dl_files[1]}} width=400 height=400 ng-if="data.dl_files[1].indexOf(\'pdf\') == -1"></a><object data={{data.dl_files[1]}} type=application/pdf width=400 height=400 ng-if="data.dl_files[1].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,1) ng-model=data.dl_files[1] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.dl_files[1] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.dl_files[1]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 1)" ng-model=data.dl_files[1] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Back file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=extract()><h3 class=uk-text-bold>Driving Licence Details Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>DL Front Image File</label><input class=uk-input type=text ng-model=data.dl_files[0] placeholder="DL Card Front Image(URL)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>DL Back Image File</label><input class=uk-input type=text ng-model=data.dl_files[1] placeholder="DL Card Back Image(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.dl_files.length < 1"><span ng-hide=loading>Extract</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.dlExtractedResponse && !loading"><div class=responseCard><div class=responseCard><p ng-show="true || data.dlExtractedResponse.name"><span class=uk-text-bold>Name: </span>{{data.dlExtractedResponse.name}}</p><p ng-show="true || data.dlExtractedResponse.issueDate"><span class=uk-text-bold>Issue Date: </span>{{data.dlExtractedResponse.issueDate}}</p><p ng-show="true || data.dlExtractedResponse.dob"><span class=uk-text-bold>DOB: </span>{{data.dlExtractedResponse.dob}}</p><p ng-show="true || data.dlExtractedResponse.expiryDate"><span class=uk-text-bold>Expiry Date: </span>{{data.dlExtractedResponse.expiryDate}}</p><p ng-show="true || data.dlExtractedResponse.number"><span class=uk-text-bold>DL Number: </span>{{data.dlExtractedResponse.number}}</p><p ng-show="true || data.dlExtractedResponse.gaurdianName"><span class=uk-text-bold>Gaurdian Name: </span>{{data.dlExtractedResponse.gaurdianName}}</p><div ng-show=data.dlExtractedResponse.splitAddress><p ng-show=data.dlExtractedResponse.splitAddress.district><span class=uk-text-bold>District: </span>{{data.dlExtractedResponse.splitAddress.district}}</p><p ng-show=data.dlExtractedResponse.splitAddress.pincode><span class=uk-text-bold>Pincode: </span>{{data.dlExtractedResponse.splitAddress.pincode}}</p><p ng-show=data.dlExtractedResponse.splitAddress.state><span class=uk-text-bold>State: </span>{{data.dlExtractedResponse.splitAddress.state}}</p><p ng-show=data.dlExtractedResponse.splitAddress.country><span class=uk-text-bold>Country: </span>{{data.dlExtractedResponse.splitAddress.country[2]}}</p><p ng-show=data.dlExtractedResponse.splitAddress.addressLine><span class=uk-text-bold>Addressline: </span>{{data.dlExtractedResponse.splitAddress.addressLine}}</p><hr></div><pre pretty-json=data.dlExtractedResponse></pre></div></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div></div>'), e.put("app/identities/drivingLicence/driving-licence-face-extraction.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Driving Licence Face Extraction</a></h1><p>To extract face from a Licence card you need to send the following details. API responds with a url to just the face found from card.</p><br><br><div class="test-upload uk-placeholder uk-text-center mar-0"><div class=pad-left0 uk-lightbox><div ng-if="data.dl_files[0].length > 0"><a class=uk-inline ng-href={{data.aadhaar_files[0]}}><img ng-src={{data.dl_files[0]}} width=400 height=400 ng-if="data.dl_files[0].indexOf(\'pdf\') == -1"></a><object data={{data.dl_files[0]}} type=application/pdf width=400 height=400 ng-if="data.dl_files[0].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.dl_files[0] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.dl_files[0] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.dl_files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.dl_files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Front file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=getFace()><h3 class=uk-text-bold>Driving Licence Face Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Driving Licence Image File</label><input class=uk-input type=text ng-model=data.dl_files[0] placeholder="DL Image(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.dl_files.length == 0"><span ng-hide=loading>Extract</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.dlFaceResponse && !loading"><p><center><b>CroppedImage:</b><br><img ng-src={{data.dlFaceResponse.cropped}} class=crop alt=""></center></p><div layout-padding></div><pre pretty-json=data.dlFaceResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/identities/drivingLicence/driving-licence-fetch.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Driving licence Number Based Search</a></h1><p class=uk-text-lead>Get Driving Licence details from DL Number and DOB</p><form class="uk-form-horizontal uk-margin-large" ng-submit=fetch()><h3 class=uk-text-bold>Driving licence Details Search</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>DL Number</label><input class=uk-input type=text ng-model=data.fetchData.number placeholder="DL Number Eg(MP04N20110365695)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Date of Birth</label><input class=uk-input type=text ng-model=data.fetchData.dob placeholder="Date of Birth Eg(dd/mm/yyyy)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.fetchData.number ==\'\'"><span ng-hide=loading>Verify</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.dlFetchResponse && !loading"><div class=marb50 ng-if="data.dlFetchResponse.detailsOfDrivingLicence.photo.length > 0"><center><b>CroppedImage:</b><br><img ng-src={{data.dlFetchResponse.detailsOfDrivingLicence.photo}} class=crop alt=""></center></div><div class=responseCard><p ng-show="true || data.dlFetchResponse.detailsOfDrivingLicence.name"><span class=uk-text-bold>Name: </span>{{data.dlFetchResponse.detailsOfDrivingLicence.name}}</p><p ng-show="true || data.dlFetchResponse.detailsOfDrivingLicence.fatherOrHusbandName"><span class=uk-text-bold>Father/Husband Name: </span>{{data.dlFetchResponse.detailsOfDrivingLicence.fatherOrHusbandName}}</p><p ng-show="true || data.dlFetchResponse.detailsOfDrivingLicence.address"><span class=uk-text-bold>Address: </span>{{data.dlFetchResponse.detailsOfDrivingLicence.address}}</p><div ng-show=data.dlFetchResponse.detailsOfDrivingLicence.splitAddress><p ng-show=data.dlFetchResponse.detailsOfDrivingLicence.splitAddress.district><span class=uk-text-bold>District: </span>{{data.dlFetchResponse.detailsOfDrivingLicence.splitAddress.district}}</p><p ng-show=data.dlFetchResponse.detailsOfDrivingLicence.splitAddress.pincode><span class=uk-text-bold>Pincode: </span>{{data.dlFetchResponse.detailsOfDrivingLicence.splitAddress.pincode}}</p><p ng-show=data.dlFetchResponse.detailsOfDrivingLicence.splitAddress.state><span class=uk-text-bold>State: </span>{{data.dlFetchResponse.detailsOfDrivingLicence.splitAddress.state}}</p><p ng-show=data.dlFetchResponse.detailsOfDrivingLicence.splitAddress.country><span class=uk-text-bold>Country: </span>{{data.dlFetchResponse.detailsOfDrivingLicence.splitAddress.country[2]}}</p><p ng-show=data.dlFetchResponse.detailsOfDrivingLicence.splitAddress.addressLine><span class=uk-text-bold>Addressline: </span>{{data.dlFetchResponse.detailsOfDrivingLicence.splitAddress.addressLine}}</p><hr></div><pre pretty-json=data.dlFetchResponse></pre></div></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div>'), e.put("app/identities/drivingLicence/driving-licence-verification.html", '\'\'<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Driving licence Verification</a></h1><p class=uk-text-lead>Verifying Driving licence details</p><p>First upload the front side of a Driving licence. Then click on extraction. You may put direct URL to front side if you have one.</p><p>The <b>Auto-Read</b> API prefils verification section. Please <b>validate</b> the data before sending for verification.</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and there are no background borders.</p><p>Each <b>image/pdf</b> should be less than <b>2MB</b>.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=verify()><h3 class=uk-text-bold>Driving licence Details Verification</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>DL Number</label><input class=uk-input type=text ng-model=data.verifyData.number placeholder="DL Number Eg(MP04N20110365695)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Date of Birth</label><input class=uk-input type=text ng-model=data.verifyData.dob placeholder="Date of Birth Eg(dd/mm/yyyy)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Issue Date on DL</label><input class=uk-input type=text ng-model=data.verifyData.issueDate placeholder="Issue Date Eg(dd/mm/yyyy)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.verifyData.dob ==\'\' || data.verifyData.number ==\'\'"><span ng-hide=loading>Verify</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.dlVerifiedResponse && !loading"><div class=responseCard><p ng-show="true || data.dlVerifiedResponse.verified"><span class=uk-text-bold>Verified: </span>{{data.dlVerifiedResponse.verified}}</p><p ng-show="true || data.dlVerifiedResponse.message"><span class=uk-text-bold>Message: </span>{{data.dlVerifiedResponse.message}}</p></div><pre pretty-json=data.dlVerifiedResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div>'), e.put("app/identities/drivingLicenceV2/extraction.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Driving Licence Extraction</a></h1><p class=uk-text-lead>Auto-reading Driving Licence</p><p>First upload the front side of a Driving licence. Then click on extraction. You may put direct URL to front side if you have one.</p><p>The <b>Auto-Read</b> API prefils verification section. Please <b>validate</b> the data before sending for verification.</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and there are no background borders.</p><p>Each <b>image/pdf</b> should be less than <b>2MB</b>.</p><br><br><!-- <div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0">\n      <div class="pad-left0" uk-lightbox>\n        <div ng-if="data.dl_files[0]">\n          <a class="uk-inline" ng-href="{{data.dl_files[0]}}">\n            <img width="300" ng-src="{{data.dl_files[0]}}" max-width="50%;" height="" alt="" ng-if="data.dl_files[0].indexOf(\'pdf\') == -1" />\n          </a>\n          <object data="{{data.dl_files[0]}}" type="application/pdf" width="300" height="300" ng-if="data.dl_files[0].indexOf(\'pdf\') != -1">\n          </object>\n          <span ngf-select="fileUpload($file,0)" ng-model=\'data.dl_files[0]\' uk-icon="icon: file-edit" class="uk-link">&nbsp;</span>\n          <a ng-click="data.dl_files[0] =\'\'" uk-icon="icon: trash"></a>\n        </div>\n        <div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.dl_files[0]">\n          <span uk-icon="icon: cloud-upload"></span>\n          <span ngf-select=\'fileUpload($files, 0)\' ng-model=\'data.dl_files[0]\' ngf-max-size="20MB" ngf-drop="" class="uk-link">&nbsp;Upload Front file</span>\n        </div>\n\n\n      </div>\n    </div> --><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0" uk-grid><div class="uk-width-1-2@s pad-left0" uk-lightbox><div ng-if="data.dl_files[0].length > 0"><a class=uk-inline ng-href={{data.dl_files[0]}}><img ng-src={{data.dl_files[0]}} width=400 height=400 ng-if="data.dl_files[0].indexOf(\'pdf\') == -1"></a><object data={{data.dl_files[0]}} type=application/pdf width=400 height=400 ng-if="data.dl_files[0].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.dl_files[0] uk-icon="icon: file-edit" class=uk-link ng-if="data.dl_files[0].length > 0">&nbsp;</span> <a ng-click="data.dl_files[0] =\'\'" uk-icon="icon: trash" ng-if="data.dl_files[0].length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.dl_files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.dl_files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Front file</span></div></div><div class="uk-width-1-2@s pad-left20" uk-lightbox><div ng-if=data.dl_files[1]><a class=uk-inline ng-href={{data.dl_files[1]}}><img ng-src={{data.dl_files[1]}} width=400 height=400 ng-if="data.dl_files[1].indexOf(\'pdf\') == -1"></a><object data={{data.dl_files[1]}} type=application/pdf width=400 height=400 ng-if="data.dl_files[1].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,1) ng-model=data.dl_files[1] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.dl_files[1] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.dl_files[1]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 1)" ng-model=data.dl_files[1] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Back file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=extract()><h3 class=uk-text-bold>Driving Licence Details Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>DL Front Image File</label><input class=uk-input type=text ng-model=data.dl_files[0] placeholder="DL Card Front Image(URL)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>DL Back Image File</label><input class=uk-input type=text ng-model=data.dl_files[1] placeholder="DL Card Back Image(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.dl_files.length < 1"><span ng-hide=loading>Extract</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.dlExtractedResponse && !loading"><div class=responseCard><div class=responseCard><p ng-show="true || data.dlExtractedResponse.name"><span class=uk-text-bold>Name: </span>{{data.dlExtractedResponse.name}}</p><p ng-show="true || data.dlExtractedResponse.issueDate"><span class=uk-text-bold>Issue Date: </span>{{data.dlExtractedResponse.issueDate}}</p><p ng-show="true || data.dlExtractedResponse.dob"><span class=uk-text-bold>DOB: </span>{{data.dlExtractedResponse.dob}}</p><p ng-show="true || data.dlExtractedResponse.expiryDate"><span class=uk-text-bold>Expiry Date: </span>{{data.dlExtractedResponse.expiryDate}}</p><p ng-show="true || data.dlExtractedResponse.number"><span class=uk-text-bold>DL Number: </span>{{data.dlExtractedResponse.number}}</p><p ng-show="true || data.dlExtractedResponse.gaurdianName"><span class=uk-text-bold>Gaurdian Name: </span>{{data.dlExtractedResponse.gaurdianName}}</p><div ng-show=data.dlExtractedResponse.splitAddress><p ng-show=data.dlExtractedResponse.splitAddress.district><span class=uk-text-bold>District: </span>{{data.dlExtractedResponse.splitAddress.district}}</p><p ng-show=data.dlExtractedResponse.splitAddress.pincode><span class=uk-text-bold>Pincode: </span>{{data.dlExtractedResponse.splitAddress.pincode}}</p><p ng-show=data.dlExtractedResponse.splitAddress.state><span class=uk-text-bold>State: </span>{{data.dlExtractedResponse.splitAddress.state}}</p><p ng-show=data.dlExtractedResponse.splitAddress.country><span class=uk-text-bold>Country: </span>{{data.dlExtractedResponse.splitAddress.country[2]}}</p><p ng-show=data.dlExtractedResponse.splitAddress.addressLine><span class=uk-text-bold>Addressline: </span>{{data.dlExtractedResponse.splitAddress.addressLine}}</p><hr></div><pre pretty-json=data.dlExtractedResponse></pre></div></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div></div>'), e.put("app/identities/drivingLicenceV2/fetch.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Driving licence Number Based Search</a></h1><p class=uk-text-lead>Get Driving Licence details from DL Number and DOB</p><form class="uk-form-horizontal uk-margin-large" ng-submit=fetch()><h3 class=uk-text-bold>Driving licence Details Search</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>DL Number</label><input class=uk-input type=text ng-model=data.fetchData.number placeholder="DL Number Eg(MP04N20110365695)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Date of Birth</label><input class=uk-input type=text ng-model=data.fetchData.dob placeholder="Date of Birth Eg(dd/mm/yyyy)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.fetchData.number ==\'\'"><span ng-hide=loading>Verify</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.dlFetchResponse && !loading"><div class=marb50 ng-if="data.dlFetchResponse.detailsOfDrivingLicence.photo.length > 0"><center><b>CroppedImage:</b><br><img ng-src={{data.dlFetchResponse.detailsOfDrivingLicence.photo}} class=crop alt=""></center></div><div class=responseCard><p ng-show="true || data.dlFetchResponse.detailsOfDrivingLicence.name"><span class=uk-text-bold>Name: </span>{{data.dlFetchResponse.detailsOfDrivingLicence.name}}</p><p ng-show="true || data.dlFetchResponse.detailsOfDrivingLicence.fatherOrHusbandName"><span class=uk-text-bold>Father/Husband Name: </span>{{data.dlFetchResponse.detailsOfDrivingLicence.fatherOrHusbandName}}</p><p ng-show="true || data.dlFetchResponse.detailsOfDrivingLicence.address"><span class=uk-text-bold>Address: </span>{{data.dlFetchResponse.detailsOfDrivingLicence.address}}</p><div ng-show=data.dlFetchResponse.detailsOfDrivingLicence.splitAddress><p ng-show=data.dlFetchResponse.detailsOfDrivingLicence.splitAddress.district><span class=uk-text-bold>District: </span>{{data.dlFetchResponse.detailsOfDrivingLicence.splitAddress.district}}</p><p ng-show=data.dlFetchResponse.detailsOfDrivingLicence.splitAddress.pincode><span class=uk-text-bold>Pincode: </span>{{data.dlFetchResponse.detailsOfDrivingLicence.splitAddress.pincode}}</p><p ng-show=data.dlFetchResponse.detailsOfDrivingLicence.splitAddress.state><span class=uk-text-bold>State: </span>{{data.dlFetchResponse.detailsOfDrivingLicence.splitAddress.state}}</p><p ng-show=data.dlFetchResponse.detailsOfDrivingLicence.splitAddress.country><span class=uk-text-bold>Country: </span>{{data.dlFetchResponse.detailsOfDrivingLicence.splitAddress.country[2]}}</p><p ng-show=data.dlFetchResponse.detailsOfDrivingLicence.splitAddress.addressLine><span class=uk-text-bold>Addressline: </span>{{data.dlFetchResponse.detailsOfDrivingLicence.splitAddress.addressLine}}</p><hr></div><pre pretty-json=data.dlFetchResponse></pre></div></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div>'), e.put("app/identities/drivingLicenceV2/verification.html", '\'\'<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Driving licence Verification</a></h1><p class=uk-text-lead>Verifying Driving licence details</p><p>First upload the front side of a Driving licence. Then click on extraction. You may put direct URL to front side if you have one.</p><p>The <b>Auto-Read</b> API prefils verification section. Please <b>validate</b> the data before sending for verification.</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and there are no background borders.</p><p>Each <b>image/pdf</b> should be less than <b>2MB</b>.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=verify()><h3 class=uk-text-bold>Driving licence Details Verification</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>DL Number</label><input class=uk-input type=text ng-model=data.verifyData.number placeholder="DL Number Eg(MP04N20110365695)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Date of Birth</label><input class=uk-input type=text ng-model=data.verifyData.dob placeholder="Date of Birth Eg(dd/mm/yyyy)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Issue Date on DL</label><input class=uk-input type=text ng-model=data.verifyData.issueDate placeholder="Issue Date Eg(dd/mm/yyyy)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.verifyData.dob ==\'\' || data.verifyData.number ==\'\'"><span ng-hide=loading>Verify</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.dlVerifiedResponse && !loading"><div class=responseCard><p ng-show="true || data.dlVerifiedResponse.verified"><span class=uk-text-bold>Verified: </span>{{data.dlVerifiedResponse.verified}}</p><p ng-show="true || data.dlVerifiedResponse.message"><span class=uk-text-bold>Message: </span>{{data.dlVerifiedResponse.message}}</p></div><pre pretty-json=data.dlVerifiedResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div>'), e.put("app/identities/ekyc/ekyc.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Aadhaar EKYC</a></h1><p class=uk-text-lead>Aadhaar Based EKYC portal</p><p>EKYC is used for verifying a user by using his/her Aadhaar number.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=createUrl()><h3 class=uk-text-bold>Aadhaar EKYC of an individual</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Aadhaar Number</label><input class=uk-input type=text ng-model=data.uid placeholder="Aadhaar Number"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.uid.length < 12"><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><div class="uk-card uk-card-body bg-grey" ng-show="data.ekyc && !loading"><div class="uk-width-medium-1-2 uk-container-center uk-text-center"><img data-ng-src=data:image/png;base64,{{data.ekyc.kyc.photo}} style=width:120px></div><p ng-repeat="(key,value) in data.ekyc.kyc.poi" ng-hide="key == \'splitAddress\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><p ng-repeat="(key,value) in data.ekyc.kyc.poa" ng-hide="key == \'splitAddress\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><p ng-repeat="(key,value) in data.ekyc" ng-hide="key == \'kyc\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.ekyc></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.ekycError && !loading"><pre pretty-json=data.ekycError></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div>'), e.put("app/identities/emailvalidation/emailvalidation.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>EMAIL Validation test sandbox</a></h1><p>Try searching for any Email-ID.</p><form class="uk-form-horizontal uk-margin-large" id=emailForm name=emailForm ng-submit=search()><h3 class=uk-text-bold>Email-ID Search</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Email ID</label><input class=uk-input type=email ng-model=data.email placeholder="EmailID (Eg. ankit@signzy.com)"><div class=uk-text-danger ng-show=wrongInput>Please Enter a valid Email Number</div></div><!-- <div>\n                    <label class="uk-form-label" for="form-stacked-text">IP Address</label>\n                    <input class="uk-input"  type="text" ng-model="data.ip" placeholder="IP (Eg. 106.51.27.46)">\n                    <div class="uk-text-danger" ng-show="wrongInput">Please Enter a valid IP</div>\n                </div> --></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.email.length == 0 && data.ip.length == 0"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.emailverifyData && !loading"><pre pretty-json=data.emailverifyData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/identities/emailverification/emailverification.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>EMAIL Verification test sandbox</a></h1><p>Try searching for any Email-ID.</p><form class="uk-form-horizontal uk-margin-large" id=emailForm name=emailForm ng-submit=search()><h3 class=uk-text-bold>Email-ID Search</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Email ID</label><input class=uk-input type=email ng-model=data.email placeholder="EmailID (Eg. ankit@signzy.com)" required><div class=uk-text-danger ng-show=wrongInput>Please Enter a valid Email Number</div></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=emailForm.$invalid><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.emailData && !loading"><pre pretty-json=data.emailData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'),
            e.put("app/identities/emailverificationv2/emailverificationv2.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>EMAIL Verification v2 test sandbox</a></h1><p>Try searching for any Email-ID.</p><form class="uk-form-horizontal uk-margin-large" id=emailForm name=emailForm ng-submit=search()><h3 class=uk-text-bold>Email-ID Search</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Email ID</label><input class=uk-input type=email ng-model=data.email placeholder="EmailID (Eg. ankit@signzy.com)" required><div class=uk-text-danger ng-show=wrongInput>Please Enter a valid Email ID</div></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=emailForm.$invalid><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.emailData && !loading"><pre pretty-json=data.emailData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/identities/globalverification/advancedsearch.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Global Verification(Advanced Search) test sandbox</a></h1><p>Try using Global Verification(Advanced Search) here.</p><form class="uk-form-horizontal uk-margin-large" name=globalverificationForm><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Full Name</label><input class=uk-input type=text ng-model=advData.identity.fullName placeholder="Name (Eg. James Bradley)"></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>First Name</label><input class=uk-input type=text ng-model=advData.identity.firstName placeholder="First Name (Eg. James)"></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Last Name</label><input class=uk-input type=text ng-model=advData.identity.lastName placeholder="Last Name (Eg. Bradley)"></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>National Id</label><input class=uk-input type=text ng-model=advData.identity.nationalId placeholder="National Id (Eg.1306630920 )" required></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>DOB</label><input class=uk-input type=text ng-model=advData.identity.dob placeholder="Date of Birth(13/06/1963)"></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Phone Number</label><input class=uk-input type=text ng-model=advData.identity.phoneNumber placeholder="Phone Number"></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Email Address</label><input class=uk-input type=text ng-model=advData.identity.emailAddress placeholder="Email Address (xyz@gmail.com)"></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Country Code</label><select class=uk-select ng-model=advData.identity.countryCode ng-init="advData.identity.countryCode = countryList[0].countryCode"><option ng-value=country.countryCode ng-repeat="country in countryList">{{ country.countryName }}</option></select></div><!-- <div class="uk-margin">\n                <label class="uk-form-label" for="form-stacked-text">ID Type</label>\n                <select class="uk-select" ng-model="advData.identity.idType" ng-init="advData.identity.idType = \'\'">\n                    <option ng-value="idType" ng-repeat="idType in idTypeList">{{ idType }}\n                    </option>\n                </select>\n            </div> --><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Address Line1</label><input class=uk-input type=text ng-model=advData.address.addressLine1 placeholder="Address Line1"></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Address Line2</label><input class=uk-input type=text ng-model=advData.address.addressLine2 placeholder="Address Line2"></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>House Number</label><input class=uk-input type=text ng-model=advData.address.houseNumber placeholder="House Number"></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>City</label><input class=uk-input type=text ng-model=advData.address.city placeholder=City></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>State</label><input class=uk-input type=text ng-model=advData.address.state placeholder=State></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Postal Code</label><input class=uk-input type=text ng-model=advData.address.postalCode placeholder="Postal Code(2614)" required></div><div class=uk-margin-medium-top></div><p uk-margin class=uk-text-center><!-- <button class="uk-button uk-button-danger uk-button-medium" ng-click="setDefaultGdc()">\n                    <span>Set Default</span>\n                </button> --> <button class="uk-button uk-button-primary uk-button-medium" ng-disabled=globalverificationForm.$invalid ng-click=advancedSearch()><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="advData.globalVerificationAdvData && !loading"><pre pretty-json=advData.globalVerificationAdvData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="advData.error && !loading"><div class=responseCard><pre pretty-json=advData.error></pre></div></div></div>'), e.put("app/identities/globalverification/standardsearch.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Global Verification(Standard Search) test sandbox</a></h1><p>Try using Global Verification(Standard Search) here.</p><form class="uk-form-horizontal uk-margin-large" name=globalverificationForm><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Full Name</label><input class=uk-input type=text ng-model=stdData.identity.fullName placeholder="Name (Eg. James Bradley)"></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>First Name</label><input class=uk-input type=text ng-model=stdData.identity.firstName placeholder="First Name (Eg. James)"></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Last Name</label><input class=uk-input type=text ng-model=stdData.identity.lastName placeholder="Last Name (Eg. Bradley)"></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>National Id</label><input class=uk-input type=text ng-model=stdData.identity.nationalId placeholder="National Id (Eg.1306630920 )" required></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>DOB</label><input class=uk-input type=text ng-model=stdData.identity.dob placeholder="Date of Birth(13/06/1963)"></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Gender</label><input class=uk-input type=text ng-model=stdData.identity.gender placeholder=Gender></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Country Code</label><select class=uk-select ng-model=stdData.identity.countryCode ng-init="stdData.identity.countryCode = countryList[0].countryCode"><option ng-value=country.countryCode ng-repeat="country in countryList">{{ country.countryName }}</option></select></div><!-- <div class="uk-margin">\n                <label class="uk-form-label" for="form-stacked-text">ID Type</label>\n                <select class="uk-select" ng-model="stdData.identity.idType" ng-init="stdData.identity.idType =\'\'">\n                    <option ng-value="idType" ng-repeat="idType in idTypeList">{{ idType }}\n                    </option>\n                </select>\n            </div> --><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Address Line1</label><input class=uk-input type=text ng-model=stdData.address.addressLine1 placeholder="Address Line1"></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Address Line2</label><input class=uk-input type=text ng-model=stdData.address.addressLine2 placeholder="Address Line2"></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>House Number</label><input class=uk-input type=text ng-model=stdData.address.houseNumber placeholder="House Number"></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>City</label><input class=uk-input type=text ng-model=stdData.address.city placeholder=City></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>State</label><input class=uk-input type=text ng-model=stdData.address.state placeholder=State></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Postal Code</label><input class=uk-input type=text ng-model=stdData.address.postalCode placeholder="Postal Code(2614)"></div><div class=uk-margin-medium-top></div><p uk-margin class=uk-text-center><!-- <button class="uk-button uk-button-danger uk-button-medium" ng-click="setDefaultGdc()">\n                    <span>Set Default</span>\n                </button> --> <button class="uk-button uk-button-primary uk-button-medium" ng-disabled=globalverificationForm.$invalid ng-click=standardSearch()><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="stdData.globalVerificationStdData && !loading"><pre pretty-json=stdData.globalVerificationStdData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="stdData.error && !loading"><div class=responseCard><pre pretty-json=stdData.error></pre></div></div></div>'), e.put("app/identities/individual-pan/pan-aadhaar-link-status.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>PAN AADHAAR LINK STATUS</a></h1><p class=uk-text-lead>Fetch if Pan and Aadhaar Link Status</p><p>Fetch if given Pan and Aadhaar are linked to each other</p><form class="uk-form-horizontal uk-margin-large" ng-submit=panAadhaarLinkStatus()><h3 class=uk-text-bold>PAN AADHAAR LINK STATUS</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>PAN Number</label><input class=uk-input type=text ng-model=data.verifyData.number placeholder="PAN Number"><div class=uk-text-danger ng-show=wrongInput>Please Enter a valid PAN Number</div></div><div><label class=uk-form-label for=form-stacked-text>AADHAAR Number</label><input class=uk-input type=text ng-model=data.verifyData.uid placeholder="AADHAAR Number"><div class=uk-text-danger ng-show=wrongInput>Please Enter a valid AADHAAR Number</div></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=" data.verifyData.number ==\'\'"><span ng-hide=loading>Verify</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.panAadhaarLinkStatusResponse && !loading"><div class=responseCard><pre pretty-json=data.panAadhaarLinkStatusResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div></div>'), e.put("app/identities/individual-pan/pan-advance-verification.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Individual PAN Advance Verification</a></h1><p class=uk-text-lead>Verifying PAN card details</p><p>Card details should be manually validated, preferably by the card owner, before sending it for verification. For verification of PAN card details, card number is mandatory along with atleast one of the fields from Name.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=advanceVerification()><h3 class=uk-text-bold>PAN Card Details Advance Verification</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>PAN Number</label><input class=uk-input type=text ng-model=data.verifyData.number placeholder="PAN Number"><div class=uk-text-danger ng-show=wrongInput>Please Enter a valid PAN Number</div></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Name on PAN Card</label><input class=uk-input type=text ng-model=data.verifyData.name placeholder=Name></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Father Name on PAN Card</label><input class=uk-input type=text ng-model=data.verifyData.fatherName placeholder="Father Name"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Date of Birth on PAN Card</label><input class=uk-input type=text ng-model=data.verifyData.dob placeholder=DOB></div></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Fuzzy Required</label><select class=uk-select ng-model=data.verifyData.fuzzy><option value=true>TRUE</option><option value=false>FALSE</option></select></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.verifyData.number ==\'\'"><span ng-hide=loading>Verify</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.panVerifiedResponse && !loading"><pre pretty-json=data.panVerifiedResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div>'), e.put("app/identities/individual-pan/pan-advanceExtraction.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Individual PAN Advanced Extraction</a></h1><p class=uk-text-lead>Auto-reading PAN card</p><p>First upload the front sides of a PAN card. Then click on extraction. You may put direct URL to front side if you have one.</p><p>The <b>Auto-Read</b> API prefils verification section. Please <b>validate</b> the data before sending for verification.</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and is horizontally-aligned.</p><p>Each <b>image/pdf</b> should be less than <b>2MB</b>.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0"><div class=pad-left0 uk-lightbox><div ng-if=data.pan_files[0]><a class=uk-inline ng-href={{data.pan_files[0]}}><img width=300 ng-src={{data.pan_files[0]}} max-width=50%; height="" alt="" ng-if="data.pan_files[0].indexOf(\'pdf\') == -1"></a><object data={{data.pan_files[0]}} type=application/pdf width=300 height=300 ng-if="data.pan_files[0].indexOf(\'pdf\') != -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.pan_files[0] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.pan_files[0] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.pan_files[0]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.pan_files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=advanceExtract()><h3 class=uk-text-bold>PAN Card Details Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>PAN Image File</label><input class=uk-input type=text ng-model=data.pan_files[0] placeholder="PAN Card Image(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.pan_files.length == 0"><span ng-hide=loading>Extract</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.panExtractedResponse && !loading"><div class=responseCard><p ng-show="true || data.panExtractedResponse.extractionResponse.name"><span class=uk-text-bold>Name: </span>{{data.panExtractedResponse.extractionResponse.name}}</p><p ng-show="true || data.panExtractedResponse.extractionResponse.fatherName"><span class=uk-text-bold>FatherName: </span>{{data.panExtractedResponse.extractionResponse.fatherName}}</p><p ng-show="true || data.panExtractedResponse.extractionResponse.number"><span class=uk-text-bold>Number: </span>{{data.panExtractedResponse.extractionResponse.number}}</p><p ng-show="true || data.panExtractedResponse.extractionResponse.dob"><span class=uk-text-bold>DOB: </span>{{data.panExtractedResponse.extractionResponse.dob}}</p><pre pretty-json=data.panExtractedResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div></div>'), e.put("app/identities/individual-pan/pan-epan.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>E-PAN Extraction</a></h1><p>To read XML or PDF file of a E-PAN you need to send the following details. API responds with a json object.</p><br><br><form class="uk-form-horizontal uk-margin-large" ng-submit=ePANExtraction()><h3 class=uk-text-bold>EPAN Extraction</h3><div class=uk-margin><label class=uk-form-label for=form-stacked-text>File Type</label><select class=uk-select ng-model=data.fileType ng-change="data.pan_files = []"><option value=zip>ZIP</option><option value=xml>XML</option><option value=pdf>PDF</option></select></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-if="data.fileType == \'zip\'"><div class=pad-left0 uk-lightbox><div ng-if="data.pan_files[0].length > 0"><img src=assets/images/zip.png class=ht100 ng-if="data.pan_files[0].indexOf(\'zip\') != -1"><br><br><span ngf-select=fileUpload($file,0) ng-model=data.pan_files[0] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.pan_files[0] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.pan_files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.pan_files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;<span ng-bind="\'Upload \' + data.fileType.toUpperCase() + \' File\'"></span></span></div></div></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-if="data.fileType == \'xml\'"><div class=pad-left0 uk-lightbox><div ng-if="data.pan_files[0].length > 0"><img src=assets/images/xml.png class=ht100 ng-if="data.pan_files[0].indexOf(\'xml\') != -1"><br><br><span ngf-pattern="\'text/xml\'" ngf-accept="\'text/xml\'" ngf-select=fileUpload($file,0) ng-model=data.pan_files[0] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.pan_files[0] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.pan_files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-pattern="\'text/xml\'" ngf-accept="\'text/xml\'" ngf-select="fileUpload($files, 0)" ng-model=data.pan_files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;<span ng-bind="\'Upload \' + data.fileType.toUpperCase() + \' File\'"></span></span></div></div></div><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0" ng-if="data.fileType == \'pdf\'"><div class=pad-left0 uk-lightbox><div ng-if=data.pan_files[0]><a class=uk-inline ng-href={{data.pan_files[0]}}><img width=300 ng-src={{data.pan_files[0]}} max-width=50%; height="" alt="" ng-if="data.pan_files[0].indexOf(\'pdf\') == -1"></a><object data={{data.pan_files[0]}} type=application/pdf width=300 height=300 ng-if="data.pan_files[0].indexOf(\'pdf\') != -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.pan_files[0] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.pan_files[0] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.pan_files[0]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.pan_files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload PDF file</span></div></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text><span ng-bind="\'Individual PAN \' + data.fileType.toUpperCase() + \' File\'"></span></label><input class=uk-input type=text ng-model=data.pan_files[0] placeholder=File(URL)></div></div><div class=uk-margin ng-if="data.fileType == \'zip\' || data.fileType == \'pdf\'"><div><label class=uk-form-label for=form-stacked-text>File Password</label><input class=uk-input type=password ng-model=data.password placeholder="File Password"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.pan_files.length == 0 || (data.fileType == \'zip\' && data.password.length == 0) ||  (data.fileType == \'pdf\' && data.password.length == 0)"><span ng-hide=loading>Extract</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.ePanResponse && !loading"><div class=marb50><center><b>CroppedImage:</b><br><img ng-src={{data.ePanResponse.photo}} class=crop alt=""></center></div><div class=responseCard><p ng-show="true || data.ePanResponse.isValidEPANDSC"><span class=uk-text-bold>Valid ePAN DSC: </span>{{data.ePanResponse.isValidEPANDSC.toString()}}</p><p ng-show="true || data.ePanResponse.name"><span class=uk-text-bold>Name: </span>{{data.ePanResponse.name}}</p><p ng-show="true || data.ePanResponse.gender"><span class=uk-text-bold>Gender: </span>{{data.ePanResponse.gender}}</p><p ng-show="true || data.ePanResponse.dob"><span class=uk-text-bold>DOB: </span>{{data.ePanResponse.dob}}</p><pre pretty-json=data.ePanResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div></div>'), e.put("app/identities/individual-pan/pan-extraction.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Individual PAN Extraction</a></h1><p class=uk-text-lead>Auto-reading PAN card</p><p>First upload the front sides of a PAN card. Then click on extraction. You may put direct URL to front side if you have one.</p><p>The <b>Auto-Read</b> API prefils verification section. Please <b>validate</b> the data before sending for verification.</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and is horizontally-aligned.</p><p>Each <b>image/pdf</b> should be less than <b>2MB</b>.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0"><div class=pad-left0 uk-lightbox><div ng-if=data.pan_files[0]><a class=uk-inline ng-href={{data.pan_files[0]}}><img width=300 ng-src={{data.pan_files[0]}} max-width=50%; height="" alt="" ng-if="data.pan_files[0].indexOf(\'pdf\') == -1"></a><object data={{data.pan_files[0]}} type=application/pdf width=300 height=300 ng-if="data.pan_files[0].indexOf(\'pdf\') != -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.pan_files[0] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.pan_files[0] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.pan_files[0]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.pan_files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=extract()><h3 class=uk-text-bold>PAN Card Details Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>PAN Image File</label><input class=uk-input type=text ng-model=data.pan_files[0] placeholder="PAN Card Image(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.pan_files.length == 0"><span ng-hide=loading>Extract</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.panExtractedResponse && !loading"><div class=responseCard><p ng-show="true || data.panExtractedResponse.name"><span class=uk-text-bold>Name: </span>{{data.panExtractedResponse.name}}</p><p ng-show="true || data.panExtractedResponse.fatherName"><span class=uk-text-bold>FatherName: </span>{{data.panExtractedResponse.fatherName}}</p><p ng-show="true || data.panExtractedResponse.number"><span class=uk-text-bold>Number: </span>{{data.panExtractedResponse.number}}</p><p ng-show="true || data.panExtractedResponse.dob"><span class=uk-text-bold>DOB: </span>{{data.panExtractedResponse.dob}}</p><pre pretty-json=data.panExtractedResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div></div>'), e.put("app/identities/individual-pan/pan-face-extraction.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>PAN Face Extraction</a></h1><p>To extract face from a PAN card you need to send the following details. API responds with a url to just the face found from card.</p><br><br><div class="test-upload uk-placeholder uk-text-center mar-0"><div class=pad-left0 uk-lightbox><div ng-if="data.pan_files[0].length > 0"><a class=uk-inline ng-href={{data.aadhaar_files[0]}}><img ng-src={{data.pan_files[0]}} width=400 height=400 ng-if="data.pan_files[0].indexOf(\'pdf\') == -1"></a><object data={{data.pan_files[0]}} type=application/pdf width=400 height=400 ng-if="data.pan_files[0].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.pan_files[0] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.pan_files[0] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.pan_files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.pan_files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Front file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=getFace()><h3 class=uk-text-bold>PAN Card Face Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>PAN Image File</label><input class=uk-input type=text ng-model=data.pan_files[0] placeholder="PAN Card Image(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.pan_files.length == 0"><span ng-hide=loading>Extract</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.panFaceResponse && !loading"><p><center><b>CroppedImage:</b><br><img ng-src={{data.panFaceResponse.cropped}} class=crop alt=""></center></p><div layout-padding></div><pre pretty-json=data.panFaceResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/identities/individual-pan/pan-fetch.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>PAN Fetch</a></h1><p class=uk-text-lead>Fetching PAN card details</p><p>Fetch name, Father name , Date of Birth from PAN</p><form class="uk-form-horizontal uk-margin-large" ng-submit=fetch()><h3 class=uk-text-bold>PAN Card Details Fetch</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>PAN Number</label><input class=uk-input type=text ng-model=data.verifyData.number placeholder="PAN Number"><div class=uk-text-danger ng-show=wrongInput>Please Enter a valid PAN Number</div></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=" data.verifyData.number ==\'\'"><span ng-hide=loading>Verify</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.panFetchResponse && !loading"><div class=responseCard><p ng-show="true || data.panFetchResponse.name"><span class=uk-text-bold>Name: </span>{{data.panFetchResponse.name}}</p><p ng-show="true || data.panFetchResponse.fatherName"><span class=uk-text-bold>FatherName: </span>{{data.panFetchResponse.fatherName}}</p><p ng-show="true || data.panFetchResponse.dob"><span class=uk-text-bold>DOB: </span>{{data.panFetchResponse.dob}}</p><p ng-show="true || data.panFetchResponse.number"><span class=uk-text-bold>PAN: </span>{{data.panFetchResponse.number}}</p></div><pre pretty-json=data.panFetchResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div>'), e.put("app/identities/individual-pan/pan-onpremextraction.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>On Premise Extraction for Pan</a></h1><p class=uk-text-lead>Auto-reading PAN card</p><p>First upload the front sides of a PAN card. Then click on extraction. You may put direct URL to front side if you have one.</p><p>The <b>Auto-Read</b> API prefils verification section. Please <b>validate</b> the data before sending for verification.</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and is horizontally-aligned.</p><p>Each <b>image/pdf</b> should be less than <b>2MB</b>.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0"><div class=pad-left0 uk-lightbox><div ng-if=data.pan_files[0]><a class=uk-inline ng-href={{data.pan_files[0]}}><img width=300 ng-src={{data.pan_files[0]}} max-width=50%; height="" alt="" ng-if="data.pan_files[0].indexOf(\'pdf\') == -1"></a><object data={{data.pan_files[0]}} type=application/pdf width=300 height=300 ng-if="data.pan_files[0].indexOf(\'pdf\') != -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.pan_files[0] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.pan_files[0] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.pan_files[0]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.pan_files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=onPremExtraction()><h3 class=uk-text-bold>PAN Card Details Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>PAN Image File</label><input class=uk-input type=text ng-model=data.pan_files[0] placeholder="PAN Card Image(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.pan_files.length == 0"><span ng-hide=loading>Extract</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.panExtractedResponse && !loading"><div class=responseCard><p ng-show="true || data.panExtractedResponse.name"><span class=uk-text-bold>Name: </span>{{data.panExtractedResponse.name}}</p><p ng-show="true || data.panExtractedResponse.fatherName"><span class=uk-text-bold>FatherName: </span>{{data.panExtractedResponse.fatherName}}</p><p ng-show="true || data.panExtractedResponse.number"><span class=uk-text-bold>Number: </span>{{data.panExtractedResponse.panNumber}}</p><p ng-show="true || data.panExtractedResponse.dob"><span class=uk-text-bold>DOB: </span>{{data.panExtractedResponse.birthDate}}</p><pre pretty-json=data.panExtractedResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div></div>'),
            e.put("app/identities/individual-pan/pan-signature-extraction.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Individual PAN Signature Extraction</a></h1><p class=uk-text-lead>Auto-extracting PAN card</p><p>First upload the front sides of a PAN card. Then click on extraction. You may put direct URL to front side if you have one.</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and is horizontally-aligned.</p><p>Each <b>image/pdf</b> should be less than <b>2MB</b>.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0"><div class=pad-left0 uk-lightbox><div ng-if=data.pan_files[0]><a class=uk-inline ng-href={{data.pan_files[0]}}><img width=300 ng-src={{data.pan_files[0]}} max-width=50%; height="" alt="" ng-if="data.pan_files[0].indexOf(\'pdf\') == -1"></a><object data={{data.pan_files[0]}} type=application/pdf width=300 height=300 ng-if="data.pan_files[0].indexOf(\'pdf\') != -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.pan_files[0] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.pan_files[0] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.pan_files[0]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.pan_files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload file</span></div></div></div><form class="uk-form-horizontal uk-margin-large"><h3 class=uk-text-bold>PAN Card Signature Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>PAN Front Side Image File</label><input class=uk-input type=text ng-model=data.pan_files[0] placeholder="PAN Card Front Side Image(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.pan_files.length == 0"><span ng-hide=loading ng-click=signatureExtraction()>Extract</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.panExtractedResponse && !loading"><div class=responseCard><p ng-show="data && data.panExtractedResponse && data.panExtractedResponse.signature">Signature: <img src={{data.panExtractedResponse.signature}}></p><pre pretty-json=data.panExtractedResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div></div>'), e.put("app/identities/individual-pan/pan-verification-1.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>PAN Verification</a></h1><p class=uk-text-lead>Verifying PAN card details</p><p>Card details should be manually validated, preferably by the card owner, before sending it for verification. For verification of PAN card details, card number is mandatory along with atleast one of the fields from Name.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=verify()><h3 class=uk-text-bold>PAN Card Details Verification-1</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Name on PAN Card</label><input class=uk-input type=text ng-model=data.verifyData.name placeholder=Name></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>PAN Number</label><input class=uk-input type=text ng-model=data.verifyData.number placeholder="PAN Number"><div class=uk-text-danger ng-show=wrongInput>Please Enter a valid PAN Number</div></div></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Name Fuzzy Required</label><select class=uk-select ng-model=data.verifyData.fuzzy><option value=true>TRUE</option><option value=false>FALSE</option></select></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.verifyData.name ==\'\' || data.verifyData.number ==\'\'"><span ng-hide=loading>Verify</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.panVerifiedResponse && !loading"><div class=responseCard><p ng-show="true || data.panVerifiedResponse.verified"><span class=uk-text-bold>Verified: </span>{{data.panVerifiedResponse.verified}}</p><p ng-show="true || data.panVerifiedResponse.message"><span class=uk-text-bold>Message: </span>{{data.panVerifiedResponse.message}}</p></div><pre pretty-json=data.panVerifiedResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div>'), e.put("app/identities/individual-pan/pan-verification-2.html", '<div><!----><div ng-init=verifyGetData();><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>PAN Verification-2</a></h1><p class=uk-text-lead>Verifying PAN card details</p><p>Card details should be manually validated, preferably by the card owner, before sending it for verification. For verification of PAN card details, card number is mandatory along with atleast one of the fields from Name.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=verify2()><h3 class=uk-text-bold>PAN Card Details Verification-2</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Name on PAN Card</label><br></div><div style=margin-top:10px><input class="uk-input inp-mar" type=text ng-model=data.verifyData2.name.first placeholder="First Name"> <input class="uk-input inp-mar" type=text ng-model=data.verifyData2.name.middle placeholder="Middle Name"> <input class="uk-input inp-mar" type=text ng-model=data.verifyData2.name.last placeholder="Last Name"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Date of Birth on PAN Card</label><br></div><div style=margin-top:10px><input class="uk-input inp-mar" type=text ng-model=data.verifyData2.dob.date placeholder=Date> <input class="uk-input inp-mar" type=text ng-model=data.verifyData2.dob.month placeholder=Month> <input class="uk-input inp-mar" type=text ng-model=data.verifyData2.dob.year placeholder=Year></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>PAN Number</label><input class=uk-input type=text ng-model=data.verifyData2.number placeholder="PAN Number"><div class=uk-text-danger ng-show=wrongInput>Please Enter a valid PAN Number</div></div></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Name Fuzzy Required</label><select class=uk-select ng-model=data.verifyData.fuzzy><option value=true>TRUE</option><option value=false>FALSE</option></select></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.verifyData2.dob.date ==\'\' || data.verifyData2.dob.month ==\'\' || data.verifyData2.dob.year ==\'\' || data.verifyData2.number ==\'\'"><span ng-hide=loading>Verify</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.panVerifiedResponse && !loading"><div class=responseCard><p ng-show="true || data.panVerifiedResponse.verified"><span class=uk-text-bold>Verified: </span>{{data.panVerifiedResponse.verified}}</p><p ng-show="true || data.panVerifiedResponse.message"><span class=uk-text-bold>Message: </span>{{data.panVerifiedResponse.message}}</p></div><pre pretty-json=data.panVerifiedResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div>'), e.put("app/identities/newCar/city.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>New Car CityList</a></h1><!-- <p class="uk-text-lead">Fetching New car City List</p> --><form class="uk-form-horizontal uk-margin-large" name=newCarForm><h3 class=uk-text-bold>City List For New Car</h3><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=newCarForm.$invalid ng-click=city()><span ng-hide=loading>Fetch</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.newCarResponse && !loading"><pre pretty-json=data.newCarResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/identities/newCar/manufacturer.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>New Car ManufacturerList</a></h1><!-- <p class="uk-text-lead">Fetching New car Manufacturer List</p> --><form class="uk-form-horizontal uk-margin-large" name=newCarForm><h3 class=uk-text-bold>Manufacturer List Details For New Car</h3><!-- <div class="uk-margin">\n                    <label class="uk-form-label" for="form-stacked-text">PAN Number</label>\n                    <input class="uk-input" type="text" ng-model="data.number" placeholder="PAN Number" required>\n\n            </div> --><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=newCarForm.$invalid ng-click=manufacturer()><span ng-hide=loading>Fetch</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.newCarResponse && !loading"><pre pretty-json=data.newCarResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/identities/newCar/model.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>New Car ModelList</a></h1><p class=uk-text-lead>Fetching New car Model List</p><form class="uk-form-horizontal uk-margin-large" name=newCarForm><h3 class=uk-text-bold>Model List Details For New Car</h3><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Manufacturer Name</label><input class=uk-input type=text ng-model=data.manufacturerName placeholder="Manufacturer Name" required></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=newCarForm.$invalid ng-click=model()><span ng-hide=loading>Fetch</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.newCarResponse && !loading"><pre pretty-json=data.newCarResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/identities/newCar/price.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>New Car Price</a></h1><p class=uk-text-lead>Fetching New car Price</p><form class="uk-form-horizontal uk-margin-large" name=newCarForm><h3 class=uk-text-bold>Price Details For New Car</h3><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Manufacturer Name</label><select class=uk-select ng-model=data.manufacturerName ng-init="data.manufacturerName = inputData.manufacturerList[0]" ng-change=model() required><option ng-value=manufacturer ng-repeat="manufacturer in inputData.manufacturerList">{{ manufacturer }}</option></select></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Model Name</label><select class=uk-select ng-model=data.modelName ng-init="data.modelName = inputData.modelList[0]" ng-change=trim() required><option ng-value=modelName ng-repeat="modelName in inputData.modelList">{{ modelName }}</option></select></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Trim Name</label><select class=uk-select ng-model=data.trimName ng-init="data.trimName = inputData.trimList[0]" required><option ng-value=trimName ng-repeat="trimName in inputData.trimList">{{ trimName }}</option></select></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Transaction Type</label><select class=uk-select ng-model=data.transactionType><option value=s>Sell</option><option value=b>Buy</option></select></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Customer Type</label><select class=uk-select ng-model=data.customerType ng-init=data.customerType><option value=dealer>Dealer</option><option value=individual>Individual</option></select></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>City</label><select class=uk-select ng-model=data.city ng-init="data.city = inputData.cityList[0]"><option ng-value=city ng-repeat="city in inputData.cityList track by $index">{{ city }}</option></select></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=newCarForm.$invalid ng-click=price()><span ng-hide=loading>Fetch</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.newCarResponse && !loading"><pre pretty-json=data.newCarResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/identities/newCar/trim.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>New Car TrimList</a></h1><p class=uk-text-lead>Fetching New car Trim List</p><form class="uk-form-horizontal uk-margin-large" name=newCarForm><h3 class=uk-text-bold>Trim List Details For New Car</h3><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Manufacturer Name</label><input class=uk-input type=text ng-model=data.manufacturerName placeholder="Manufacturer Name" required></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Model Name</label><input class=uk-input type=text ng-model=data.modelName placeholder="Model Name" required></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=newCarForm.$invalid ng-click=trim()><span ng-hide=loading>Fetch</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.newCarResponse && !loading"><pre pretty-json=data.newCarResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/identities/panV2/panv2-compliance.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>PAN V2 Compliance</a></h1><p class=uk-text-lead>Fetching PAN card details</p><form class="uk-form-horizontal uk-margin-large" name=panFetchForm><h3 class=uk-text-bold>PAN Card Details Fetch</h3><div class=uk-margin><label class=uk-form-label for=form-stacked-text>PAN Number</label><input class=uk-input type=text ng-model=data.number placeholder="PAN Number" required></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=panFetchForm.$invalid ng-click=compliance()><span ng-hide=loading>Verify</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.panFetchResponse && !loading"><pre pretty-json=data.panFetchResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/identities/panV2/panv2-fetch.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>PAN V2 Fetch</a></h1><p class=uk-text-lead>Fetching PAN card details</p><form class="uk-form-horizontal uk-margin-large" name=panFetchForm><h3 class=uk-text-bold>PAN Card Details Fetch</h3><div class=uk-margin><label class=uk-form-label for=form-stacked-text>PAN Number</label><input class=uk-input type=text ng-model=data.number placeholder="PAN Number" required></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=panFetchForm.$invalid ng-click=fetch()><span ng-hide=loading>Verify</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.panFetchResponse && !loading"><pre pretty-json=data.panFetchResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/identities/panV2/panv2-fetchCompliance.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>PAN V2 Fetch Compliance</a></h1><p class=uk-text-lead>Fetching PAN card details</p><form class="uk-form-horizontal uk-margin-large" name=panFetchForm><h3 class=uk-text-bold>PAN Card Details Fetch</h3><div class=uk-margin><label class=uk-form-label for=form-stacked-text>PAN Number</label><input class=uk-input type=text ng-model=data.number placeholder="PAN Number" required></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=panFetchForm.$invalid ng-click=fetchCompliance()><span ng-hide=loading>Verify</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.panFetchResponse && !loading"><pre pretty-json=data.panFetchResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/identities/panV2/panv2-fetch_v2.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>PAN V2 Fetch V2</a></h1><p class=uk-text-lead>Fetching PAN card details</p><form class="uk-form-horizontal uk-margin-large" name=panFetchForm><h3 class=uk-text-bold>PAN Card Details Fetch</h3><div class=uk-margin><label class=uk-form-label for=form-stacked-text>PAN Number</label><input class=uk-input type=text ng-model=data.number placeholder="PAN Number" required></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=panFetchForm.$invalid ng-click=fetchV2()><span ng-hide=loading>Verify</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.panFetchResponse && !loading"><pre pretty-json=data.panFetchResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/identities/passport/passport-extraction.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>passport Extraction</a></h1><p>Before going for Auto reading, you first need to create an Identity object. To get an overview of the ID verification process visit here For best results, please make sure the image you use fits tightly in camera view and is horizontally-aligned. Each image/pdf should be less than 2MB.</p><hr class=uk-margin><p>Passport reading system accepts direct URL to the front and back sides.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0" uk-grid><div class="uk-width-1-2@s pad-left0" uk-lightbox><div ng-if=data.passport_files[0]><a class=uk-inline ng-href={{data.passport_files[0]}}><img ng-src={{data.passport_files[0]}} max-width=50%; height="" alt="" ng-if="data.passport_files[0].indexOf(\'pdf\') == -1"></a><object data={{data.passport_files[0]}} type=application/pdf width=400 height=400 ng-if="data.passport_files[0].indexOf(\'pdf\') != -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.passport_files[0] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.passport_files[0] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.passport_files[0]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.passport_files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Front file</span></div></div><div class="uk-width-1-2@s pad-left20" uk-lightbox><div ng-if=data.passport_files[1]><a class=uk-inline ng-href={{data.passport_files[1]}}><img ng-src={{data.passport_files[1]}} max-width=50%; height="" alt="" ng-if="data.passport_files[1].indexOf(\'pdf\') == -1"></a><object data={{data.passport_files[1]}} type=application/pdf width=400 height=400 ng-if="data.passport_files[1].indexOf(\'pdf\') != -1"></object><span ngf-select=fileUpload($file,1) ng-model=data.passport_files[1] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.passport_files[1] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.passport_files[1]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 1)" ng-model=data.passport_files[1] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Back file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=extract()><h3 class=uk-text-bold>passport Card Details Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>passport Front Image File</label><input class=uk-input type=text ng-model=data.passport_files[0] placeholder="passport Card Front Side Image(URL)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>passport Back Image File</label><input class=uk-input type=text ng-model=data.passport_files[1] placeholder="passport Card Back Side Image(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.passport_files.length < 2"><span ng-hide=loading>Extract</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.passportExtractedResponse && !loading"><div class=responseCard><p ng-show="true || data.passportExtractedResponse.parentsGuardianName"><span class=uk-text-bold>parentsGuardianName: </span>{{data.passportExtractedResponse.parentsGuardianName}}</p><p ng-show="true || data.passportExtractedResponse.issueDate"><span class=uk-text-bold>issueDate: </span>{{data.passportExtractedResponse.issueDate}}</p><p ng-show="true || data.passportExtractedResponse.expiryDate"><span class=uk-text-bold>expiryDate: </span>{{data.passportExtractedResponse.expiryDate}}</p><p ng-show="true || data.passportExtractedResponse.birthDate"><span class=uk-text-bold>birthDate: </span>{{data.passportExtractedResponse.birthDate}}</p><p ng-show="true || data.passportExtractedResponse.name"><span class=uk-text-bold>name: </span>{{data.passportExtractedResponse.name}}</p><p ng-show="true || data.passportExtractedResponse.country"><span class=uk-text-bold>country: </span>{{data.passportExtractedResponse.country}}</p><p ng-show="true || data.passportExtractedResponse.name"><span class=uk-text-bold>placeOfBirth: </span>{{data.passportExtractedResponse.placeOfBirth}}</p><p ng-show="true || data.passportExtractedResponse.country"><span class=uk-text-bold>placeOfIssue: </span>{{data.passportExtractedResponse.placeOfIssue}}</p><div ng-show=data.passportExtractedResponse.splitAddress><p ng-show=data.passportExtractedResponse.splitAddress.district><span class=uk-text-bold>District: </span>{{data.passportExtractedResponse.splitAddress.district}}</p><p ng-show=data.passportExtractedResponse.splitAddress.pincode><span class=uk-text-bold>Pincode: </span>{{data.passportExtractedResponse.splitAddress.pincode}}</p><p ng-show=data.passportExtractedResponse.splitAddress.state><span class=uk-text-bold>State: </span>{{data.passportExtractedResponse.splitAddress.state}}</p><p ng-show=data.passportExtractedResponse.splitAddress.country><span class=uk-text-bold>Country: </span>{{data.passportExtractedResponse.splitAddress.country[2]}}</p><p ng-show=data.passportExtractedResponse.splitAddress.addressLine><span class=uk-text-bold>Addressline: </span>{{data.passportExtractedResponse.splitAddress.addressLine}}</p><hr></div><pre pretty-json=data.passportExtractedResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div></div>'), e.put("app/identities/passport/passport-face-extraction.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Passport Face Extraction</a></h1><p>To extract face from a Passport you need to send the following details. API responds with a url to just the face found from card.</p><br><br><div class="test-upload uk-placeholder uk-text-center mar-0"><div class=pad-left0 uk-lightbox><div ng-if="data.passport_files[0].length > 0"><a class=uk-inline ng-href={{data.passport_files[0]}}><img ng-src={{data.passport_files[0]}} width=400 height=400 ng-if="data.passport_files[0].indexOf(\'pdf\') == -1"></a><object data={{data.passport_files[0]}} type=application/pdf width=400 height=400 ng-if="data.passport_files[0].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.passport_files[0] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.passport_files[0] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.passport_files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.passport_files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Front file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=getFace()><h3 class=uk-text-bold>Passport Face Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Passport Front Image File</label><input class=uk-input type=text ng-model=data.passport_files[0] placeholder="Aadhaar Card Front Side Image(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.passport_files.length == 0"><span ng-hide=loading>Extract</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.passportFaceResponse && !loading"><p><center><b>CroppedImage:</b><br><img ng-src={{data.passportFaceResponse.cropped}} class=crop alt=""></center></p><div layout-padding></div><pre pretty-json=data.passportFaceResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div>'), e.put("app/identities/passport/passport-fetch.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Passport Fetch</a></h1><p class=uk-text-lead>Fetch Passport details</p><p>Fetch details of Passport from File Number and Date of Birth.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=fetch()><h3 class=uk-text-bold>Passport Details Fetch</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>File Number</label><input class=uk-input type=text ng-model=data.verifyData.fileNumber placeholder="File Number"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-horizontal-text>Date of Birth</label><datepicker date-format=dd/MM/yyyy style="width:332px !important"><input class=uk-input placeholder=dd/mm/yyyy ng-model=data.verifyData.dob type=text></datepicker></div><div class=marlt10>&nbsp;</div></div><div uk-margin class="uk-text-center uk-margin-large-top"><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.verifyData.fileNumber ==\'\' || data.verifyData.dob ==\'\'"><span ng-hide=loading>Verify</span> <span uk-spinner ng-show=loading></span></button></div></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.passportVerifiedResponse && !loading"><p ng-repeat="(key,value) in data.passportVerifiedResponse" ng-hide="key == \'splitAddress\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.passportVerifiedResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div>'), e.put("app/identities/passport/passport-mzr-decoder.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Passport MRZ Decoder</a></h1><p class=uk-text-lead>Passport MRZ Decoder</p><form class="uk-form-horizontal uk-margin-large" ng-submit=mrzDecoder()><h3 class=uk-text-bold>MRZ Decoder</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>MRZ First Line</label><input class=uk-input type=text ng-model=data.mrzData.mrzFirstLine placeholder="MRZ First Line"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>MRZ Second Line</label><input class=uk-input type=text ng-model=data.mrzData.mrzSecondLine placeholder="MRZ Second Line"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.mrzData.mrzFirstLine ==\'\' || data.mrzData.mrzSecondLine ==\'\'"><span ng-hide=loading>DECODE</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.passportMrzResponse && !loading"><p ng-repeat="(key,value) in data.passportMrzResponse" ng-hide="key == \'splitAddress\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.passportMrzResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div>'),
            e.put("app/identities/passport/passport-verification.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Passport Verification</a></h1><p class=uk-text-lead>Verifying Passport details</p><p>Card details should be manually validated, preferably by the card owner, before sending it for verification. For verification of Passport details, card number is mandatory along with atleast one of the fields from Name.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=verify()><h3 class=uk-text-bold>Passport Details Verification</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Name</label><input class=uk-input type=text ng-model=data.verifyData.name placeholder=Name></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>File Number</label><input class=uk-input type=text ng-model=data.verifyData.fileNumber placeholder="File Number"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Date of Birth</label><input class=uk-input type=text ng-model=data.verifyData.dob placeholder="Date of Birth"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Name Fuzzy Required</label><select class="uk-select w350" ng-model=data.verifyData.fuzzy><option value=true>TRUE</option><option value=false>FALSE</option></select></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.verifyData.name ==\'\' || data.verifyData.fileNumber ==\'\' || data.verifyData.dob ==\'\'"><span ng-hide=loading>Verify</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.passportVerifiedResponse && !loading"><p ng-repeat="(key,value) in data.passportVerifiedResponse" ng-hide="key == \'splitAddress\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.passportVerifiedResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div>'), e.put("app/identities/passportV2/extraction.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Passport Extraction</a></h1><p>To get an overview of the ID verification process visit here For best results, please make sure the image you use fits tightly in camera view and is horizontally-aligned. Each image/pdf should be less than 2MB.</p><hr class=uk-margin><p>Passport reading system accepts direct URL to the front and back sides.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0" uk-grid><div class="uk-width-1-2@s pad-left0" uk-lightbox><div ng-if=data.passport_files[0]><a class=uk-inline ng-href={{data.passport_files[0]}}><img ng-src="{{data.reviewFile[0] || data.passport_files[0]}}" max-width=50%; height="" alt="" ng-if="data.passport_files[0].indexOf(\'pdf\') == -1"></a><object data="{{data.reviewFile[0] || data.passport_files[0]}}" type=application/pdf width=400 height=400 ng-if="data.passport_files[0].indexOf(\'pdf\') != -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.passport_files[0] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.passport_files[0] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.passport_files[0]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.passport_files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Front file</span></div></div><div class="uk-width-1-2@s pad-left20" uk-lightbox><div ng-if=data.passport_files[1]><a class=uk-inline ng-href={{data.passport_files[1]}}><img ng-src="{{data.reviewFile[1] || data.passport_files[1]}}" max-width=50%; height="" alt="" ng-if="data.passport_files[1].indexOf(\'pdf\') == -1"></a><object data="{{data.reviewFile[1] || data.passport_files[1]}}" type=application/pdf width=400 height=400 ng-if="data.passport_files[1].indexOf(\'pdf\') != -1"></object><span ngf-select=fileUpload($file,1) ng-model=data.passport_files[1] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.passport_files[1] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.passport_files[1]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 1)" ng-model=data.passport_files[1] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Back file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=extract()><h3 class=uk-text-bold>passport Card Details Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>passport Front Image File</label><input class=uk-input ng-disabled=data.reviewFile[0] type=text ng-model=data.passport_files[0] placeholder="passport Card Front Side Image(URL)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>passport Back Image File</label><input class=uk-input ng-disabled=data.reviewFile[1] type=text ng-model=data.passport_files[1] placeholder="passport Card Back Side Image(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.passport_files.length < 2"><span ng-hide=loading>Extract</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.passportExtractedResponse && !loading"><div class=responseCard><p ng-show="true || data.passportExtractedResponse.parentsGuardianName"><span class=uk-text-bold>parentsGuardianName: </span>{{data.passportExtractedResponse.parentsGuardianName}}</p><p ng-show="true || data.passportExtractedResponse.issueDate"><span class=uk-text-bold>issueDate: </span>{{data.passportExtractedResponse.issueDate}}</p><p ng-show="true || data.passportExtractedResponse.expiryDate"><span class=uk-text-bold>expiryDate: </span>{{data.passportExtractedResponse.expiryDate}}</p><p ng-show="true || data.passportExtractedResponse.birthDate"><span class=uk-text-bold>birthDate: </span>{{data.passportExtractedResponse.birthDate}}</p><p ng-show="true || data.passportExtractedResponse.name"><span class=uk-text-bold>name: </span>{{data.passportExtractedResponse.name}}</p><p ng-show="true || data.passportExtractedResponse.country"><span class=uk-text-bold>country: </span>{{data.passportExtractedResponse.country}}</p><p ng-show="true || data.passportExtractedResponse.name"><span class=uk-text-bold>placeOfBirth: </span>{{data.passportExtractedResponse.placeOfBirth}}</p><p ng-show="true || data.passportExtractedResponse.country"><span class=uk-text-bold>placeOfIssue: </span>{{data.passportExtractedResponse.placeOfIssue}}</p><div ng-show=data.passportExtractedResponse.splitAddress><p ng-show=data.passportExtractedResponse.splitAddress.district><span class=uk-text-bold>District: </span>{{data.passportExtractedResponse.splitAddress.district}}</p><p ng-show=data.passportExtractedResponse.splitAddress.pincode><span class=uk-text-bold>Pincode: </span>{{data.passportExtractedResponse.splitAddress.pincode}}</p><p ng-show=data.passportExtractedResponse.splitAddress.state><span class=uk-text-bold>State: </span>{{data.passportExtractedResponse.splitAddress.state}}</p><p ng-show=data.passportExtractedResponse.splitAddress.country><span class=uk-text-bold>Country: </span>{{data.passportExtractedResponse.splitAddress.country[2]}}</p><p ng-show=data.passportExtractedResponse.splitAddress.addressLine><span class=uk-text-bold>Addressline: </span>{{data.passportExtractedResponse.splitAddress.addressLine}}</p><hr></div><pre pretty-json=data.passportExtractedResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div></div>'), e.put("app/identities/passportV2/fetch.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Passport Fetch</a></h1><p class=uk-text-lead>Fetch Passport details</p><p>Fetch details of Passport from File Number and Date of Birth.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=fetch()><h3 class=uk-text-bold>Passport Details Fetch</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>File Number</label><input class=uk-input type=text ng-model=data.verifyData.fileNumber placeholder="File Number"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-horizontal-text>Date of Birth</label><datepicker date-format=dd/MM/yyyy style="width:332px !important"><input class=uk-input placeholder=dd/mm/yyyy ng-model=data.verifyData.dob type=text></datepicker></div><div class=marlt10>&nbsp;</div></div><div uk-margin class="uk-text-center uk-margin-large-top"><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.verifyData.fileNumber ==\'\' || data.verifyData.dob ==\'\'"><span ng-hide=loading>Verify</span> <span uk-spinner ng-show=loading></span></button></div></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.passportFetchResponse && !loading"><p ng-repeat="(key,value) in data.passportFetchResponse" ng-hide="key == \'splitAddress\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.passportFetchResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div>'), e.put("app/identities/passportV2/verification.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Passport Verification</a></h1><p class=uk-text-lead>Verifying Passport details</p><p>Card details should be manually validated, preferably by the card owner, before sending it for verification. For verification of Passport details, card number is mandatory along with atleast one of the fields from Name.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=verify()><h3 class=uk-text-bold>Passport Details Verification</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Name</label><input class=uk-input type=text ng-model=data.verifyData.name placeholder=Name></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>File Number</label><input class=uk-input type=text ng-model=data.verifyData.fileNumber placeholder="File Number"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Date of Birth</label><input class=uk-input type=text ng-model=data.verifyData.dob placeholder="Date of Birth"></div></div><!-- <div class="uk-margin">\n                <div>\n                    <label class="uk-form-label" for="form-stacked-text">Name Fuzzy Required</label>\n                    <select class="uk-select w350" ng-model="data.verifyData.fuzzy">\n                        <option value="true" >TRUE</option>\n                        <option value="false" >FALSE</option>\n                    </select>\n                </div>\n            </div> --><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.verifyData.name ==\'\' || data.verifyData.fileNumber ==\'\' || data.verifyData.dob ==\'\'"><span ng-hide=loading>Verify</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.passportVerifiedResponse && !loading"><p ng-repeat="(key,value) in data.passportVerifiedResponse" ng-hide="key == \'splitAddress\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.passportVerifiedResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div>'), e.put("app/identities/peoplesearch/peoplefinder.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>People Finder test sandbox</a></h1><p>Try searching for any person here.</p><form class="uk-form-horizontal uk-margin-large" id=emailForm name=peopleForm ng-submit=peopleFinder()><h3 class=uk-text-bold>People Finder</h3><div class="uk-child-width-1-2@s uk-child-width-1-2@m" uk-grid><div><label class=uk-form-label for=form-stacked-text>Name</label><input class=uk-input type=text ng-model=data.name placeholder=Name></div><div><label class=uk-form-label for=form-stacked-text>UserId</label><input class=uk-input type=text ng-model=data.userId placeholder=UserId></div></div><div class="uk-child-width-1-2@s uk-child-width-1-2@m" uk-grid><div><label class=uk-form-label for=form-stacked-text>Email ID</label><input class=uk-input type=email ng-model=data.email placeholder="EmailID (Eg. ankit@signzy.com)"><div class=uk-text-danger ng-show=wrongInput>Please Enter a valid Email Number</div></div><div><label class=uk-form-label for=form-stacked-text>Phone</label><input class=uk-input type=text ng-model=data.phone placeholder=Phone></div></div><div class="uk-child-width-1-2@s uk-child-width-1-2@m" uk-grid><div><label class=uk-form-label for=form-stacked-text>Username</label><input class=uk-input type=text ng-model=data.username placeholder=Username></div><div><label class=uk-form-label for=form-stacked-text>Profile URL</label><input class=uk-input type=text ng-model=data.url placeholder="Profile Url"></div></div><div class="uk-child-width-1-2@s uk-child-width-1-2@m" uk-grid><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Country</label><select class=uk-select ng-model=data.country ng-init="data.country = countries[0].value"><option ng-value=country.value ng-repeat="country in countries">{{ country.name }}</option></select></div></div><div><label class=uk-form-label for=form-stacked-text>State</label><input class=uk-input type=text ng-model=data.state placeholder=State></div></div><div class="uk-child-width-1-2@s uk-child-width-1-2@m" uk-grid><div><label class=uk-form-label for=form-stacked-text>City</label><input class=uk-input type=text ng-model=data.city placeholder=City></div><div><label class=uk-form-label for=form-stacked-text>Street</label><input class=uk-input type=text ng-model=data.street placeholder=Street></div></div><div class="uk-child-width-1-2@s uk-child-width-1-2@m" uk-grid><div><label class=uk-form-label for=form-stacked-text>House</label><input class=uk-input type=text ng-model=data.house placeholder=House></div><div><label class=uk-form-label for=form-stacked-text>Zipcode</label><input class=uk-input type=text ng-model=data.zipcode placeholder=Zipcode></div></div><div class="uk-child-width-1-2@s uk-child-width-1-2@m" uk-grid><div><label class=uk-form-label for=form-stacked-text>Address</label><input class=uk-input type=text ng-model=data.address placeholder=Address></div><div><label class=uk-form-label for=form-stacked-text>Age Range</label><input class=uk-input type=text ng-model=data.ageRange placeholder="Age Range"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="!data.name || (!data.email && !data.phone)"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.peopleData && !loading"><pre pretty-json=data.peopleData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/identities/usedCar/ manufacturer.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Used Car ManufacturerList</a></h1><!-- <p class="uk-text-lead">Fetching Used car Manufacturer List</p> --><form class="uk-form-horizontal uk-margin-large" name=usedCarForm><h3 class=uk-text-bold>Manufacturer List Details For Used Car</h3><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=usedCarForm.$invalid ng-click=manufacturer()><span ng-hide=loading>Fetch</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.usedCarResponse && !loading"><pre pretty-json=data.usedCarResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/identities/usedCar/model.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Used Car ModelList</a></h1><p class=uk-text-lead>Fetching Used car Model List</p><form class="uk-form-horizontal uk-margin-large" name=usedCarForm><h3 class=uk-text-bold>Model List Details For Used Car</h3><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Manufacturer Name</label><input class=uk-input type=text ng-model=data.manufacturerName placeholder="Manufacturer Name" required></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=usedCarForm.$invalid ng-click=model()><span ng-hide=loading>Fetch</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.usedCarResponse && !loading"><pre pretty-json=data.usedCarResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/identities/usedCar/price.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Used Car Price</a></h1><p class=uk-text-lead>Fetching Used car Price</p><form class="uk-form-horizontal uk-margin-large" name=usedCarForm><h3 class=uk-text-bold>Price Details For Used Car</h3><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Manufacturer Name</label><select class=uk-select ng-model=data.manufacturerName ng-init="data.manufacturerName = inputData.manufacturerList[0]" ng-change=model() required><option ng-value=manufacturer ng-repeat="manufacturer in inputData.manufacturerList">{{ manufacturer }}</option></select></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Model Name</label><select class=uk-select ng-model=data.modelName ng-init="data.modelName = inputData.modelList[0]" ng-change=year() required><option ng-value=modelName ng-repeat="modelName in inputData.modelList">{{ modelName }}</option></select></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Year</label><select class=uk-select ng-model=data.year ng-init="data.year = inputData.yearList[0]" ng-change=trim() required><option ng-value=year ng-repeat="year in inputData.yearList">{{ year }}</option></select></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Kms Driven</label><input class=uk-input type=text ng-model=data.kmsDriven placeholder="Kms Driven" required></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Trim Name</label><select class=uk-select ng-model=data.trimName ng-init="data.trimName = inputData.trimList[0]" required><option ng-value=trimName ng-repeat="trimName in inputData.trimList">{{ trimName }}</option></select></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Transaction Type</label><select class=uk-select ng-model=data.transactionType><option value=s>Sell</option><option value=b>Buy</option></select></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Customer Type</label><select class=uk-select ng-model=data.customerType ng-init=data.customerType><option value=dealer>Dealer</option><option value=individual>Individual</option></select></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>City</label><select class=uk-select ng-model=data.city ng-init="data.city = inputData.cityList[0]" required><option ng-value=city ng-repeat="city in inputData.cityList track by $index">{{ city }}</option></select></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=usedCarForm.$invalid ng-click=price()><span ng-hide=loading>Fetch</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.usedCarResponse && !loading"><pre pretty-json=data.usedCarResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/identities/usedCar/trim.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Used Car Trim</a></h1><p class=uk-text-lead>Fetching Used car Trim</p><form class="uk-form-horizontal uk-margin-large" name=usedCarForm><h3 class=uk-text-bold>Trim Details For Used Car</h3><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Manufacturer Name</label><input class=uk-input type=text ng-model=data.manufacturerName placeholder="Manufacturer Name" required></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Model Name</label><input class=uk-input type=text ng-model=data.modelName placeholder="Model Name" required></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Year</label><input class=uk-input type=text ng-model=data.year placeholder=Year required></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=usedCarForm.$invalid ng-click=trim()><span ng-hide=loading>Fetch</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.usedCarResponse && !loading"><pre pretty-json=data.usedCarResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/identities/usedCar/year.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Used Car Year List</a></h1><p class=uk-text-lead>Fetching Used car Year List</p><form class="uk-form-horizontal uk-margin-large" name=usedCarForm><h3 class=uk-text-bold>Year Details For Used Car</h3><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Manufacturer Name</label><input class=uk-input type=text ng-model=data.manufacturerName placeholder="Manufacturer Name" required></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Model Name</label><input class=uk-input type=text ng-model=data.modelName placeholder="Model Name" required></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=usedCarForm.$invalid ng-click=year()><span ng-hide=loading>Fetch</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.usedCarResponse && !loading"><pre pretty-json=data.usedCarResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/identities/vaccine/vaccine-generateOTP.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Vaccine Generate OTP</a></h1><p class=uk-text-lead>Generate OTP</p><form class="uk-form-horizontal uk-margin-large" name=panFetchForm><h3 class=uk-text-bold>Generate OTP for Vaccination Details</h3><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Mobile number</label><input class=uk-input type=text ng-model=data.mobileNumber placeholder="Mobile number" required></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=vaccineGenerateOTP.$invalid ng-click=generateOTP()><span ng-hide=loading>Verify</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.generateOTPResponse && !loading"><pre pretty-json=data.generateOTPResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/identities/vaccine/vaccine-vaccinationDetails.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Vaccination Details</a></h1><p class=uk-text-lead>Vaccination Details</p><form class="uk-form-horizontal uk-margin-large" name=panFetchForm><h3 class=uk-text-bold>Vaccination Details Fetch</h3><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Request Id</label><input class=uk-input type=text ng-model=data.requestId placeholder="Request Id" required><label class=uk-form-label for=form-stacked-text>OTP</label><input class=uk-input type=text ng-model=data.otp placeholder=OTP required></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=vaccinationDetails.$invalid ng-click=vaccinationDetails()><span ng-hide=loading>Verify</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.vaccinationDetailsResp && !loading"><pre pretty-json=data.vaccinationDetailsResp></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/identities/vehicleregistration/basic-vehicleregistration.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Vehicle Registration(Basic Search) test sandbox</a></h1><p>Try searching for any Vehicle Number here.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=basicSearch()><h3 class=uk-text-bold>Vehicle Registration Basic Search</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Vehicle Registration Number</label><input class=uk-input type=text ng-model=data.vehicleNumber placeholder="vehicleregistration (Eg. MH12BG7237)"><div class=uk-text-danger ng-show=wrongInput>Please Enter a valid Vehicle Registration Number</div></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.vehicleNumber ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.vehicleregistrationData && !loading"><p ng-repeat="(key,value) in data.vehicleregistrationData" ng-hide="key == \'splitAddress\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.vehicleregistrationData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/identities/vehicleregistration/challan-search.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Vehicle Registration(Challan Search) test sandbox</a></h1><p>Try searching for any Vehicle Number here.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=challanSearch(true)><h3 class=uk-text-bold>Vehicle Registration Challan Search</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Vehicle Registration Number</label><input class=uk-input type=text ng-model=data.vehicleNumber placeholder="vehicleregistration (Eg. MH12BG7237)"><div class=uk-text-danger ng-show=wrongInput>Please Enter a valid Vehicle Registration Number</div></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.vehicleNumber ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.vehicleregistrationData && !loading"><!-- <p ng-repeat="(key,value) in data.vehicleregistrationData" ng-hide ="key == \'splitAddress\'">\n                        <span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class="pad-left10" ng-bind="value"></span>\n                </p> --><pre pretty-json=data.vehicleregistrationData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/identities/vehicleregistration/check-stolen-vehicle.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Check Stolen Vehicle test sandbox</a></h1><p>Try searching for any Vehicle Number here.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=checkStolenVehicle()><h3 class=uk-text-bold>Check Stolen Vehicle</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Vehicle Registration Number</label><input class=uk-input type=text ng-model=data.stolen.vehicleNumber placeholder="vehicleregistration (Eg. MH12BG7237)"><div class=uk-text-danger ng-show=wrongInput>Please Enter a valid Vehicle Registration Number</div></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Vehicle Type</label><select class=uk-select ng-model=data.stolen.vehicleType ng-init="data.stolen.vehicleType = stolenVehicleTypeList[0]"><option ng-value=type ng-repeat="type in stolenVehicleTypeList">{{ type }}</option></select></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.stolen.vehicleNumber ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.vehicleregistrationData && !loading"><!-- <p ng-repeat="(key,value) in data.vehicleregistrationData" ng-hide ="key == \'splitAddress\'">\n                        <span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class="pad-left10" ng-bind="value"></span>\n                </p> --><pre pretty-json=data.vehicleregistrationData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'),
            e.put("app/identities/vehicleregistration/detailed-vehicleregistration-beta.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Vehicle Registration(Detailed Search (Beta Version)) test sandbox</a></h1><p>Try searching for any Vehicle Number here.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=detailedSearch(true)><h3 class=uk-text-bold>Vehicle Registration Detailed Search</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Vehicle Registration Number</label><input class=uk-input type=text ng-model=data.vehicleNumber placeholder="vehicleregistration (Eg. MH12BG7237)"><div class=uk-text-danger ng-show=wrongInput>Please Enter a valid Vehicle Registration Number</div></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.vehicleNumber ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.vehicleregistrationData && !loading"><!-- <p ng-repeat="(key,value) in data.vehicleregistrationData" ng-hide ="key == \'splitAddress\'">\n                        <span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class="pad-left10" ng-bind="value"></span>\n                </p> --><pre pretty-json=data.vehicleregistrationData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/identities/vehicleregistration/detailed-vehicleregistration.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Vehicle Registration(Detailed Search) test sandbox</a></h1><p>Try searching for any Vehicle Number here.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=detailedSearch()><h3 class=uk-text-bold>Vehicle Registration Detailed Search</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Vehicle Registration Number</label><input class=uk-input type=text ng-model=data.vehicleNumber placeholder="vehicleregistration (Eg. MH12BG7237)"><div class=uk-text-danger ng-show=wrongInput>Please Enter a valid Vehicle Registration Number</div></div><div class="uk-margin uk-grid-small uk-child-width-auto uk-grid"><label class=uk-form-label for=form-stacked-text style=margin-top:0>Blacklist Check Required</label><label><input class=uk-radio type=radio ng-model=data.blacklistCheck value=true name=radio2> Yes</label><label><input class=uk-radio type=radio ng-model=data.blacklistCheck value=false name=radio2> No</label></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.vehicleNumber ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.vehicleregistrationData && !loading"><!-- <p ng-repeat="(key,value) in data.vehicleregistrationData" ng-hide ="key == \'splitAddress\'">\n                        <span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class="pad-left10" ng-bind="value"></span>\n                </p> --><pre pretty-json=data.vehicleregistrationData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/identities/vehicleregistration/otp-vehicleregistration.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Vehicle Registration (OTP Based Search) test sandbox</a></h1><p>Try searching for any Vehicle Number here.</p><form class="uk-form-horizontal uk-margin-large" ng-submit="otpFlow(\'generateOtp\')"><h3 class=uk-text-bold>Generate OTP</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Vehicle Registration Number</label><input class=uk-input maxlength=10 type=text ng-model=data.vehicleNumber placeholder="vehicleregistration (Eg. MH12BG7237)"><div class=uk-text-danger ng-show=wrongInput>Please Enter a valid Vehicle Registration Number</div></div><div><label class=uk-form-label for=form-stacked-text>Mobile Number</label><input class=uk-input maxlength=10 type=text ng-model=data.mobileNumber placeholder="Mobile Number"><div class=uk-text-danger ng-show=wrongInput>Please Enter a valid Mobile Number</div></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="!data.vehicleNumber || !data.mobileNumber"><span ng-hide=loading>Generate OTP</span> <span uk-spinner ng-show=loading></span></button></p></form><form class="uk-form-horizontal uk-margin-large" ng-submit="otpFlow(\'submitOtp\')"><h3 class=uk-text-bold>Submit OTP</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Reference ID</label><input class=uk-input type=text ng-model=data.referenceId placeholder="Reference ID"></div><div><label class=uk-form-label for=form-stacked-text>OTP</label><input class=uk-input maxlength=6 type=text ng-model=data.otp placeholder=OTP></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="!data.referenceId || !data.otp"><span ng-hide=loading>Submit OTP</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.vehicleregistrationData && !loading"><!-- <p ng-repeat="(key,value) in data.vehicleregistrationData" ng-hide ="key == \'splitAddress\'">\n                        <span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class="pad-left10" ng-bind="value"></span>\n                </p> --><pre pretty-json=data.vehicleregistrationData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/identities/voterIdV2/epicNumberSearch.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Individual (Voter-ID) test sandbox</a></h1><p class=uk-text-lead>Fetching VoterID card details</p><p>Try searching for any individual here.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=search()><h3 class=uk-text-bold>VoterID Card Details Epic Number Search</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Epic Number</label><input class=uk-input type=text ng-model=data.searchData.epicNumber placeholder="Epic Number"></div></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>State</label><select class=uk-select ng-model=data.searchData.state ng-init="data.searchData.state == \'\'? data.searchData.state = states[0].name : data.searchData.state"><option ng-value=state.name ng-repeat="state in states">{{ state.name }}</option></select></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.epicNumber ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.voterSearchData && !loading"><p ng-repeat="(key,value) in data.voterSearchData" ng-hide="key == \'splitAddress\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.voterSearchData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/identities/voterIdV2/extraction.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Voterid Extraction</a></h1><p class=uk-text-lead>Auto-reading VoterID card</p><p>First upload the two sides of an VoterID card. Then click on extraction. You may put direct URLs to front and back sides, in case you have them.</p><p>The <b>Auto-Read</b> API prefils verification section. Please <b>validate</b> the data before sending for verification.</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and is horizontally-aligned.</p><p>Each <b>image/pdf</b> should be less than <b>2MB</b>.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0" uk-grid><div class="uk-width-1-2@s pad-left0" uk-lightbox><div ng-if="data.voterid_files[0].length > 0"><a class=uk-inline ng-href={{data.voterid_files[0]}}><img ng-src={{data.voterid_files[0]}} width=400 height=400 ng-if="data.voterid_files[0].indexOf(\'pdf\') == -1"></a><object data={{data.voterid_files[0]}} type=application/pdf width=400 height=400 ng-if="data.voterid_files[0].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.voterid_files[0] uk-icon="icon: file-edit" class=uk-link ng-if="data.voterid_files[0].length > 0">&nbsp;</span> <a ng-click="data.voterid_files[0] =\'\'" uk-icon="icon: trash" ng-if="data.voterid_files[0].length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.voterid_files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.voterid_files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Front file</span></div></div><div class="uk-width-1-2@s pad-left20" uk-lightbox><div ng-if=data.voterid_files[1]><a class=uk-inline ng-href={{data.voterid_files[1]}}><img ng-src={{data.voterid_files[1]}} width=400 height=400 ng-if="data.voterid_files[1].indexOf(\'pdf\') == -1"></a><object data={{data.voterid_files[1]}} type=application/pdf width=400 height=400 ng-if="data.voterid_files[1].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,1) ng-model=data.voterid_files[1] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.voterid_files[1] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.voterid_files[1]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 1)" ng-model=data.voterid_files[1] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Back file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=extract()><h3 class=uk-text-bold>Voterid Card Details Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Voterid Front Image File</label><input class=uk-input type=text ng-model=data.voterid_files[0] placeholder="Voterid Card Front Side Image(URL)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Voterid Back Image File</label><input class=uk-input type=text ng-model=data.voterid_files[1] placeholder="Voterid Card Back Side Image(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.voterid_files.length < 2"><span ng-hide=loading>Extract</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.voteridExtractedResponse && !loading"><pre pretty-json=data.voteridExtractedResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div>'), e.put("app/identities/voterIdV2/verification.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Individual (Voter-ID) test sandbox</a></h1><p class=uk-text-lead>Verifying VoterID card details</p><p>Try searching for any individual here.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=verify()><h3 class=uk-text-bold>VoterID Card Details Verification</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Epic Number</label><input class=uk-input type=text ng-model=data.verifyData.epicNumber placeholder="Epic Number"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Name</label><input class=uk-input type=text ng-model=data.verifyData.name placeholder="Enter Name"></div></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>State</label><select class=uk-select ng-model=data.verifyData.state ng-init="data.verifyData.state = states[1].name"><option ng-value=state.name ng-repeat="state in states.slice(1)">{{ state.name }}</option></select></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.verifyData.name ==\'\' || data.verifyData.epicNumber ==\'\'"><span ng-hide=loading>Verify</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.voterIdVerifiedResponse && !loading"><div class=responseCard><p ng-show="true || data.voterIdVerifiedResponse.verified"><span class=uk-text-bold>Verified: </span>{{data.voterIdVerifiedResponse.verification}}</p><p ng-show="true || data.voterIdVerifiedResponse.message"><span class=uk-text-bold>Message: </span>{{data.voterIdVerifiedResponse.message}}</p></div><pre pretty-json=data.voterIdVerifiedResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div>'), e.put("app/identities/voterid/voter-id-detailed-epic-number-search.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Individual (Voter-ID) Detailed test sandbox</a></h1><p class=uk-text-lead>Fetching VoterID card details</p><p>Try searching for any individual here.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=detailedSearch()><h3 class=uk-text-bold>VoterID Card Details Detailed Epic Number Search</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Epic Number</label><input class=uk-input type=text ng-model=data.searchData.epicNumber placeholder="Epic Number"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.searchData.epicNumber ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.voterSearchData && !loading"><p ng-repeat="(key,value) in data.voterSearchData" ng-hide="key == \'splitAddress\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.voterSearchData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/identities/voterid/voter-id-epic-number-search.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Individual (Voter-ID) test sandbox</a></h1><p class=uk-text-lead>Fetching VoterID card details</p><p>Try searching for any individual here.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=search()><h3 class=uk-text-bold>VoterID Card Details Epic Number Search</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Epic Number</label><input class=uk-input type=text ng-model=data.searchData.epicNumber placeholder="Epic Number"></div></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>State</label><select class=uk-select ng-model=data.searchData.state ng-init="data.searchData.state == \'\'? data.searchData.state = states[0].name : data.searchData.state"><option ng-value=state.name ng-repeat="state in states">{{ state.name }}</option></select></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.searchData.epicNumber ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.voterSearchData && !loading"><p ng-repeat="(key,value) in data.voterSearchData" ng-hide="key == \'splitAddress\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.voterSearchData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/identities/voterid/voter-id-extraction.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Voterid Extraction</a></h1><p class=uk-text-lead>Auto-reading VoterID card</p><p>First upload the two sides of an VoterID card. Then click on extraction. You may put direct URLs to front and back sides, in case you have them.</p><p>The <b>Auto-Read</b> API prefils verification section. Please <b>validate</b> the data before sending for verification.</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and is horizontally-aligned.</p><p>Each <b>image/pdf</b> should be less than <b>2MB</b>.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0" uk-grid><div class="uk-width-1-2@s pad-left0" uk-lightbox><div ng-if="data.voterid_files[0].length > 0"><a class=uk-inline ng-href={{data.voterid_files[0]}}><img ng-src={{data.voterid_files[0]}} width=400 height=400 ng-if="data.voterid_files[0].indexOf(\'pdf\') == -1"></a><object data={{data.voterid_files[0]}} type=application/pdf width=400 height=400 ng-if="data.voterid_files[0].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.voterid_files[0] uk-icon="icon: file-edit" class=uk-link ng-if="data.voterid_files[0].length > 0">&nbsp;</span> <a ng-click="data.voterid_files[0] =\'\'" uk-icon="icon: trash" ng-if="data.voterid_files[0].length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.voterid_files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.voterid_files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Front file</span></div></div><div class="uk-width-1-2@s pad-left20" uk-lightbox><div ng-if=data.voterid_files[1]><a class=uk-inline ng-href={{data.voterid_files[1]}}><img ng-src={{data.voterid_files[1]}} width=400 height=400 ng-if="data.voterid_files[1].indexOf(\'pdf\') == -1"></a><object data={{data.voterid_files[1]}} type=application/pdf width=400 height=400 ng-if="data.voterid_files[1].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,1) ng-model=data.voterid_files[1] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.voterid_files[1] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.voterid_files[1]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 1)" ng-model=data.voterid_files[1] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Back file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=extract()><h3 class=uk-text-bold>Voterid Card Details Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Voterid Front Image File</label><input class=uk-input type=text ng-model=data.voterid_files[0] placeholder="Voterid Card Front Side Image(URL)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Voterid Back Image File</label><input class=uk-input type=text ng-model=data.voterid_files[1] placeholder="Voterid Card Back Side Image(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.voterid_files.length < 2"><span ng-hide=loading>Extract</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.voteridExtractedResponse && !loading"><pre pretty-json=data.voteridExtractedResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div>'), e.put("app/identities/voterid/voter-id-verification.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Individual (Voter-ID) test sandbox</a></h1><p class=uk-text-lead>Verifying VoterID card details</p><p>Try searching for any individual here.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=verify()><h3 class=uk-text-bold>VoterID Card Details Verification</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Epic Number</label><input class=uk-input type=text ng-model=data.verifyData.epicNumber placeholder="Epic Number"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Name</label><input class=uk-input type=text ng-model=data.verifyData.name placeholder="Enter Name"></div></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>State</label><select class=uk-select ng-model=data.verifyData.state ng-init="data.verifyData.state = states[0].name"><option ng-value=state.name ng-repeat="state in states.slice(0)">{{ state.name }}</option></select></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.verifyData.name ==\'\' || data.verifyData.epicNumber ==\'\'"><span ng-hide=loading>Verify</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.voterIdVerifiedResponse && !loading"><div class=responseCard><p ng-show="true || data.voterIdVerifiedResponse.verified"><span class=uk-text-bold>Verified: </span>{{data.voterIdVerifiedResponse.verification}}</p><p ng-show="true || data.voterIdVerifiedResponse.message"><span class=uk-text-bold>Message: </span>{{data.voterIdVerifiedResponse.message}}</p></div><pre pretty-json=data.voterIdVerifiedResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div>'), e.put("app/investment/mutualFund/mfCASExtraction.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Mutual Fund CAS extraction</a></h1><p class=uk-text-lead>Mutual Fund CAS extraction</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0"><div class=pad-left0 uk-lightbox><div ng-if=data.details.url><object data={{data.details.url}} ngf-pattern="\'application/pdf\'" ngf-accept="\'application/pdf\'" type=application/pdf width=300 height=300 ng-if="data.details.url.indexOf(\'pdf\') != -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.details.url uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.details.url =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.details.url><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.details.url ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=casExtraction()><h3 class=uk-text-bold>Mutual Fund CAS extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>CAS File PDF URL</label><input class=uk-input type=text ng-model=data.casExtraction.file placeholder="CAS PDF(URL)" required></div></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Password</label><input class=uk-input type=text ng-model=data.casExtraction.password placeholder="Password to open PDF"></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.casExtraction.file == \'\'"><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.casResponse && !loading"><pre pretty-json=data.casResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/lending/gstanalytics/create-request.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>GSTAnalytics Create Request</a></h1><form class="uk-form-horizontal uk-margin-large" ng-submit=createRequest()><h3 class=uk-text-bold>Create Request</h3><div class="uk-margin uk-grid-small uk-child-width-auto uk-grid"><label class=uk-form-label for=form-stacked-text style=margin-top:0>Authentication Mode</label><label><input class=uk-radio type=radio ng-model=data.authType value=OTP name=radio2> OTP</label><label><input class=uk-radio type=radio ng-model=data.authType value=PASSWORD name=radio2> PASSWORD</label></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>GSTIN Numbers</label><input class=uk-input type=text ng-model=data.gstin placeholder=GSTINs></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Username</label><input class=uk-input type=text ng-model=data.username placeholder=Username></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Password</label><input class=uk-input type=text ng-model=data.password placeholder="Password(needed only if authMode is PASSWORD)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>From Date</label><input class=uk-input type=text ng-model=data.fromDate placeholder="in MMYYYY format"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>To Date</label><input class=uk-input type=text ng-model=data.toDate placeholder="in MMYYYY format"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>CallBack URL</label><input class=uk-input type=text ng-model=data.callBackUrl placeholder="callback url"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.gstin ==\'\' || data.username ==\'\'"><span ng-hide=loading>Create Request</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.createResponse && !loading"><pre pretty-json=data.createResponse></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div></div>'), e.put("app/lending/gstanalytics/get-report.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Fetch GST analytics Report</a></h1><form class="uk-form-horizontal uk-margin-large" ng-submit=getAnalyticsReport()><h3 class=uk-text-bold>Get Report</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>GSTIN Number</label><input class=uk-input type=text ng-model=data.gstin placeholder="GSTIN Number"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Request ID</label><input class=uk-input type=number ng-model=data.requestId placeholder="requestId(recieved in createRequest response)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.gstin ==\'\' || data.requestId ==\'\'"><span ng-hide=loading>Fetch Report</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.getReportReponse && !loading"><pre pretty-json=data.getReportReponse></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div></div>'), e.put("app/lending/gstanalytics/submit-otp.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>GSTR Auth Token Request</a></h1><form class="uk-form-horizontal uk-margin-large" ng-submit=submitOtp()><h3 class=uk-text-bold>Submit OTP</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>GSTIN Number</label><input class=uk-input type=text ng-model=data.gstin placeholder="GSTIN Number"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Request ID</label><input class=uk-input type=number ng-model=data.requestId placeholder="requestId(recieved in createRequest response)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>OTP</label><input class=uk-input type=text ng-model=data.otp placeholder=OTP></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.gstin ==\'\' || data.requestId ==\'\' || data.otp ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.submitOtpReponse && !loading"><pre pretty-json=data.submitOtpReponse></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div></div>'), e.put("app/lending/gstr/authtoken-request.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>GSTR Auth Token Request</a></h1><form class="uk-form-horizontal uk-margin-large" ng-submit=authTokenRequest()><h3 class=uk-text-bold>Auth Token Request</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>GSTIN Number</label><input class=uk-input type=text ng-model=data.gstin placeholder="GSTIN Number"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Username</label><input class=uk-input type=text ng-model=data.username placeholder=Username></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>OTP</label><input class=uk-input type=text ng-model=data.otp placeholder=OTP></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>APP KEY</label><input class=uk-input type=text ng-model=data.appKey placeholder="APP KEY"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.gstin ==\'\' || data.username ==\'\' || data.otp ==\'\' || data.appKey ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.authReponse && !loading"><pre pretty-json=data.authReponse></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div></div>'),
            e.put("app/lending/gstr/delinquency.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Entity Delinquency in Payment Calculation</a></h1><p class=uk-text-lead>Get Delinquency in Payment Calculation from GSTIN and Username</p><form class="uk-form-horizontal uk-margin-large" ng-submit=delinquencyRequest()><h3 class=uk-text-bold>Entity</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>GSTIN Number</label><input class=uk-input type=text ng-model=data.gstin placeholder="GSTIN Number"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Username</label><input class=uk-input type=text ng-model=data.username placeholder=Username></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Auth Token</label><input class=uk-input type=text ng-model=data.authToken placeholder="Auth Token"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Secret Key</label><input class=uk-input type=text ng-model=data.sek placeholder="Secret Key"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>APP KEY</label><input class=uk-input type=text ng-model=data.appKey placeholder="APP KEY"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Return Period</label><input class=uk-input type=text ng-model=data.retPeriod placeholder="Return Period (Eg: 03/2018)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.gstin ==\'\' || data.username ==\'\' || data.authToken ==\'\' || data.sek ==\'\' || data.retPeriod ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.returnResponse && !loading"><pre pretty-json=data.returnResponse></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div></div>'), e.put("app/lending/gstr/discrepancy.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Entity Discrepancy in Payment Calculation</a></h1><p class=uk-text-lead>Get Discrepancy in Payment Calculation from GSTIN and Username</p><form class="uk-form-horizontal uk-margin-large" ng-submit=discrepancyRequest()><h3 class=uk-text-bold>Entity</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>GSTIN Number</label><input class=uk-input type=text ng-model=data.gstin placeholder="GSTIN Number"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Username</label><input class=uk-input type=text ng-model=data.username placeholder=Username></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Auth Token</label><input class=uk-input type=text ng-model=data.authToken placeholder="Auth Token"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Secret Key</label><input class=uk-input type=text ng-model=data.sek placeholder="Secret Key"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>APP KEY</label><input class=uk-input type=text ng-model=data.appKey placeholder="APP KEY"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Return Period</label><input class=uk-input type=text ng-model=data.retPeriod placeholder="Return Period (Eg: 03/2018)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.gstin ==\'\' || data.username ==\'\' || data.authToken ==\'\' || data.sek ==\'\' || data.retPeriod ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.returnResponse && !loading"><pre pretty-json=data.returnResponse></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div></div>'), e.put("app/lending/gstr/gross-profit.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Gross Profit Calculation</a></h1><p class=uk-text-lead>Get Gross Profit Calculation from GSTIN and Username</p><form class="uk-form-horizontal uk-margin-large" ng-submit=grossProfitRequest()><h3 class=uk-text-bold>Entity</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>GSTIN Number</label><input class=uk-input type=text ng-model=data.gstin placeholder="GSTIN Number"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Username</label><input class=uk-input type=text ng-model=data.username placeholder=Username></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Auth Token</label><input class=uk-input type=text ng-model=data.authToken placeholder="Auth Token"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Secret Key</label><input class=uk-input type=text ng-model=data.sek placeholder="Secret Key"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>APP KEY</label><input class=uk-input type=text ng-model=data.appKey placeholder="APP KEY"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Return Period</label><input class=uk-input type=text ng-model=data.retPeriod placeholder="Return Period (Eg: 03/2018)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.gstin ==\'\' || data.username ==\'\' || data.authToken ==\'\' || data.sek ==\'\' || data.retPeriod ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.returnResponse && !loading"><pre pretty-json=data.returnResponse></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div></div>'), e.put("app/lending/gstr/otp-request.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>GSTR OTP Request</a></h1><form class="uk-form-horizontal uk-margin-large" ng-submit=otpRequest()><h3 class=uk-text-bold>OTP Request</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>GSTIN Number</label><input class=uk-input type=text ng-model=data.gstin placeholder="GSTIN Number"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Username</label><input class=uk-input type=text ng-model=data.username placeholder=Username></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.gstin ==\'\' || data.username ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.otpResponse && !loading"><pre pretty-json=data.otpResponse></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div></div>'), e.put("app/lending/gstr/turn-over.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Entity Turn Over Calculation</a></h1><p class=uk-text-lead>Get Entity Turn Over from GSTIN and Username</p><form class="uk-form-horizontal uk-margin-large" ng-submit=turnOverRequest()><h3 class=uk-text-bold>Entity</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>GSTIN Number</label><input class=uk-input type=text ng-model=data.gstin placeholder="GSTIN Number"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Username</label><input class=uk-input type=text ng-model=data.username placeholder=Username></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Auth Token</label><input class=uk-input type=text ng-model=data.authToken placeholder="Auth Token"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Secret Key</label><input class=uk-input type=text ng-model=data.sek placeholder="Secret Key"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>APP KEY</label><input class=uk-input type=text ng-model=data.appKey placeholder="APP KEY"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Return Period</label><input class=uk-input type=text ng-model=data.retPeriod placeholder="Return Period (Eg: 03/2018)"></div></div><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Turn Over Type</label><select class=uk-select ng-model=data.task><option value=monthlyTurnover>Monthly Turnover</option><option value=compositionQuarterlyTurnover>Composition Quarterly Turnover</option><option value=ecomMonthlyTurnover>ECommerce Monthly Turnover</option><option value=regularYearlyTurnover>Regular Yearly Turnover</option></select></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.gstin ==\'\' || data.username ==\'\' || data.authToken ==\'\' || data.sek ==\'\' || data.retPeriod ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.returnResponse && !loading"><pre pretty-json=data.returnResponse></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div></div>'), e.put("app/lending/revenue/revenue-profit-after-tax.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Revenue(Profit After Tax) test sandbox</a></h1><p class=uk-text-lead>Find the revenue(Profit After Tax) for Indian Companies</p><p>In the revenue(Profit After Tax) for Indian Companies Search section, you need to put the CIN of the company for which more info needs to be pulled.</p><br><br><form class="uk-form-horizontal uk-margin-large" ng-submit=patRequest()><h3 class=uk-text-bold>Search By CIN</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>CIN</label><input class=uk-input type=text ng-model=data.cin placeholder=CIN autocomplete=off></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Callback URL</label><input class=uk-input type=text ng-model=data.callbackUrl placeholder="Callback URL" autocomplete=off></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="!data.cin || data.cin.length == 0 || !data.callbackUrl || data.callbackUrl.length == 0"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><div class="uk-card uk-card-body bg-grey" ng-show="data.revenueResponse && !loading"><!-- <p ng-repeat="(key,value) in data.revenueResponse" ng-hide ="key == \'splitAddress\'">\n                        <span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class="pad-left10" ng-bind="value"></span>\n                </p> --><pre pretty-json=data.revenueResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/lending/roc/companyconsolidated-data-status.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Company Consolidated Data(Data Status)</a></h1><p class=uk-text-lead>Company Consolidated Data Status</p><p>In the Company Consolidated Data Status section, you need to put the CIN and optionally a callbackUrl</p><br><br><form class="uk-form-horizontal uk-margin-large" ng-submit=getDataStatus()><h3 class=uk-text-bold>Data Status</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>CIN</label><input class=uk-input type=text ng-model=data.cin placeholder=CIN autocomplete=off></div><div><label class=uk-form-label for=form-stacked-text>Callback URL (optional)</label><input class=uk-input type=text ng-model=data.callbackUrl placeholder="Callback URL" autocomplete=off></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=!data.cin><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><div class="uk-card uk-card-body bg-grey" ng-show="data.getResponse && !loading"><!-- <p ng-repeat="(key,value) in data.getResponse" ng-hide ="key == \'splitAddress\'">\n                        <span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class="pad-left10" ng-bind="value"></span>\n                </p> --><pre pretty-json=data.getResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/lending/roc/companyconsolidated-fetch-data.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Company Consolidated Data(Fetch By CIN) test sandbox</a></h1><p class=uk-text-lead>Company Consolidated Data Search</p><p>In the Company Consolidated Data Search section, you need to put the CIN of the company for which more info needs to be pulled.</p><br><br><form class="uk-form-horizontal uk-margin-large" ng-submit=companyRequest()><h3 class=uk-text-bold>Fetch By CIN</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>CIN</label><input class=uk-input type=text ng-model=data.cin placeholder=CIN autocomplete=off></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Callback URL</label><input class=uk-input type=text ng-model=data.callbackUrl placeholder="Callback URL" autocomplete=off></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="!data.cin || data.cin.length == 0 || !data.callbackUrl || data.callbackUrl.length == 0"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><div class="uk-card uk-card-body bg-grey" ng-show="data.companyResponse && !loading"><!-- <p ng-repeat="(key,value) in data.companyResponse" ng-hide ="key == \'splitAddress\'">\n                        <span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class="pad-left10" ng-bind="value"></span>\n                </p> --><pre pretty-json=data.companyResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/lending/roc/companyconsolidated-fetch-financial-data-realtime.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Company Consolidated Data(Fetch Financial Data By CIN Realtime) Summary Request </a></h1><p class=uk-text-lead>Company Consolidated Realtime Financial Data Search</p><p>In the Company Consolidated Realtime Financial Data Search section, you need to put the CIN and optionally a callbackUrl.</p><br><form class="uk-form-horizontal uk-margin-large" ng-submit=fetchFinancialRealtime()><h3 class=uk-text-bold>Fetch Financial Realtime</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>CIN</label><input class=uk-input type=text ng-model=data.cin placeholder=CIN autocomplete=off></div><div><label class=uk-form-label for=form-stacked-text>Callback URL (optional)</label><input class=uk-input type=text ng-model=data.callbackUrl placeholder="Callback URL" autocomplete=off></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=!data.cin><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><div class="uk-card uk-card-body bg-grey" ng-show="data.getResponse && !loading"><!-- <p ng-repeat="(key,value) in data.getResponse" ng-hide ="key == \'splitAddress\'">\n                        <span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class="pad-left10" ng-bind="value"></span>\n                </p> --><pre pretty-json=data.getResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/lending/roc/companyconsolidated-fetch-realtime-data.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Company Consolidated Data(Fetch By CIN Realtime) Summary Request </a></h1><p class=uk-text-lead>Company Consolidated Realtime Data Search</p><p>In the Company Consolidated Realtime Data Search section, you need to put the CIN and optionally a callbackUrl.</p><br><form class="uk-form-horizontal uk-margin-large" ng-submit=fetchRealtime()><h3 class=uk-text-bold>Fetch Realtime</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>CIN</label><input class=uk-input type=text ng-model=data.cin placeholder=CIN autocomplete=off></div><div><label class=uk-form-label for=form-stacked-text>Callback URL (optional)</label><input class=uk-input type=text ng-model=data.callbackUrl placeholder="Callback URL" autocomplete=off></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=!data.cin><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><div class="uk-card uk-card-body bg-grey" ng-show="data.getResponse && !loading"><!-- <p ng-repeat="(key,value) in data.getResponse" ng-hide ="key == \'splitAddress\'">\n                        <span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class="pad-left10" ng-bind="value"></span>\n                </p> --><pre pretty-json=data.getResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/lending/roc/companyconsolidated-get-request-id.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Company Consolidated Data(Get by Request ID) test sandbox</a></h1><p class=uk-text-lead>Company Consolidated Data Search</p><p>In the Company Consolidated Data Search section, you need to put the RequestID received from the Fetch by CIN request.</p><br><br><form class="uk-form-horizontal uk-margin-large" ng-submit=getRequest()><h3 class=uk-text-bold>Get by Request ID</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Request ID</label><input class=uk-input type=text ng-model=data.requestId placeholder="Request ID" autocomplete=off></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="!data.requestId || data.requestId.length == 0"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><div class="uk-card uk-card-body bg-grey" ng-show="data.getResponse && !loading"><!-- <p ng-repeat="(key,value) in data.getResponse" ng-hide ="key == \'splitAddress\'">\n                        <span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class="pad-left10" ng-bind="value"></span>\n                </p> --><pre pretty-json=data.getResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/matchers/mrz-detect/mrz-detect.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>MRZ Detector</a></h1><p>The MRZ Detector identitifies if the MRZ code is present in the given ID card.</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and is horizontally-aligned.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0" uk-grid><div class=uk-width-1-4@s uk-lightbox>&nbsp;</div><div class=uk-width-1-2@s uk-lightbox><div ng-if="data.file.length > 0"><a class=uk-inline ng-href={{data.file}}><img ng-src={{data.file}} width=400 height=400 ng-if="data.file.indexOf(\'pdf\') == -1"></a><object data={{data.file}} type=application/pdf width=400 height=400 ng-if="data.file.indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file) ng-model=data.file uk-icon="icon: file-edit" class=uk-link ng-if="data.file.length > 0">&nbsp;</span> <a ng-click="data.file =\'\'" uk-icon="icon: trash" ng-if="data.file.length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.file.length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.file ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload image</span></div></div></div><form name=formHuMain class="uk-form-horizontal uk-margin-large" ng-submit=runMrzDetect()><!-- ng-submit="runAdvanceForgery()" --><h3 class=uk-text-bold>Run MRZ Detector</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Uploaded image URL</label><input class=uk-input type=text ng-model=data.file placeholder="Uploaded image URL" required></div></div><br><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=formHuMain.$invalid><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.mrzData && !loading"><pre pretty-json=data.mrzData></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div></div>'), e.put("app/matchers/text-match/text-match.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Text Match</a></h1><p>The Text Match product matches multiple types of text present on the images.</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and is horizontally-aligned.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0" uk-grid><div class=uk-width-1-4@s uk-lightbox>&nbsp;</div><div class=uk-width-1-2@s uk-lightbox><div ng-if="data.files[0].length > 0"><a class=uk-inline ng-href={{data.files[0]}}><img ng-src={{data.files[0]}} width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') == -1"></a><object data={{data.files[0]}} type=application/pdf width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.files[0] uk-icon="icon: file-edit" class=uk-link ng-if="data.files[0].length > 0">&nbsp;</span> <a ng-click="data.files[0] =\'\'" uk-icon="icon: trash" ng-if="data.files[0].length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload image</span></div></div></div><form name=formHuMain class="uk-form-horizontal uk-margin-large" ng-submit=runTextMatch()><!-- ng-submit="runAdvanceForgery()" --><h3 class=uk-text-bold>Run Text Match</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Uploaded image URL</label><input class=uk-input type=text ng-model=data.files[0] placeholder="Uploaded image URL"></div></div><div ng-repeat="inputField in inputsFields" uk-grid><div uk-width-1-3@s><label class=uk-form-label for=form-stacked-text>Field name {{$index + 1}}</label><input class=uk-input type=text required ng-model=inputsFields[$index][0] placeholder="Field name"></div><div uk-width-2-3@s><label class=uk-form-label for=form-stacked-text>Field value {{$index + 1}}</label><input class=uk-input type=text required ng-model=inputsFields[$index][1] placeholder="Field value"></div></div><br><button ng-hide=loading class="uk-button uk-button-default uk-button-medium" ng-click="inputsFields.push([\'\', \'\'])"><span>Add another field</span><!-- <span uk-spinner ng-show="loading"></span> --></button> <button ng-hide=loading class="uk-button uk-button-default uk-button-medium" ng-click=inputsFields.pop()><span>Remove field</span><!-- <span uk-spinner ng-show="loading"></span> --></button><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=formHuMain.$invalid><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.matchData && !loading"><pre pretty-json=data.matchData></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div></div>'), e.put("app/organization/centralServiceTax/central-service-tax.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Organizational(CentralServiceTax) test sandbox</a></h1><p>Try searching for any organization here.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=search()><h3 class=uk-text-bold>CentralServiceTax Search</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>CentralServiceTax Number</label><input class=uk-input type=text ng-model=data.assesseeCode placeholder="CentralServiceTax (Eg. AAWCS3552QSD001)"><div class=uk-text-danger ng-show=wrongInput>Please Enter a valid CentralServiceTax Number</div></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.assesseeCode ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.centralservicetaxData && !loading"><p ng-repeat="(key,value) in data.centralservicetaxData" ng-hide="key == \'splitAddress\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.centralservicetaxData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/organization/coa/registration-number-search.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Council of Architecture test sandbox</a></h1><p>Try searching for any Architecture here.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=registrationNumberSearch()><h3 class=uk-text-bold>COA Registration Number Search</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Registration Number</label><input class=uk-input type=text ng-model=data.registrationNumber placeholder="Registration Number (Eg. CA/2017/82888)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.registrationNumber ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.coaData && !loading"><p ng-repeat="(key,value) in data.coaData" ng-hide="key == \'splitAddress\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.coaData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/organization/cst/cst.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Organizational(CST) test sandbox</a></h1><p>Try searching for any organization here.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=search()><h3 class=uk-text-bold>CST Search</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>CST Number</label><input class=uk-input type=text ng-model=data.cstNumber placeholder="CST (Eg. 29400777635)"><div class=uk-text-danger ng-show=wrongInput>Please Enter a valid CST Number</div></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.cstNumber ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.cstData && !loading"><p ng-repeat="(key,value) in data.cstData" ng-hide="key == \'splitAddress\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.cstData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/organization/epfo/basic-establishment-search.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Organizational(EPFO) Basic Search test sandbox</a></h1><p>Try searching for any organization here.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=searchBasicEstablishment()><h3 class=uk-text-bold>EPFO Establishment Basic Search</h3><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Search Parameter</label><select class=uk-select ng-model=data.searchType><option value=name>Search by Establishment Name</option><option value=code>Search by Establishment Code</option></select></div><div class=uk-margin ng-show="data.searchType == \'name\'"><div><label class=uk-form-label for=form-stacked-text>Establishment Name</label><input class=uk-input type=text ng-model=data.establishmentName placeholder="Establishment Name (Eg. SIGNZY TECHNOLOGIES PRIVATE LIMITED)"></div></div><div class=uk-margin ng-show="data.searchType == \'code\'"><div><label class=uk-form-label for=form-stacked-text>Establishment Number</label><input class=uk-input type=text ng-model=data.establishmentId placeholder="Establishment Number (Eg. PUPUN1753022000)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.establishmentId ==\'\' && data.establishmentName ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.epfoData && !loading"><pre pretty-json=data.epfoData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/organization/epfo/detailed-establishment-search.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Organizational(EPFO) Detailed Search test sandbox</a></h1><p>Try searching for any organization here.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=searchDetailedEstablishment()><h3 class=uk-text-bold>EPFO Establishment Detailed Search</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Establishment Number</label><input class=uk-input type=text ng-model=data.establishmentId placeholder="Establishment Number (Eg. PUPUN1753022000)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Employee List of no of Months</label><select class=uk-select ng-model=data.employeeListMonths><option ng-value=number ng-repeat="number in noOfMonths" ng-bind=number></option></select></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.establishmentId ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.epfoData && !loading"><pre pretty-json=data.epfoData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'),
            e.put("app/organization/epfo/employee-name-search-v2.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Organizational(EPFO) Employee Name Search V2 test sandbox</a></h1><form class="uk-form-horizontal uk-margin-large" ng-submit=employeeNameSearchv2()><h3 class=uk-text-bold>EPFO Employee Name Search V2</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Establishment Number</label><input class=uk-input type=text ng-model=data.establishmentId placeholder="Establishment Number (Eg. PUPUN1753022000)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Establishment Name</label><input class=uk-input type=text ng-model=data.establishmentName placeholder="Establishment Name (Eg. Signzy)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Employee Name</label><input class=uk-input type=text ng-model=data.employeeName placeholder="Employee Name (Eg. ANKIT RATAN)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Month to be Searched</label><select class=uk-select ng-model=data.selectedLastMonth><option ng-value=month ng-repeat="month in data.lastMonths track by $index" ng-bind=month></option></select></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="(data.establishmentId ==\'\' && data.establishmentName ==\'\') || data.employeeName == \'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.epfoData && !loading"><pre pretty-json=data.epfoData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/organization/epfo/employee-name-search.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Organizational(EPFO) Detailed Search test sandbox</a></h1><p>Try searching for any organization here.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=employeeNameSearch()><h3 class=uk-text-bold>EPFO Establishment Detailed Search</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Establishment Number</label><input class=uk-input type=text ng-model=data.establishmentId placeholder="Establishment Number (Eg. PUPUN1753022000)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Employee Name</label><input class=uk-input type=text ng-model=data.employeeName placeholder="Employee Name (Eg. ANKIT RATAN)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Month to be Searched</label><select class=uk-select ng-model=data.selectedLastMonth><option ng-value=month ng-repeat="month in data.lastMonths track by $index" ng-bind=month></option></select></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.establishmentId ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.epfoData && !loading"><pre pretty-json=data.epfoData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/organization/epfo/uan-detailed.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Individual(EPFO) Login test sandbox</a></h1><p>Try searching for any organization here.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=uanDetailed()><h3 class=uk-text-bold>EPFO UAN Lgin</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>UAN</label><input class=uk-input type=text ng-model=data.uan placeholder=UAN></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Password</label><input class=uk-input type=password ng-model=data.password placeholder=Password></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.uan ==\'\' || data.password ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.epfoData && !loading"><pre pretty-json=data.epfoData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/organization/epfo/uan-search.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Individual(EPFO) test sandbox</a></h1><p>Try searching for any organization here.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=searchUan()><h3 class=uk-text-bold>EPFO UAN Search</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>UAN</label><input class=uk-input type=text ng-model=data.uan placeholder="UAN (Eg. 100682340752)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.uan ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.epfoData && !loading"><pre pretty-json=data.epfoData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/organization/esic/pan-number-search.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Employees\' State Insurance Corporation(PAN Search) test sandbox</a></h1><p>Try searching for any Organization here.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=panSearch()><h3 class=uk-text-bold>PAN Number Search</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>PAN Number</label><input class=uk-input type=text ng-model=data.panNumber placeholder="PAN Number"><div class=uk-text-danger ng-show=wrongInput>Please Enter a valid PAN Number</div></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.panNumber ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.esicData && !loading"><pre pretty-json=data.esicData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/organization/fssai/fssai.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Organizational(FSSAI) test sandbox</a></h1><p>Try searching for any organization here.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=search()><h3 class=uk-text-bold>FSSAI Search</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>FSSAI Number</label><input class=uk-input type=text ng-model=data.licenseNumber placeholder="FSSAI (Eg. 10015043001238)"><div class=uk-text-danger ng-show=wrongInput>Please Enter a valid FSSAI Number</div></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.licenseNumber ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.fssaiData && !loading"><p ng-repeat="(key,value) in data.fssaiData" ng-hide="key == \'splitAddress\' || key == \'premissesAddress\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><p class="uk-text-center uk-text-bold" ng-show=data.fssaiData.premissesAddress>Premisses Address</p><p ng-repeat="(key,value) in data.fssaiData.premissesAddress"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.fssaiData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/organization/icai/icai.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Organizational(ICAI) test sandbox</a></h1><p>Try searching for any organization here.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=search()><h3 class=uk-text-bold>ICAI Search</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>ICAI Number</label><input class=uk-input type=text ng-model=data.memberNumber placeholder="ICAI (Eg. 145113)"><div class=uk-text-danger ng-show=wrongInput>Please Enter a valid ICAI Number</div></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.memberNumber ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.icaiData && !loading"><p ng-repeat="(key,value) in data.icaiData" ng-hide="key == \'splitAddress\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.icaiData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/organization/icsi/icsi.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Organizational(ICSI) test sandbox</a></h1><p>Try searching for any organization here.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=search()><h3 class=uk-text-bold>Search by Member</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Member Number</label><input class=uk-input type=text ng-model=data.memberNumber placeholder="Member Number (Eg. 24905)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Member Type</label><select class=uk-select ng-model=data.memberType><option value=ACS>ACS</option><option value=FCS>FCS</option></select></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.memberNumber ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.icsiResponse && !loading"><p ng-repeat="(key,value) in data.icsiResponse" ng-hide="key == \'splitAddress\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.icsiResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/organization/icwai/icwai-firm.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Organizational(ICWAI-firm) test sandbox</a></h1><p>Try searching for any organization here.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=searchFirm()><h3 class=uk-text-bold>ICWAI-firm Search</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>ICWAI Number</label><input class=uk-input type=text ng-model=data.firmNumber placeholder="icwai  (Eg. 000030)"><div class=uk-text-danger ng-show=wrongInput>Please Enter a valid ICWAI Number</div></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.firmNumber ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.icwaiData && !loading"><p ng-repeat="(key,value) in data.icwaiData" ng-hide="key == \'splitAddress\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.icwaiData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/organization/icwai/icwai-member.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Organizational(ICWAI-member) test sandbox</a></h1><p>Try searching for any organization here.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=searchMember()><h3 class=uk-text-bold>ICWAI-member Search</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>ICWAI Number</label><input class=uk-input type=text ng-model=data.memberNumber placeholder="icwai  (Eg. 35548)"><div class=uk-text-danger ng-show=wrongInput>Please Enter a valid ICWAI Number</div></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.memberNumber ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.icwaiData && !loading"><p ng-repeat="(key,value) in data.icwaiData" ng-hide="key == \'splitAddress\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.icwaiData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/organization/iec/iec.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Organizational(IEC) test sandbox</a></h1><p>Try searching for any organization here.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=search()><h3 class=uk-text-bold>IEC Search</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>IEC Number</label><input class=uk-input type=text ng-model=data.iecCode placeholder="IEC (Eg. 0908018525)"><div class=uk-text-danger ng-show=wrongInput>Please Enter a valid IEC Number</div></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.iecCode ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.iecData && !loading"><p ng-repeat="(key,value) in data.iecData" ng-hide="key == \'splitAddress\' || key == \'branches\' || key == \'directors\' || key == \'splitPartyAddress\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.iecData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/organization/lei/search.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>LEI Search test sandbox</a></h1><form class="uk-form-horizontal uk-margin-large" ng-submit=leiSearch() name=leiSearchForm><h3 class=uk-text-bold>LEI Search Request</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>LEI</label><input class=uk-input type=text ng-model=data.search.lei placeholder="LEI Number"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Company Name</label><input class=uk-input type=text ng-model=data.search.companyName placeholder="Company Name"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>UniqueIdentifier</label><input class=uk-input type=text ng-model=data.search.uniqueIdentifier placeholder="Unique Identifier"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=leiSearchForm.$invalid><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.responseData && !loading"><pre pretty-json=data.responseData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/organization/mci/mci.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Organizational(MCI) test sandbox</a></h1><p>Try searching for any organization here.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=search()><h3 class=uk-text-bold>Search by Registration Number</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Registration Number</label><input class=uk-input type=text ng-model=data.registration_no placeholder="Registration Number(Eg. 4303)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>State</label><select class=uk-select ng-model=data.state_medical_council ng-init="data.state_medical_council = validStateMedicalCouncil[0]"><option ng-value=council ng-repeat="council in validStateMedicalCouncil">{{ council }}</option></select></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Qualification Year</label><input class=uk-input type=text ng-model=data.qualification_year placeholder="Qualification year(Eg. 1973)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Year Of Registration</label><input class=uk-input type=text ng-model=data.year_of_registration placeholder="Year Of Registration"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Doctor Name</label><input class=uk-input type=text ng-model=data.name placeholder="Doctor Name"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.registration_no ==\'\' || data.qualification_year ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.mciResponse && !loading"><p ng-repeat="(key,value) in data.mciResponse" ng-hide="key == \'splitAddress\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.mciResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/organization/ptrc/ptrc.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Organizational(PTRC) test sandbox</a></h1><p>Try searching for any organization here.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=search()><h3 class=uk-text-bold>Search by Professional Tax Number</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Professional Tax Number</label><input class=uk-input type=text ng-model=data.professionalTaxNumber placeholder="Professional Tax Number(Eg. 99522311536P)"></div></div><!-- State parameter is not required to fill --><!-- <div class="uk-margin">\n                <div>\n                    <label class="uk-form-label" for="form-stacked-text">State</label>\n                    <select class="uk-select" ng-model="data.state" ng-init="data.state = states[0].name">\n                        <option ng-value="state.name" ng-repeat="state in states" >{{ state.name }}</option>\n                    </select>\n                </div>\n            </div> --><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.professionalTaxNumber ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.ptrcResponse && !loading"><p ng-repeat="(key,value) in data.ptrcResponse" ng-hide="key == \'splitAddress\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.ptrcResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/organization/roc/asset-charges.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Organizational(ROC) test sandbox</a></h1><p class=uk-text-lead>ROC Asset Charges Search</p><p>In the ROC Asset Charge section, you need to put the CIN/LLPIN of the company for which simple info needs to be pulled.</p><br><br><form class="uk-form-horizontal uk-margin-large" ng-submit=queryAssetSearchCIN(data.assetCompanyID)><h3 class=uk-text-bold>Search By CIN</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>CIN</label><input class=uk-input type=text ng-model=data.assetCompanyID placeholder="CIN (Eg:L28920MH1945PLC004520)" autocomplete=off><!-- <ul ng-show="companyList" class="uk-list uk-list-striped">\n                        <li ng-repeat="company in companyList">\n                            <a ng-click="querySimpleSearchCIN(company)" style="text-decoration:none;color:grey;" ng-bind="company.companyName">\n                            </a>\n                        </li>\n                    </ul> --></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="!data.assetCompanyID || data.assetCompanyID.length == 0"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><div class="uk-card uk-card-body bg-grey" ng-show="data.assetResponse && !loading"><p ng-repeat="(key,value) in data.assetResponse" ng-hide="key == \'splitAddress\' || key == \'updatedTimestamp\' || key ==\'chargesRegistered\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><hr class=uk-divider-icon><p class="uk-text-center uk-text-bold" ng-show="data.assetResponse.chargesRegistered.length > 0">Asset Charges Registered</p><div ng-repeat="director in data.assetResponse.chargesRegistered"><p ng-repeat="(key,value) in director" ng-hide="key == \'splitAddress\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><hr class=uk-divider-icon></div><pre pretty-json=data.assetResponse></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div></div>'), e.put("app/organization/roc/detail.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Organizational(ROC) test sandbox</a></h1><p class=uk-text-lead>ROC Detailed Search</p><p>In the Detailed search section, you need to put the CIN/LLPIN of the company for which detailed info needs to be pulled.</p><br><br><form class="uk-form-horizontal uk-margin-large" ng-submit=queryDetailedSearchCIN(data.detailedCompanyID)><h3 class=uk-text-bold>Search By CIN</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>CIN</label><input class=uk-input type=text ng-model=data.detailedCompanyID placeholder=CIN autocomplete=off><!-- <ul ng-show="companyList" class="uk-list uk-list-striped">\n                        <li ng-repeat="company in companyList">\n                            <a ng-click="queryDetailedSearchCIN(company)" style="text-decoration:none;color:grey;" ng-bind="company.companyName">\n                            </a>\n                        </li>\n                    </ul> --></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="!data.detailedCompanyID || data.detailedCompanyID.length == 0"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><div class="uk-card uk-card-body bg-grey" ng-show="data.detailedResponse && !loading"><p ng-repeat="(key,value) in data.detailedResponse" ng-hide="key == \'splitAddress\' || key == \'directorDetails\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><hr class=uk-divider-icon><p class="uk-text-center uk-text-bold" ng-show="data.detailedResponse.directorDetails.length > 0">Director Details</p><div ng-repeat="director in data.detailedResponse.directorDetails"><p ng-repeat="(key,value) in director" ng-hide="key == \'splitAddress\' || key == \'otherDirectorships\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><div ng-repeat="otherDirectorship in director.otherDirectorships.listOfLLPs" ng-if="director.otherDirectorships.listOfLLPs.length > 0"><p ng-repeat="(key,value) in otherDirectorship"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><hr></div><div ng-repeat="otherDirectorship in director.otherDirectorships.listOfCompanies" ng-if="director.otherDirectorships.listOfCompanies.length > 0"><p ng-repeat="(key,value) in otherDirectorship"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><hr></div><hr class=uk-divider-icon></div><hr class=uk-divider-icon><pre pretty-json=data.detailedResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/organization/roc/din-detail.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Organizational(ROC Director) test sandbox</a></h1><p class=uk-text-lead>ROC DIN Detailed Search</p><p>In the Detailed search section, you need to put the DIN of the director for which detailed info needs to be pulled.</p><br><br><form class="uk-form-horizontal uk-margin-large" ng-submit="dinSearch(\'detailedSearchByDin\')"><h3 class=uk-text-bold>Search By DIN</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>DIN</label><input class=uk-input type=text ng-model=data.din placeholder=DIN autocomplete=off></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="!data.din || data.din.length == 0"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><div class="uk-card uk-card-body bg-grey" ng-show="data.dinData && !loading"><!-- <p ng-repeat="(key,value) in data.dinData" ng-hide ="key == \'splitAddress\'">\n                        <span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class="pad-left10" ng-bind="value"></span>\n                </p> --><pre pretty-json=data.dinData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/organization/roc/din-quick.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Organizational(ROC Director) test sandbox</a></h1><p class=uk-text-lead>ROC DIN Quick Search</p><p>In the Quick search section, you need to put the DIN of the director for which quick info needs to be pulled.</p><br><br><form class="uk-form-horizontal uk-margin-large" ng-submit="dinSearch(\'quickSearchByDin\')"><h3 class=uk-text-bold>Search By DIN</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>DIN</label><input class=uk-input type=text ng-model=data.din placeholder=DIN autocomplete=off></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="!data.din || data.din.length == 0"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><div class="uk-card uk-card-body bg-grey" ng-show="data.dinData && !loading"><!-- <p ng-repeat="(key,value) in data.dinData" ng-hide ="key == \'splitAddress\'">\n                        <span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class="pad-left10" ng-bind="value"></span>\n                </p> --><pre pretty-json=data.dinData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/organization/roc/din-simple.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Organizational(ROC Director) test sandbox</a></h1><p class=uk-text-lead>ROC DIN Simple Search</p><p>In the Simple search section, you need to put the DIN of the director for which more info needs to be pulled.</p><br><br><form class="uk-form-horizontal uk-margin-large" ng-submit="dinSearch(\'simpleSearchByDin\')"><h3 class=uk-text-bold>Search By DIN</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>DIN</label><input class=uk-input type=text ng-model=data.din placeholder=DIN autocomplete=off></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="!data.din || data.din.length == 0"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><div class="uk-card uk-card-body bg-grey" ng-show="data.dinData && !loading"><!-- <p ng-repeat="(key,value) in data.dinData" ng-hide ="key == \'splitAddress\'">\n                        <span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class="pad-left10" ng-bind="value"></span>\n                </p> --><pre pretty-json=data.dinData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/organization/roc/file-all-download.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Organizational(ROC) test sandbox</a></h1><p class=uk-text-lead>ROC File Download Search</p><p>Try searching for a company/llp here. Enter CIN & click on search to get regulatory filings of the company - Certificate of Incroporation (CoI), Memorandum of Association (MoA) , Articles of Association (AoA) and all others</p><p><b>Note :</b> This is a dummy sandbox to give an understanding of how this API will work. As you can see a CIN already has been pre-populated as input. Here as these files are already in DB you get the output in seconds. In normal course it will take anywhere from 10 mins - 40 mins to get these files. The formats and endpoints remain the same.</p><p>Please contact <a href=mailto:sales@signzy.com>sales</a> to get access to live APIs.</p><br><br><form class="uk-form-horizontal uk-margin-large" ng-submit=allFileSearch();><h3 class=uk-text-bold>Search By CIN</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>CIN</label><input class=uk-input type=text ng-model=data.fileCompanyID placeholder=CIN autocomplete=off ng-disabled="data.fileCompanyID.length > 0"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.fileCompanyID.length == 0"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><div class="uk-card uk-card-body bg-grey" ng-show="data.companyAllFileResponse && !loading"><div class="scol c100 padb50"><div ng-repeat="file in data.companyAllFileResponse.companyDocuments.files" class="scol c33 uk-text-center pad1020"><a rel=external download={{file.documentName}} ng-href={{file.documentUrl}}><img src=assets/images/pdf.png class=w75></a><div class=padt10><span class=uk-text-bold>Document Type:</span><span ng-bind="\' \' +file.documentType"></span></div><div><span class=uk-text-bold>Document Date:</span><span ng-bind="\' \' +file.documentFilingDate"></span></div><file-download fileurl={{file.documentUrl}} downloadtext={{file.documentName}} linktext="Download PDF"></file-download></div></div><pre pretty-json=data.companyAllFileResponse></pre></div></div></div>'),
            e.put("app/organization/roc/file-download.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Organizational(ROC) test sandbox</a></h1><p class=uk-text-lead>ROC File Download Search</p><p>Try searching for a company/llp here. Enter CIN & click on search to get regulatory filings of the company - Certificate of Incroporation (CoI), Memorandum of Association (MoA) , Articles of Association (AoA)</p><p><b>Note :</b> This is a dummy sandbox to give an understanding of how this API will work. As you can see a CIN already has been pre-populated as input. Here as these files are already in DB you get the output in seconds. In normal course it will take anywhere from 10 mins - 40 mins to get these files. The formats and endpoints remain the same.</p><p>Please contact <a href=mailto:sales@signzy.com>sales</a> to get access to live APIs.</p><br><br><a download class=uk-text-link href=https://lendenclub.s3-ap-southeast-1.amazonaws.com/media/documents/2016/12/01/AA8025EBADD3CE1B634F95BE.JPG>download link</a><form class="uk-form-horizontal uk-margin-large" ng-submit=fileSearch();><h3 class=uk-text-bold>Search By CIN</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>CIN</label><input class=uk-input type=text ng-model=data.fileCompanyID placeholder=CIN autocomplete=off ng-disabled="data.fileCompanyID.length > 0"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.fileCompanyID.length == 0"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><div class="uk-card uk-card-body bg-grey" ng-show="data.companyFileResponse && !loading"><div class="scol c100 padb50"><div ng-repeat="file in data.companyFileResponse.companyDocuments.files" class="scol c33 uk-text-center pad1020"><a rel=external download={{file.documentName}} ng-href={{file.documentUrl}}><img src=assets/images/pdf.png class=w75></a><div class=padt10><span class=uk-text-bold>Document Type:</span><span ng-bind="\' \' +file.documentType"></span></div><div><span class=uk-text-bold>Document Date:</span><span ng-bind="\' \' +file.documentFilingDate"></span></div><file-download fileurl={{file.documentUrl}} downloadtext={{file.documentName}} linktext="Download PDF"></file-download></div></div><pre pretty-json=data.companyFileResponse></pre></div></div></div>'), e.put("app/organization/roc/quick.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Organizational(ROC) test sandbox</a></h1><p class=uk-text-lead>ROC Quick Search</p><p>In the Quick search section, you need to put the CIN/LLPIN of the company for which quick info needs to be pulled.</p><br><br><form class="uk-form-horizontal uk-margin-large" ng-submit=queryQuickSearchCIN(data.quickCompanyID)><h3 class=uk-text-bold>Search By CIN</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>CIN</label><input class=uk-input type=text ng-model=data.quickCompanyID placeholder=CIN autocomplete=off><!-- <ul ng-show="companyList" class="uk-list uk-list-striped">\n                      <li ng-repeat="company in companyList">\n                        <a ng-click="queryQuickSearchCIN(company)" style="text-decoration:none;color:grey;" ng-bind="company.companyName">\n                        </a>\n                      </li>\n                    </ul> --></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="!data.quickCompanyID || data.quickCompanyID.length == 0"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><div class="uk-card uk-card-body bg-grey" ng-show="data.quickResponse && !loading"><p ng-repeat="(key,value) in data.quickResponse" ng-hide="key == \'splitAddress\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.quickResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/organization/roc/simple.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Organizational(ROC) test sandbox</a></h1><p class=uk-text-lead>ROC Simple Search</p><p>In the Simple search section, you need to put the CIN/LLPIN of the company for which more info needs to be pulled.</p><br><br><form class="uk-form-horizontal uk-margin-large" ng-submit=querySimpleSearchCIN(data.simpleCompanyID)><h3 class=uk-text-bold>Search By CIN</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>CIN</label><input class=uk-input type=text ng-model=data.simpleCompanyID placeholder=CIN autocomplete=off><!-- <ul ng-show="companyList" class="uk-list uk-list-striped">\n                        <li ng-repeat="company in companyList">\n                            <a ng-click="querySimpleSearchCIN(company)" style="text-decoration:none;color:grey;" ng-bind="company.companyName">\n                            </a>\n                        </li>\n                    </ul> --></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="!data.simpleCompanyID || data.simpleCompanyID.length == 0"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><div class="uk-card uk-card-body bg-grey" ng-show="data.simpleResponse && !loading"><p ng-repeat="(key,value) in data.simpleResponse" ng-hide="key == \'splitAddress\' || key == \'directorDetails\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><hr class=uk-divider-icon><p class="uk-text-center uk-text-bold" ng-show="data.simpleResponse.directorDetails.length > 0">Director Details</p><div ng-repeat="director in data.simpleResponse.directorDetails"><p ng-repeat="(key,value) in director" ng-hide="key == \'splitAddress\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><hr class=uk-divider-icon></div><pre pretty-json=data.simpleResponse></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div></div>'), e.put("app/organization/roc/smart-search.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Organizational(ROC) test sandbox</a></h1><p class=uk-text-lead>ROC Company Name Search</p><p>Try searching for a company/llp here. Select required company & click on search to get the CIN of the company</p><br><br><form class="uk-form-horizontal uk-margin-large"><h3 class=uk-text-bold>Search By Name</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Company Name</label><input class=uk-input type=text ng-model=data.companySmartSearchText ng-change=querySmartSearchCompany() placeholder="Company Name(atleast 3 characters)" autocomplete=off><ul ng-show=companyList class="uk-list uk-list-striped"><li ng-repeat="company in companyList"><a ng-click=getSmartSearchCompany(company) style=text-decoration:none;color:grey ng-bind=company.companyName></a></li></ul></div></div></form><div class="uk-align-center blue-loader" ng-show=loading uk-spinner></div><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.smartResponse && !loading"><p ng-repeat="(key,value) in data.smartResponse" ng-hide="key == \'splitAddress\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.smartResponse></pre></div></div></div>'), e.put("app/organization/snec/snec.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Organizational(SnEC) test sandbox</a></h1><p>Try searching for any organization here.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=search()><h3 class=uk-text-bold>Search by Registration Number</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Registration Number</label><input class=uk-input type=text ng-model=data.registrationNumber placeholder="Registration Number(Eg. KL04212N2016000001)"></div></div><div ng-if="data.state == \'Maharashtra\'" class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Category</label><select class=uk-select ng-model=data.category ng-init="data.category = categories[0].name"><option ng-value=category.name ng-repeat="category in categories">{{ category.name }}</option></select></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>State</label><select class=uk-select ng-model=data.state ng-init="data.state = states[0].name"><option ng-value=state.name ng-repeat="state in states">{{ state.name }}</option></select></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.registrationNumber ==\'\'"><span ng-hide=loading>Verify</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.ptrcResponse && !loading"><pre pretty-json=data.ptrcResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/organization/tan/tan.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Organizational(TAN) test sandbox</a></h1><p>Try searching for any organization here.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=verify()><h3 class=uk-text-bold>TAN Verification</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>TAN Number</label><input class=uk-input type=text ng-model=data.tan placeholder="TAN Number(Eg. AGRA10865B)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Name</label><input class=uk-input type=text ng-model=data.companyName placeholder="Company Name (Eg. ALLAHABAD BANK)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.tan ==\'\' || data.companyName ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.tanResponse && !loading"><div class=responseCard><p ng-show="true || data.tanResponse.verified"><span class=uk-text-bold>Verified: </span>{{data.tanResponse.verified}}</p><p ng-show="true || data.tanResponse.message"><span class=uk-text-bold>Message: </span>{{data.tanResponse.message}}</p></div><pre pretty-json=data.tanResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div>'), e.put("app/organization/tin/tin.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Organizational(TIN) test sandbox</a></h1><p>Try searching for any organization here.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=search()><h3 class=uk-text-bold>TIN Search</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Tin Number</label><input class=uk-input type=text ng-model=data.tinNumber placeholder="TIN (Eg. 27530757760)"><div class=uk-text-danger ng-show=wrongInput>Please Enter a valid TIN Number</div></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.tinNumber ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.tinData && !loading"><p ng-repeat="(key,value) in data.tinData" ng-hide="key == \'splitAddress\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.tinData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/organization/udhyogAadhaar/uan.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Organizational(UAN) test sandbox</a></h1><p>Try searching for any organization here.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=searchUAM()><h3 class=uk-text-bold>Search by UAN</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Udhyog Aadhaar Number</label><input class=uk-input type=text ng-model=data.uamNumber placeholder="Udhyog Aadhaar Number  (Eg. MH26E0014851)"><div class=uk-text-danger ng-show=wrongInputuamNumber>Please Enter a valid Udhyog Aadhaar Number</div></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.uamNumber ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.searchData && !loading"><p ng-repeat="(key,value) in data.searchData" ng-hide="key == \'splitAddress\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.searchData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/organization/udhyogAadhaar/uananduid.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Organizational(UAN and UID) test sandbox</a></h1><p>Try searching for any organization here.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=searchUAMandUID()><h3 class=uk-text-bold>Search by UAN and UID</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Udhyog Aadhaar Number</label><input class=uk-input type=text ng-model=data.uamNumber placeholder="Udhyog Aadhaar Number  (Eg. MH26E0014851)"><div class=uk-text-danger ng-show=wrongInputuamNumber>Please Enter a valid Udhyog Aadhaar Number</div></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Aadhaar Number</label><input class=uk-input type=text ng-model=data.aadhaarNumber placeholder="Aadhaar Number (Eg. 626283146276)"><div class=uk-text-danger ng-show=wrongInput>Please Enter a valid Aadhaar Number</div></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.uamNumber ==\'\' || data.aadhaarNumber ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.searchData && !loading"><p ng-repeat="(key,value) in data.searchData" ng-hide="key == \'splitAddress\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.searchData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/organization/udin/getInfo.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Udin Get Info test sandbox</a></h1><form class="uk-form-horizontal uk-margin-large" ng-submit=udinGetInfo() name=getInfoForm><h3 class=uk-text-bold>Udin Get Info Request</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Token</label><input class=uk-input type=text ng-model=data.getInfo.token placeholder=Token required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>OTP</label><input class=uk-input type=text ng-model=data.getInfo.otp placeholder=OTP required></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=getInfoForm.$invalid><span ng-hide=loading>Fetch</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.responseData && !loading"><pre pretty-json=data.responseData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/organization/udin/initiate.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Udin Initiate test sandbox</a></h1><form class="uk-form-horizontal uk-margin-large" ng-submit=udinInitiate() name=initiateForm><h3 class=uk-text-bold>Udin Initiate Request</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Name</label><input class=uk-input type=text ng-model=data.initiate.name placeholder=Name required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Mobile Number</label><input class=uk-input type=text ng-model=data.initiate.mobileNumber placeholder="Mobile Number" required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>email</label><input class=uk-input type=email ng-model=data.initiate.email placeholder=Email required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>UDIN</label><input class=uk-input type=text ng-model=data.initiate.udinNumber placeholder=UDIN required></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=initiateForm.$invalid><span ng-hide=loading>Initiate</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.responseData && !loading"><pre pretty-json=data.responseData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/organization/udyamRegistration/udyam-registration.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Udyam Registration Test Sandbox</a></h1><p>Try searching for any Udyam Registration Details here.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=searchUdyamRegistration()><h3 class=uk-text-bold>Search by Udyam Number</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Udyam Number</label><input class=uk-input type=text ng-model=data.udyamNumber placeholder="Udyam Number  (Eg. UDYAM-PB-12-0001234)"><div class=uk-text-danger ng-show=wrongInputUdyamNumber>Please Enter a valid Udyam Number</div></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.udyamNumber ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.searchData && !loading"><!-- <p ng-repeat="(key,value) in data.searchData" ng-hide ="key == \'splitAddress\'">\n                        <span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class="pad-left10" ng-bind="value"></span>\n                </p> --><pre pretty-json=data.searchData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/organization/vat/vat.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Organizational(VAT) test sandbox</a></h1><p>Try searching for any organization here.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=search()><h3 class=uk-text-bold>VAT Search</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>VAT Number</label><input class=uk-input type=text ng-model=data.vatNumber placeholder="VAT (Eg. 06231843620)"><div class=uk-text-danger ng-show=wrongInput>Please Enter a valid VAT Number</div></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.vatNumber ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.vatData && !loading"><p ng-repeat="(key,value) in data.vatData" ng-hide="key == \'splitAddress\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.vatData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/riskscore/creditscore/authenticate.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Credit Score (Authenticate) Test Sandbox</a></h1><p>Authenticate Your Credit Score Request here.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=authenticate()><h3 class=uk-text-bold>Credit Score Authenticate</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Report ID</label><input class=uk-input type=text ng-model=data.authenticate.reportId placeholder="Report ID" required></div><div><label class=uk-form-label for=form-stacked-text>Order ID</label><input class=uk-input type=text ng-model=data.authenticate.orderId placeholder="Order ID"></div><div ng-show=needAnswers class="scol c100"><hr class=uk-divider-icon><h3 class=uk-text-bold>You will need to complete questionaire to authenticate</h3><h5 class=uk-text-bold>Question - {{ data.creditScoreData.question }}</h5><div class=uk-margin><label class=uk-form-label for=form-stacked-text>Options</label><select class=uk-select ng-model=data.authenticate.userAns><option ng-value=option ng-repeat="option in data.creditScoreData.optionsList" ng-bind=option></option></select></div></div></div><p uk-margin class=uk-text-center ng-show=!needAnswers><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=""><span ng-hide=loading>Authenticate</span> <span uk-spinner ng-show=loading></span></button></p><p uk-margin class=uk-text-center ng-show=needAnswers><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=""><span ng-hide=loading>Submit Answer</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.creditScoreData && !loading"><pre pretty-json=data.creditScoreData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/riskscore/creditscore/getdata.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Credit Score (Get Data) Test Sandbox</a></h1><form class="uk-form-horizontal uk-margin-large" ng-submit=getData()><h3 class=uk-text-bold>Credit Score Get Data Request</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Report ID</label><input class=uk-input type=text ng-model=data.getData.reportId placeholder="Report ID" required></div><div><label class=uk-form-label for=form-stacked-text>Order ID</label><input class=uk-input type=text ng-model=data.getData.orderId placeholder="Order ID"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=""><span ng-hide=loading>Get Data</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><p uk-margin class=uk-text-center ng-show="data.creditScoreData.Report && data.creditScoreData.Report != \'Report Not Yet Generated\'"><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=""><a id=getDataBtn href=data.creditScoreData.Report target=_blank>Open Report</a></button></p><div class="uk-card uk-card-body bg-grey" ng-show="data.creditScoreData && !loading"><pre pretty-json=data.creditScoreData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/riskscore/creditscore/getreport.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Credit Score (Get Report) Test Sandbox</a></h1><form class="uk-form-horizontal uk-margin-large" ng-submit=getReport()><h3 class=uk-text-bold>Credit Score Get Report Request</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Report ID</label><input class=uk-input type=text ng-model=data.getReport.reportId placeholder="Report ID" required></div><div><label class=uk-form-label for=form-stacked-text>Order ID</label><input class=uk-input type=text ng-model=data.getReport.orderId placeholder="Order ID"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=""><span ng-hide=loading>Get Report</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><p uk-margin class=uk-text-center ng-show=data.creditScoreData.Report><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=""><a id=getReportBtn href=data.creditScoreData.Report target=_blank>Open Report</a></button></p><div class="uk-card uk-card-body bg-grey" ng-show="data.creditScoreData && !loading"><pre pretty-json=data.creditScoreData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/riskscore/creditscore/initiate.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Credit Score (Initiate) Test Sandbox</a></h1><p>Initiate Your Credit Score Request here.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=initiate()><h3 class=uk-text-bold>Credit Score Initiate</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>First Name</label><input class=uk-input type=text ng-model=data.initiate.firstName placeholder="First Name" required></div><div><label class=uk-form-label for=form-stacked-text>Middle Name</label><input class=uk-input type=text ng-model=data.initiate.middleName placeholder="Middle Name"></div><div><label class=uk-form-label for=form-stacked-text>Last Name</label><input class=uk-input type=text ng-model=data.initiate.lastName placeholder="Last Name"></div><div><label class=uk-form-label for=form-stacked-text>Gender</label><select class=uk-select ng-model=data.initiate.gender ng-init="data.initiate.gender = \'M\'"><option value=M>Male</option><option value=F>Female</option><option value=T>Other</option></select></div><div><label class=uk-form-label for=form-stacked-text>Date Of Birth</label><datepicker date-format=dd/MM/yyyy><input class=uk-input placeholder=DD/MM/YYYY ng-model=data.initiate.dateOfBirth type=text></datepicker></div><div><label class=uk-form-label for=form-stacked-text>Marital Status</label><input class=uk-input type=text ng-model=data.initiate.maritalStatus placeholder="Marital Status"></div><div><label class=uk-form-label for=form-stacked-text>Phone Number</label><input class=uk-input type=text ng-model=data.initiate.phoneNo1 placeholder="Phone Number"></div><div><label class=uk-form-label for=form-stacked-text>Alternate Phone Number</label><input class=uk-input type=text ng-model=data.initiate.phoneNo2 placeholder="Alternate Phone Number"></div><div><label class=uk-form-label for=form-stacked-text>Email Address</label><input class=uk-input type=text ng-model=data.initiate.email1 placeholder="Email Address"></div><div><label class=uk-form-label for=form-stacked-text>Alternate Email Address</label><input class=uk-input type=text ng-model=data.initiate.email2 placeholder="Alternate Email Address"></div><div><label class=uk-form-label for=form-stacked-text>PAN</label><input class=uk-input type=text ng-model=data.initiate.pan placeholder=PAN></div><div><label class=uk-form-label for=form-stacked-text>Driving License</label><input class=uk-input type=text ng-model=data.initiate.drivingLicence placeholder="Driving License"></div><div><label class=uk-form-label for=form-stacked-text>Voter ID</label><input class=uk-input type=text ng-model=data.initiate.voterId placeholder="Voter ID"></div><div><label class=uk-form-label for=form-stacked-text>Passport</label><input class=uk-input type=text ng-model=data.initiate.passport placeholder=Passport></div><div><label class=uk-form-label for=form-stacked-text>Aadhaar</label><input class=uk-input type=text ng-model=data.initiate.aadhaar placeholder=Aadhaar></div><div><label class=uk-form-label for=form-stacked-text>Father Name</label><input class=uk-input type=text ng-model=data.initiate.fatherName placeholder="Father Name"></div><div><label class=uk-form-label for=form-stacked-text>Mother Name</label><input class=uk-input type=text ng-model=data.initiate.motherName placeholder="Mother Name"></div><div><label class=uk-form-label for=form-stacked-text>Spouse Name</label><input class=uk-input type=text ng-model=data.initiate.spouseName placeholder="Spouse Name"></div><div><label class=uk-form-label for=form-stacked-text>Address Line 1</label><input class=uk-input type=text ng-model=data.initiate.address1 placeholder="Address Line"></div><div><label class=uk-form-label for=form-stacked-text>Village 1</label><input class=uk-input type=text ng-model=data.initiate.village1 placeholder=Village></div><div><label class=uk-form-label for=form-stacked-text>City 1</label><input class=uk-input type=text ng-model=data.initiate.city1 placeholder=City></div><div><label class=uk-form-label for=form-stacked-text>State 1</label><input class=uk-input type=text ng-model=data.initiate.state1 placeholder=State></div><div><label class=uk-form-label for=form-stacked-text>Pincode 1</label><input class=uk-input type=text ng-model=data.initiate.pin1 placeholder=Pincode></div><div><label class=uk-form-label for=form-stacked-text>Country 1</label><input class=uk-input type=text ng-model=data.initiate.country1 placeholder=Country></div><div><label class=uk-form-label for=form-stacked-text>Address Line 2</label><input class=uk-input type=text ng-model=data.initiate.address2 placeholder="Address Line"></div><div><label class=uk-form-label for=form-stacked-text>Village 2</label><input class=uk-input type=text ng-model=data.initiate.village2 placeholder=Village></div><div><label class=uk-form-label for=form-stacked-text>City 2</label><input class=uk-input type=text ng-model=data.initiate.city2 placeholder=City></div><div><label class=uk-form-label for=form-stacked-text>State 2</label><input class=uk-input type=text ng-model=data.initiate.state2 placeholder=State></div><div><label class=uk-form-label for=form-stacked-text>Pincode 2</label><input class=uk-input type=text ng-model=data.initiate.pin2 placeholder=Pincode></div><div><label class=uk-form-label for=form-stacked-text>Country 2</label><input class=uk-input type=text ng-model=data.initiate.country2 placeholder=Country></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled=""><span ng-hide=loading>Initiate</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.creditScoreData && !loading"><pre pretty-json=data.creditScoreData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'),
            e.put("app/vault/cosmoextraction/cosmo-aadhaar.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Aadhaar Extraction</a></h1><p class=uk-text-lead>Auto-reading Aadhaar card</p><p>First upload the two sides of an aadhaar card. Then click on extraction. You may put direct URLs to front and back sides, in case you have them.</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and is horizontally-aligned.</p><p>Each <b>image</b> should be less than <b>2MB</b>. Note: pdf files are not supported.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0" uk-grid><div class="uk-width-1-2@s pad-left0" uk-lightbox><div ng-if="data.files[0].length > 0"><a class=uk-inline ng-href={{data.files[0]}}><img ng-src={{data.files[0]}} width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') == -1"></a><object data={{data.files[0]}} type=application/pdf width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.files[0] uk-icon="icon: file-edit" class=uk-link ng-if="data.files[0].length > 0">&nbsp;</span> <a ng-click="data.files[0] =\'\'" uk-icon="icon: trash" ng-if="data.files[0].length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Front file</span></div></div><div class="uk-width-1-2@s pad-left20" uk-lightbox><div ng-if=data.files[1]><a class=uk-inline ng-href={{data.files[1]}}><img ng-src={{data.files[1]}} width=400 height=400 ng-if="data.files[1].indexOf(\'pdf\') == -1"></a><object data={{data.files[1]}} type=application/pdf width=400 height=400 ng-if="data.files[1].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,1) ng-model=data.files[1] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.files[1] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.files[1]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 1)" ng-model=data.files[1] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Back file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit="extract(\'aadhaar\')"><h3 class=uk-text-bold>Aadhaar Card Details Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Aadhaar Front Image File</label><input class=uk-input type=text ng-model=data.files[0] placeholder="Aadhaar Card Front Side Image(URL)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Aadhaar Back Image File</label><input class=uk-input type=text ng-model=data.files[1] placeholder="Aadhaar Card Back Side Image(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.files.length < 2"><span ng-hide=loading>Extract</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.extractedResponse && !loading"><pre pretty-json=data.extractedResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div>'), e.put("app/vault/cosmoextraction/cosmo-business-pan.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Business PAN Extraction</a></h1><p class=uk-text-lead>Auto-reading PAN card</p><p>First upload the front sides of a PAN card. Then click on extraction. You may put direct URL to front side if you have one.</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and is horizontally-aligned.</p><p>Each <b>image</b> should be less than <b>2MB</b>. Note: pdf files are not supported.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0"><div class=pad-left0 uk-lightbox><div ng-if=data.files[0]><a class=uk-inline ng-href={{data.files[0]}}><img width=300 ng-src={{data.files[0]}} max-width=50%; height="" alt="" ng-if="data.files[0].indexOf(\'pdf\') == -1"></a><object data={{data.files[0]}} type=application/pdf width=300 height=300 ng-if="data.files[0].indexOf(\'pdf\') != -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.files[0] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.files[0] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.files[0]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit="extract(\'businessPan\')"><h3 class=uk-text-bold>PAN Card Details Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>PAN Image File</label><input class=uk-input type=text ng-model=data.files[0] placeholder="PAN Card Image(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.files.length == 0"><span ng-hide=loading>Extract</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.extractedResponse && !loading"><pre pretty-json=data.extractedResponse></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div></div>'), e.put("app/vault/cosmoextraction/cosmo-driving-licence.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Driving Licence Extraction</a></h1><p class=uk-text-lead>Auto-reading Driving Licence</p><p>First upload the front side of a Driving licence. Then click on extraction. You may put direct URL to front side if you have one.</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and there are no background borders.</p><p>Each <b>image</b> should be less than <b>2MB</b>. Note: pdf files are not supported.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0"><div class=pad-left0 uk-lightbox><div ng-if=data.files[0]><a class=uk-inline ng-href={{data.files[0]}}><img width=300 ng-src={{data.files[0]}} max-width=50%; height="" alt="" ng-if="data.files[0].indexOf(\'pdf\') == -1"></a><object data={{data.files[0]}} type=application/pdf width=300 height=300 ng-if="data.files[0].indexOf(\'pdf\') != -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.files[0] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.files[0] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.files[0]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit="extract(\'drivingLicence\')"><h3 class=uk-text-bold>Driving Licence Details Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>DL Image File</label><input class=uk-input type=text ng-model=data.files[0] placeholder="DL Card Image(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.files.length == 0"><span ng-hide=loading>Extract</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.extractedResponse && !loading"><pre pretty-json=data.extractedResponse></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div></div>'), e.put("app/vault/cosmoextraction/cosmo-individual-pan.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Individual PAN Extraction</a></h1><p class=uk-text-lead>Auto-reading PAN card</p><p>First upload the front sides of a PAN card. Then click on extraction. You may put direct URL to front side if you have one.</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and is horizontally-aligned.</p><p>Each <b>image</b> should be less than <b>2MB</b>. Note: pdf files are not supported.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0"><div class=pad-left0 uk-lightbox><div ng-if=data.files[0]><a class=uk-inline ng-href={{data.files[0]}}><img width=300 ng-src={{data.files[0]}} max-width=50%; height="" alt="" ng-if="data.files[0].indexOf(\'pdf\') == -1"></a><object data={{data.files[0]}} type=application/pdf width=300 height=300 ng-if="data.files[0].indexOf(\'pdf\') != -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.files[0] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.files[0] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.files[0]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit="extract(\'individualPan\')"><h3 class=uk-text-bold>PAN Card Details Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>PAN Image File</label><input class=uk-input type=text ng-model=data.files[0] placeholder="PAN Card Image(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.files.length == 0"><span ng-hide=loading>Extract</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.extractedResponse && !loading"><pre pretty-json=data.extractedResponse></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div></div>'), e.put("app/vault/cosmoextraction/cosmo-passport.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Passport Extraction</a></h1><p>Before going for Auto reading, you first need to create an Identity object. For best results, please make sure the image you use fits tightly in camera view and is horizontally-aligned. Each image should be less than 2MB. Note: pdf files are not supported.</p><hr class=uk-margin><p>Passport reading system accepts direct URL to the front and back sides.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0" uk-grid><div class="uk-width-1-2@s pad-left0" uk-lightbox><div ng-if=data.files[0]><a class=uk-inline ng-href={{data.files[0]}}><img ng-src={{data.files[0]}} max-width=50%; height="" alt="" ng-if="data.files[0].indexOf(\'pdf\') == -1"></a><object data={{data.files[0]}} type=application/pdf width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') != -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.files[0] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.files[0] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.files[0]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Front file</span></div></div><div class="uk-width-1-2@s pad-left20" uk-lightbox><div ng-if=data.files[1]><a class=uk-inline ng-href={{data.files[1]}}><img ng-src={{data.files[1]}} max-width=50%; height="" alt="" ng-if="data.files[1].indexOf(\'pdf\') == -1"></a><object data={{data.files[1]}} type=application/pdf width=400 height=400 ng-if="data.files[1].indexOf(\'pdf\') != -1"></object><span ngf-select=fileUpload($file,1) ng-model=data.files[1] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.files[1] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.files[1]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 1)" ng-model=data.files[1] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Back file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit="extract(\'passport\')"><h3 class=uk-text-bold>Passport Card Details Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Passport Front Image File</label><input class=uk-input type=text ng-model=data.files[0] placeholder="Passport Card Front Side Image(URL)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Passport Back Image File</label><input class=uk-input type=text ng-model=data.files[1] placeholder="Passport Card Back Side Image(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.files.length < 2"><span ng-hide=loading>Extract</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.extractedResponse && !loading"><pre pretty-json=data.extractedResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div>'), e.put("app/vault/cosmoextraction/cosmo-voterid.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>VoterId Extraction</a></h1><p class=uk-text-lead>Auto-reading VoterId</p><p>First upload the two sides of an voterId card. Then click on extraction. You may put direct URL to front side if you have one.</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and there are no background borders.</p><p>Each <b>image</b> should be less than <b>2MB</b>. Note: pdf files are not supported.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0" uk-grid><div class="uk-width-1-2@s pad-left0" uk-lightbox><div ng-if=data.files[0]><a class=uk-inline ng-href={{data.files[0]}}><img ng-src={{data.files[0]}} max-width=50%; height="" alt="" ng-if="data.files[0].indexOf(\'pdf\') == -1"></a><object data={{data.files[0]}} type=application/pdf width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') != -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.files[0] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.files[0] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.files[0]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Front file</span></div></div><div class="uk-width-1-2@s pad-left20" uk-lightbox><div ng-if=data.files[1]><a class=uk-inline ng-href={{data.files[1]}}><img ng-src={{data.files[1]}} max-width=50%; height="" alt="" ng-if="data.files[1].indexOf(\'pdf\') == -1"></a><object data={{data.files[1]}} type=application/pdf width=400 height=400 ng-if="data.files[1].indexOf(\'pdf\') != -1"></object><span ngf-select=fileUpload($file,1) ng-model=data.files[1] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.files[1] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.files[1]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 1)" ng-model=data.files[1] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Back file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit="extract(\'voterid\')"><h3 class=uk-text-bold>VoterId Details Extraction</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Voterid Front Image File</label><input class=uk-input type=text ng-model=data.files[0] placeholder="Voterid Card Front Side Image(URL)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Voterid Back Image File</label><input class=uk-input type=text ng-model=data.files[1] placeholder="Voterid Card Back Side Image(URL)"></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.files.length < 2"><span ng-hide=loading>Extract</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.extractedResponse && !loading"><pre pretty-json=data.extractedResponse></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div>'), e.put("app/backgroundcheck/amlcft/worldwatch/get-risk-report.html", '<div><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>WorldWatch(AML/CFT) sandbox</a></h1><p>Try searching for any person/organization here.</p><form class="uk-form-horizontal uk-margin-large" ng-submit=worldwatchSearch()><h3 class=uk-text-bold>Basic Search</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Name</label><input class=uk-input type=text ng-model=data.name placeholder=Name required></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>User Type</label><select class=uk-select ng-model=data.type><option value=entity>Entity</option><option value=individual>Individual</option></select></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Alias Names</label><textarea class=uk-textarea ng-model=data.aliasArray placeholder="Alias Names"></textarea></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Country</label><input class=uk-input type=text ng-model=data.country placeholder=Country></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>City</label><input class=uk-input type=text ng-model=data.city placeholder=City></div></div><div class=uk-margin><!-- <div>\n                    <input class="uk-input"  type="text" ng-model="data.dob" placeholder="dd/mm/yyyy">\n                </div> --><div class=uk-inline><label class=uk-form-label for=form-stacked-text>DOB</label><datepicker date-format=dd/MM/yyyy date-max-limit={{today}}><input class="uk-input w350" placeholder=dd/mm/yyyy ng-model=data.dob type=text></datepicker></div></div><div class=uk-margin><label for="">Watch List</label><!-- Category --></div><div class=uk-margin><div><input class=uk-checkbox type=checkbox ng-model=categoryData.watchList.sanctions><span class=check-pad>Sanctions</span> <input class=uk-checkbox type=checkbox ng-model=categoryData.watchList.finance><span class=check-pad>Finance</span> <input class=uk-checkbox type=checkbox ng-model=categoryData.watchList.terrorism><span class=check-pad>Terrorism</span> <input class=uk-checkbox type=checkbox ng-model=categoryData.watchList.ofac><span class=check-pad>OFAC</span> <input class=uk-checkbox type=checkbox ng-model=categoryData.watchList.samgov><span class=check-pad>SAMGOV</span> <input class=uk-checkbox type=checkbox ng-model=categoryData.watchList.medical><span class=check-pad>Medical</span></div></div><div class=uk-margin><label for="">Political Exposure</label><!-- Category --></div><div class=uk-margin><div><input class=uk-checkbox type=checkbox ng-model=categoryData.politicalExposure.gov><span class=check-pad>GOV</span> <input class=uk-checkbox type=checkbox ng-model=categoryData.politicalExposure.soe><span class=check-pad>SOE</span> <input class=uk-checkbox type=checkbox ng-model=categoryData.politicalExposure.pepd><span class=check-pad>PEPD</span></div></div><div class=uk-margin><label for="">Negative Media</label><!-- Category --></div><div class=uk-margin><div><input class=uk-checkbox type=checkbox ng-model=categoryData.negativeMedia.nmedia><span class=check-pad>NMedia</span></div></div><p uk-margin class="uk-margin uk-text-center"><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.name ==\'\'"><span ng-hide=loading>Search</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.worldwatchData && !loading"><pre pretty-json=data.worldwatchData></pre></div></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div>'), e.put("app/forensics/forgery/v1/aadhaar.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Aadhaar Forgery</a></h1><p>First upload the two sides of an aadhaar card. You may put direct URLs to front and back sides, in case you have them.</p><p>The <b>Auto-Read</b> API prefils verification section. Please <b>validate</b> the data before sending for verification.</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and is horizontally-aligned.</p><p>Each <b>image/pdf</b> should be less than <b>2MB</b>.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0" uk-grid><div class="uk-width-1-2@s pad-left0" uk-lightbox><div ng-if="data.files[0].length > 0"><a class=uk-inline ng-href={{data.files[0]}}><img ng-src={{data.files[0]}} width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') == -1"></a><object data={{data.files[0]}} type=application/pdf width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.files[0] uk-icon="icon: file-edit" class=uk-link ng-if="data.files[0].length > 0">&nbsp;</span> <a ng-click="data.files[0] =\'\'" uk-icon="icon: trash" ng-if="data.files[0].length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Front file</span></div></div><div class="uk-width-1-2@s pad-left20" uk-lightbox><div ng-if=data.files[1]><a class=uk-inline ng-href={{data.files[1]}}><img ng-src={{data.files[1]}} width=400 height=400 ng-if="data.files[1].indexOf(\'pdf\') == -1"></a><object data={{data.files[1]}} type=application/pdf width=400 height=400 ng-if="data.files[1].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,1) ng-model=data.files[1] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.files[1] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.files[1]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 1)" ng-model=data.files[1] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Back file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=aadhaar()><h3 class=uk-text-bold>Aadhaar Card Forgery Check</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Aadhaar Front Image File</label><input class=uk-input type=text ng-model=data.files[0] placeholder="Aadhaar Card Front Side Image(URL)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Aadhaar Back Image File</label><input class=uk-input type=text ng-model=data.files[1] placeholder="Aadhaar Card Back Side Image(URL)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Name</label><input class=uk-input type=text ng-model=data.name placeholder=Name></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>YOB/DOB</label><input class=uk-input type=text ng-model=data.yob placeholder=YOB/DOB></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Aadhaar Number</label><input class=uk-input type=text ng-model=data.uid placeholder="Aadhaar Number(UID)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Pincode</label><input class=uk-input type=text ng-model=data.pincode placeholder=pincode></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.files.length < 2 || data.name == \'\'|| data.yob == \'\' || data.uid == \'\' || data.pincode == \'\'"><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.forgeryData && !loading"><p ng-repeat="(key,value) in data.forgeryData" ng-hide="key == \'fields\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><p ng-repeat="(key,value) in data.forgeryData.fields"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.forgeryData></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div></div>'), e.put("app/forensics/forgery/v1/businessPan.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Business PAN Forgery</a></h1><p>First upload the business PAN. You may put direct URLs in case you have them.</p><p>The <b>Auto-Read</b> API prefils verification section. Please <b>validate</b> the data before sending for verification.</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and is horizontally-aligned.</p><p>Each <b>image/pdf</b> should be less than <b>2MB</b>.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0"><div class=pad-left0 uk-lightbox><div ng-if="data.files[0].length > 0"><a class=uk-inline ng-href={{data.files[0]}}><img ng-src={{data.files[0]}} width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') == -1"></a><object data={{data.files[0]}} type=application/pdf width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.files[0] uk-icon="icon: file-edit" class=uk-link ng-if="data.files[0].length > 0">&nbsp;</span> <a ng-click="data.files[0] =\'\'" uk-icon="icon: trash" ng-if="data.files[0].length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=businesspan()><h3 class=uk-text-bold>businesspan Forgery Check</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>businesspan Front Image File</label><input class=uk-input type=text ng-model=data.files[0] placeholder="businesspan Front Side Image(URL)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Name</label><input class=uk-input type=text ng-model=data.name placeholder=Name></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Date of Issue</label><input class=uk-input type=text ng-model=data.doi placeholder="Date of Issue"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>business pan Number</label><input class=uk-input type=text ng-model=data.number placeholder=PAN></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.files.length < 1 || data.name == \'\'|| data.doi == \'\' || data.number == \'\'"><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.forgeryData && !loading"><p ng-repeat="(key,value) in data.forgeryData" ng-hide="key == \'fields\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><p ng-repeat="(key,value) in data.forgeryData.fields"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.forgeryData></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div></div>'), e.put("app/forensics/forgery/v1/drivingLicence.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Driving License Forgery</a></h1><p>First upload the Driving License . You may put direct URLs in case you have them.</p><p>The <b>Auto-Read</b> API prefils verification section. Please <b>validate</b> the data before sending for verification.</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and is horizontally-aligned.</p><p>Each <b>image/pdf</b> should be less than <b>2MB</b>.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0"><div class=pad-left0 uk-lightbox><div ng-if="data.files[0].length > 0"><a class=uk-inline ng-href={{data.files[0]}}><img ng-src={{data.files[0]}} width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') == -1"></a><object data={{data.files[0]}} type=application/pdf width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.files[0] uk-icon="icon: file-edit" class=uk-link ng-if="data.files[0].length > 0">&nbsp;</span> <a ng-click="data.files[0] =\'\'" uk-icon="icon: trash" ng-if="data.files[0].length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=drivinglicense()><h3 class=uk-text-bold>drivingLicense Forgery Check</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>drivingLicense Front Image File</label><input class=uk-input type=text ng-model=data.files[0] placeholder="drivingLicense Front Side Image(URL)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Name</label><input class=uk-input type=text ng-model=data.name placeholder=Name></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Date of Birth</label><input class=uk-input type=text ng-model=data.dob placeholder=DOB></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>DL Number</label><input class=uk-input type=text ng-model=data.number placeholder="DL Number"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Pincode</label><input class=uk-input type=text ng-model=data.pincode placeholder=pincode></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.files.length < 1 || data.name == \'\'|| data.dob == \'\' || data.number == \'\' || data.pincode == \'\'"><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.forgeryData && !loading"><p ng-repeat="(key,value) in data.forgeryData" ng-hide="key == \'fields\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><p ng-repeat="(key,value) in data.forgeryData.fields"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.forgeryData></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div></div>'),
            e.put("app/forensics/forgery/v1/individualPan.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Individual PAN Forgery</a></h1><p>First upload the Individual PAN. You may put direct URLs in case you have them.</p><p>The <b>Auto-Read</b> API prefils verification section. Please <b>validate</b> the data before sending for verification.</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and is horizontally-aligned.</p><p>Each <b>image/pdf</b> should be less than <b>2MB</b>.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0"><div class=pad-left0 uk-lightbox><div ng-if="data.files[0].length > 0"><a class=uk-inline ng-href={{data.files[0]}}><img ng-src={{data.files[0]}} width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') == -1"></a><object data={{data.files[0]}} type=application/pdf width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.files[0] uk-icon="icon: file-edit" class=uk-link ng-if="data.files[0].length > 0">&nbsp;</span> <a ng-click="data.files[0] =\'\'" uk-icon="icon: trash" ng-if="data.files[0].length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=individualpan()><h3 class=uk-text-bold>individualpan Forgery Check</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>individualpan Front Image File</label><input class=uk-input type=text ng-model=data.files[0] placeholder="individualpan Front Side Image(URL)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Name</label><input class=uk-input type=text ng-model=data.name placeholder=Name></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Date of Birth</label><input class=uk-input type=text ng-model=data.dob placeholder=DOB></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>individual pan Number</label><input class=uk-input type=text ng-model=data.number placeholder=PAN></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.files.length < 1 || data.name == \'\'|| data.dob == \'\' || data.number == \'\'"><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.forgeryData && !loading"><p ng-repeat="(key,value) in data.forgeryData" ng-hide="key == \'fields\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><p ng-repeat="(key,value) in data.forgeryData.fields"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.forgeryData></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div></div></div>'), e.put("app/forensics/forgery/v1/passport.html", '<div><!----><div><h1 id=right-to-left-support class="uk-h1 tm-heading-fragment"><a href=#right-to-left-support>Passport Forgery</a></h1><p>First upload the two sides of an Passport. You may put direct URLs to front and back sides, in case you have them.</p><p>The <b>Auto-Read</b> API prefils verification section. Please <b>validate</b> the data before sending for verification.</p><p>For best results, please make sure the image you use <b>fits tightly in camera view</b> and is horizontally-aligned.</p><p>Each <b>image/pdf</b> should be less than <b>2MB</b>.</p><br><br><div class="test-upload uk-placeholder uk-text-center uk-grid-large mar-0" uk-grid><div class="uk-width-1-2@s pad-left0" uk-lightbox><div ng-if="data.files[0].length > 0"><a class=uk-inline ng-href={{data.files[0]}}><img ng-src={{data.files[0]}} width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') == -1"></a><object data={{data.files[0]}} type=application/pdf width=400 height=400 ng-if="data.files[0].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,0) ng-model=data.files[0] uk-icon="icon: file-edit" class=uk-link ng-if="data.files[0].length > 0">&nbsp;</span> <a ng-click="data.files[0] =\'\'" uk-icon="icon: trash" ng-if="data.files[0].length > 0"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide="data.files[0].length > 0"><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 0)" ng-model=data.files[0] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Front file</span></div></div><div class="uk-width-1-2@s pad-left20" uk-lightbox><div ng-if=data.files[1]><a class=uk-inline ng-href={{data.files[1]}}><img ng-src={{data.files[1]}} width=400 height=400 ng-if="data.files[1].indexOf(\'pdf\') == -1"></a><object data={{data.files[1]}} type=application/pdf width=400 height=400 ng-if="data.files[1].indexOf(\'pdf\') > -1"></object><span ngf-select=fileUpload($file,1) ng-model=data.files[1] uk-icon="icon: file-edit" class=uk-link>&nbsp;</span> <a ng-click="data.files[1] =\'\'" uk-icon="icon: trash"></a></div><div class="test-upload uk-placeholder uk-text-center mar-0" ng-hide=data.files[1]><span uk-icon="icon: cloud-upload"></span> <span ngf-select="fileUpload($files, 1)" ng-model=data.files[1] ngf-max-size=20MB ngf-drop="" class=uk-link>&nbsp;Upload Back file</span></div></div></div><form class="uk-form-horizontal uk-margin-large" ng-submit=passport()><h3 class=uk-text-bold>Passport Forgery Check</h3><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Passport Front Image File</label><input class=uk-input type=text ng-model=data.files[0] placeholder="Passport Front Side Image(URL)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Passport Back Image File</label><input class=uk-input type=text ng-model=data.files[1] placeholder="Passport Back Side Image(URL)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Name</label><input class=uk-input type=text ng-model=data.name placeholder=Name></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Date of Birth</label><input class=uk-input type=text ng-model=data.birthDate placeholder="Date of Birth"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Passport Number</label><input class=uk-input type=text ng-model=data.passportNumber placeholder="Passport Number(UID)"></div></div><div class=uk-margin><div><label class=uk-form-label for=form-stacked-text>Pincode</label><input class=uk-input type=text ng-model=data.pincode placeholder=pincode></div></div><p uk-margin class=uk-text-center><button class="uk-button uk-button-primary uk-button-medium" ng-disabled="data.files.length < 2 || data.name == \'\'|| data.birthDate == \'\' || data.passportNumber == \'\' || data.pincode == \'\'"><span ng-hide=loading>Submit</span> <span uk-spinner ng-show=loading></span></button></p></form><hr class=uk-divider-icon><div class="uk-card uk-card-body bg-grey" ng-show="data.forgeryData && !loading"><p ng-repeat="(key,value) in data.forgeryData" ng-hide="key == \'fields\'"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><p ng-repeat="(key,value) in data.forgeryData.fields"><span class="uk-text-bold uk-text-capitalize" ng-bind="key + \':\'"></span><span class=pad-left10 ng-bind=value></span></p><pre pretty-json=data.forgeryData></pre></div><div class="uk-card uk-card-body bg-grey" ng-show="data.error && !loading"><div class=responseCard><pre pretty-json=data.error></pre></div></div><!-- <div class="uk-align-center blue-loader"  uk-spinner></div> --><!-- <span  class="uk-text-middle">&nbsp;Extracting File ...</span> --></div></div>')
    }]);
//# sourceMappingURL=../maps/scripts/app-5a9ade259d.js.map
